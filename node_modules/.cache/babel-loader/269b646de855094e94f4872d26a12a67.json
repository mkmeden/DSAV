{"ast":null,"code":"import t, { useState as e, useEffect as r, forwardRef as i, useImperativeHandle as n, useRef as o } from \"react\";\n\nvar l = \"balanced\",\n    a = \"complete\",\n    s = \"perfect\",\n    h = \"full\",\n    u = \"react-tree-vis\",\n    c = {\n  lineColor: {\n    variableName: \"--line-color\",\n    defaultValue: \"#ccc\",\n    description: \"Color of the line connecting nodes\"\n  },\n  lineHoverColor: {\n    variableName: \"--line-hover-color\",\n    defaultValue: \"#5f6674\",\n    description: \"Hover color of the line connecting nodes\"\n  },\n  lineRadius: {\n    variableName: \"--line-radius\",\n    defaultValue: \"5px\",\n    description: \"Radius of curves in the line\"\n  },\n  nodeBorder: {\n    variableName: \"--node-border\",\n    defaultValue: \"none\",\n    description: \"Border style of the nodes. Syntax of short-hand CSS border property is accepted here.\"\n  },\n  nodeBorderRadius: {\n    variableName: \"--node-border-radius\",\n    defaultValue: \"200px\",\n    description: \"\"\n  },\n  nodeBackgroundColor: {\n    variableName: \"--node-bg-color\",\n    defaultValue: \"#fff\",\n    description: \"\"\n  },\n  nodeFontColor: {\n    variableName: \"--node-font-color\",\n    defaultValue: \"#666\",\n    description: \"\"\n  },\n  nodeShadow: {\n    variableName: \"--node-shadow\",\n    defaultValue: \"-5px -5px 20px #fff, 5px 5px 20px #babecc\",\n    description: \"Syntax of short-hand CSS shadow property accepted here.\"\n  },\n  nodeTextShadow: {\n    variableName: \"--node-text-shadow\",\n    defaultValue: \"none\",\n    description: \"Syntax of short-hand CSS shadow property accepted here.\"\n  },\n  nodeFontSize: {\n    variableName: \"--node-font-size\",\n    defaultValue: \"20px\",\n    description: \"\"\n  },\n  nodeFontFamily: {\n    variableName: \"--node-font-family\",\n    defaultValue: \"arial, verdana, tahoma\",\n    description: \"\"\n  },\n  nodeAvlHeightFontSize: {\n    variableName: \"--node-avl-height-font-size\",\n    defaultValue: \"13px\",\n    description: \"\"\n  },\n  nodeRedBackgroundColor: {\n    variableName: \"--node-red-bg-color\",\n    defaultValue: \"#da606066\",\n    description: \"\"\n  },\n  nodeBlackBackgroundColor: {\n    variableName: \"--node-black-bg-color\",\n    defaultValue: \"#acacac66\",\n    description: \"\"\n  },\n  nodeHighlightBorder: {\n    variableName: \"--node-hl-border\",\n    defaultValue: \"none\",\n    description: \"Syntax of short-hand CSS border property is accepted here.\"\n  },\n  nodeHighlightBackgroundColor: {\n    variableName: \"--node-hl-bg-color\",\n    defaultValue: \"#fff\",\n    description: \"\"\n  },\n  nodeHighlightFontColor: {\n    variableName: \"--node-hl-font-color\",\n    defaultValue: \"#fff\",\n    description: \"\"\n  },\n  nodeHighlightShadow: {\n    variableName: \"--node-hl-shadow\",\n    defaultValue: \"-5px -5px 20px #fff, 5px 5px 20px #babecc\",\n    description: \"Syntax of short-hand CSS shadow property accepted here.\"\n  },\n  nodeHighlightTextShadow: {\n    variableName: \"--node-hl-text-shadow\",\n    defaultValue: \"0 0 5px #fff, 0 0 10px #fff, 0 0 15px #00ff15, 0 0 20px #00ff15, 0 0 25px #00ff15, 0 0 30px #00ff15, 0 0 35px #00ff15\",\n    description: \"Syntax of short-hand CSS shadow property accepted here.\"\n  },\n  nodeHoverBorder: {\n    variableName: \"--node-hover-border\",\n    defaultValue: \"none\",\n    description: \"Syntax of short-hand CSS border property is accepted here.\"\n  },\n  nodeHoverBackgroundColor: {\n    variableName: \"--node-hover-bg-color\",\n    defaultValue: \"#fff\",\n    description: \"\"\n  },\n  nodeHoverFontColor: {\n    variableName: \"--node-hover-font-color\",\n    defaultValue: \"#002574\",\n    description: \"\"\n  },\n  nodeHoverShadow: {\n    variableName: \"--node-hover-shadow\",\n    defaultValue: \"-1px -1px 5px #fff, 1px 1px 5px #babecc\",\n    description: \"Syntax of short-hand CSS shadow property accepted here.\"\n  },\n  nodeHoverTextShadow: {\n    variableName: \"--node-hover-text-shadow\",\n    defaultValue: \"none\",\n    description: \"Syntax of short-hand CSS shadow property accepted here.\"\n  },\n  nodeNullFontColor: {\n    variableName: \"--node-null-font-color\",\n    defaultValue: \"#7c7c7c2f\",\n    description: \"\"\n  },\n  nodeNullHoverFontColor: {\n    variableName: \"--node-null-hover-font-color\",\n    defaultValue: \"#ff0000b9\",\n    description: \"\"\n  },\n  transitionDuration: {\n    variableName: \"--transition\",\n    defaultValue: \"0.5s\",\n    description: \"\"\n  }\n},\n    d = t.createElement(\"li\", {\n  className: \"null\"\n}, t.createElement(\"div\", null, \"null\")),\n    f = function (e, r, i, n) {\n  return void 0 === n && (n = !1), t.createElement(\"li\", {\n    key: e\n  }, t.createElement(\"div\", {\n    className: \"normal \" + (n ? \"highlight\" : \"\")\n  }, e), t.createElement(\"ul\", null, r, \" \", i));\n},\n    p = function () {\n  function t(t) {\n    this.value = t, this.left = null, this.right = null, this.parent = null, this.leftJSX = d, this.rightJSX = d, this.currentJSX = f(this.value, this.leftJSX, this.rightJSX);\n  }\n\n  return t.prototype.insert = function (t, e) {\n    var r = t.currentJSX;\n    e ? this.leftJSX = r : this.rightJSX = r, this.setJSX(), this.updateRootJSX();\n  }, t.prototype.setJSX = function () {\n    this.currentJSX = f(this.value, this.leftJSX, this.rightJSX);\n  }, t.prototype.updateRootJSX = function () {\n    null !== this.parent && (this.parent.left === this ? this.parent.insert(this, !0) : this.parent.insert(this, !1));\n  }, t.prototype.setChildToNull = function (t) {\n    t ? this.leftJSX = d : this.rightJSX = d, this.setJSX(), this.updateRootJSX();\n  }, t.prototype.setChildToChildsChild = function (t, e) {\n    t ? e ? (this.leftJSX = this.left.left.currentJSX, this.setJSX()) : (this.leftJSX = this.left.right.currentJSX, this.setJSX()) : e ? (this.rightJSX = this.right.left.currentJSX, this.setJSX()) : (this.rightJSX = this.right.right.currentJSX, this.setJSX()), this.updateRootJSX();\n  }, t.prototype.remove = function (t) {\n    this.parent && (t ? \"left\" === t ? this.parent.left === this ? this.parent.setChildToChildsChild(!0, !0) : this.parent.setChildToChildsChild(!1, !0) : this.parent.left === this ? this.parent.setChildToChildsChild(!0, !1) : this.parent.setChildToChildsChild(!1, !1) : this.parent.left === this ? this.parent.setChildToNull(!0) : this.parent.setChildToNull(!1));\n  }, t.prototype.updateValue = function (t) {\n    this.value = t, this.setJSX(), this.updateRootJSX();\n  }, t.prototype.addHighlight = function () {\n    this.currentJSX = f(this.value, this.leftJSX, this.rightJSX, !0), this.updateRootJSX();\n  }, t.prototype.clearHighlight = function () {\n    this.setJSX(), this.updateRootJSX();\n  }, t.prototype.balanceJSX = function () {\n    !this.left && this.right ? (this.rightJSX = this.right.currentJSX, this.setChildToNull(!0)) : !this.right && this.left ? (this.leftJSX = this.left.currentJSX, this.setChildToNull(!1)) : this.right && this.left ? (this.leftJSX = this.left.currentJSX, this.rightJSX = this.right.currentJSX, this.setJSX(), this.updateRootJSX()) : (this.leftJSX = d, this.rightJSX = d, this.setJSX(), this.updateRootJSX());\n  }, t;\n}(),\n    v = function () {\n  function t(t) {\n    void 0 === t && (t = 0), this.root = null, t && this.generateRandomBST(t), this.highlightedNode = null, this.leafDepth = -1;\n  }\n\n  return t.prototype.insert = function (t) {\n    this.clearHighlight();\n    var e = new p(t);\n    null === this.root ? this.root = e : this.insertNode(this.root, e);\n  }, t.prototype.insertNode = function (t, e) {\n    e.value < t.value ? null === t.left ? (t.left = e, e.parent = t, t.insert(e, !0)) : this.insertNode(t.left, e) : null === t.right ? (t.right = e, e.parent = t, t.insert(e, !1)) : this.insertNode(t.right, e);\n  }, t.prototype.findMax = function (t) {\n    return void 0 === t && (t = this.root), null == t || null == t.right ? t : this.findMax(t.right);\n  }, t.prototype.findMin = function (t) {\n    return void 0 === t && (t = this.root), null == t || null == t.left ? t : this.findMin(t.left);\n  }, t.prototype.remove = function (t) {\n    this.clearHighlight(), this.root = this.removeNode(this.root, t);\n  }, t.prototype.removeNode = function (t, e) {\n    if (null === t) return null;\n    if (e < t.value) return t.left = this.removeNode(t.left, e), t;\n    if (e > t.value) return t.right = this.removeNode(t.right, e), t;\n    if (null === t.left && null === t.right) return t.remove(null), t = null;\n    if (null === t.left) return t.remove(\"right\"), t.right.parent = t.parent, t = t.right;\n    if (null === t.right) return t.remove(\"left\"), t.left.parent = t.parent, t = t.left;\n    var r = this.findMin(t.right);\n    return t.updateValue(r.value), t.right = this.removeNode(t.right, r.value), t;\n  }, t.prototype.height = function (t) {\n    return void 0 === t && (t = this.root), null === t ? -1 : (e = this.height(t.left), (e = Math.max(this.height(t.right), e)) + 1);\n    var e;\n  }, t.prototype.countNodes = function (t) {\n    return void 0 === t && (t = this.root), null === t ? 0 : this.countNodes(t.left) + 1 + this.countNodes(t.right);\n  }, t.prototype.preorder = function (t, e) {\n    void 0 === e && (e = this.root), null !== e && (t.push(e.value), this.preorder(t, e.left), this.preorder(t, e.right));\n  }, t.prototype.inorder = function (t, e) {\n    void 0 === e && (e = this.root), null !== e && (this.inorder(t, e.left), t.push(e.value), this.inorder(t, e.right));\n  }, t.prototype.postorder = function (t, e) {\n    void 0 === e && (e = this.root), null !== e && (this.postorder(t, e.left), this.postorder(t, e.right), t.push(e.value));\n  }, t.prototype.search = function (t, e) {\n    return void 0 === e && (e = this.root), this.clearHighlight(), null !== e && (e.value === t ? (e.addHighlight(), this.highlightedNode = e, !0) : e.value > t ? this.search(t, e.left) : this.search(t, e.right));\n  }, t.prototype.generateRandomBST = function (t) {\n    for (var e = 2 * t + 10, r = new Set(), i = 0; i < t; i++) {\n      for (var n = Math.floor(Math.random() * (0 - e + 1)) + e; r.has(n);) n = Math.floor(Math.random() * (0 - e + 1)) + e;\n\n      r.add(n), this.insert(n);\n    }\n  }, t.prototype.checkBST = function () {\n    var t = l,\n        e = a,\n        r = h,\n        i = s,\n        n = [];\n    return this.isBalanced() && n.push(t), this.isComplete() && n.push(e), this.isPerfect() && n.push(r), this.isFull() && n.push(i), n;\n  }, t.prototype.isBalanced = function (t) {\n    if (void 0 === t && (t = this.root), null === t) return !0;\n    var e = this.height(t.left),\n        r = this.height(t.right);\n    return Math.abs(e - r) <= 1 && this.isBalanced(t.left) && this.isBalanced(t.right);\n  }, t.prototype.isComplete = function () {\n    var t = this.countNodes();\n    return this.isComplete2(0, t);\n  }, t.prototype.isComplete2 = function (t, e, r) {\n    if (void 0 === r && (r = this.root), null === r) return !0;\n    if (t >= e) return !1;\n    var i = this.isComplete2(2 * t + 1, e, r.left);\n    return i && (i = this.isComplete2(2 * t + 2, e, r.right)), i;\n  }, t.prototype.isPerfect = function () {\n    return !(!this.isFull() || !this.isComplete()) && this.isPerfect2();\n  }, t.prototype.isPerfect2 = function (t, e) {\n    if (void 0 === t && (t = this.root), void 0 === e && (e = 0), !t) return !0;\n\n    if (e++, !t.right && !t.left) {\n      if (-1 !== this.leafDepth && this.leafDepth !== e) return !1;\n      this.leafDepth = e;\n    }\n\n    return this.isPerfect2(t.left, e) && this.isPerfect2(t.right, e);\n  }, t.prototype.isFull = function (t) {\n    if (void 0 === t && (t = this.root), null === t) return !0;\n    if (null === t.left && null === t.right) return !0;\n\n    if (null !== t.left && null !== t.right) {\n      var e = void 0;\n      return (e = this.isFull(t.left)) && (e = this.isFull(t.right)), e;\n    }\n\n    return !1;\n  }, t.prototype.balance = function (t) {\n    void 0 === t && (t = this.root), this.clearHighlight();\n    var e = [];\n    this.BSTToArr(t, e);\n    var r = e.length;\n    this.root = null, this.makeBST(e, 0, r - 1);\n  }, t.prototype.BSTToArr = function (t, e) {\n    null !== t && (this.BSTToArr(t.left, e), e.push(t), this.BSTToArr(t.right, e));\n  }, t.prototype.makeBST = function (t, e, r) {\n    if (!(e > r)) {\n      var i = Math.floor((e + r) / 2);\n      this.insert(t[i].value), this.makeBST(t, e, i - 1), this.makeBST(t, i + 1, r);\n    }\n  }, t.prototype.clearHighlight = function () {\n    this.highlightedNode && (this.highlightedNode.clearHighlight(), this.highlightedNode = null);\n  }, t;\n}();\n\nfunction g(t) {\n  var r,\n      i = e(t),\n      n = i[0],\n      o = i[1],\n      l = e(null === (r = t) || void 0 === r ? void 0 : r.root.currentJSX),\n      a = l[0],\n      s = l[1];\n  return {\n    tree: n,\n    treeJSX: a,\n    setTree: function (t) {\n      var e, r, i;\n      o(t), s((null === (r = null === (e = t) || void 0 === e ? void 0 : e.root) || void 0 === r ? void 0 : r.currentJSX) || (null === (i = t) || void 0 === i ? void 0 : i.currentJSX));\n    }\n  };\n}\n\nvar m = function (t) {\n  r(function () {\n    !function () {\n      if (t) for (var e = 0, r = Object.entries(t); e < r.length; e++) {\n        var i = r[e],\n            n = i[0],\n            o = i[1];\n        document.getElementById(u).style.setProperty(c[n].variableName, o);\n      }\n    }();\n  }, [t]);\n};\n\n!function (t, e) {\n  void 0 === e && (e = {});\n  var r = e.insertAt;\n\n  if (t && \"undefined\" != typeof document) {\n    var i = document.head || document.getElementsByTagName(\"head\")[0],\n        n = document.createElement(\"style\");\n    n.type = \"text/css\", \"top\" === r && i.firstChild ? i.insertBefore(n, i.firstChild) : i.appendChild(n), n.styleSheet ? n.styleSheet.cssText = t : n.appendChild(document.createTextNode(t));\n  }\n}(\"#react-tree-vis {\\n  --line-color: #ccc;\\n  --line-hover-color: #5f6674;\\n  --line-radius: 5px;\\n\\n  --node-border: none;\\n  --node-border-radius: 200px;\\n  --node-bg-color: #fff;\\n  --node-font-color: #666;\\n  --node-shadow: -5px -5px 20px #fff, 5px 5px 20px #babecc;\\n  --node-text-shadow: none;\\n  /* FIXME: Undocumented */\\n  --node-font-size: 20px;\\n  --node-font-family: arial, verdana, tahoma;\\n  --node-avl-height-font-size: 13px;\\n  --node-red-bg-color: #da6060;\\n  --node-black-bg-color: #acacac;\\n  /* FIXME: Undocumented over */\\n\\n  /* highlighted node */\\n  --node-hl-border: none;\\n  --node-hl-bg-color: #fff;\\n  --node-hl-font-color: #fff;\\n  --node-hl-shadow: -5px -5px 20px #fff, 5px 5px 20px #babecc;\\n  --node-hl-text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #00ff15,\\n    0 0 20px #00ff15, 0 0 25px #00ff15, 0 0 30px #00ff15, 0 0 35px #00ff15;\\n\\n  --node-hover-border: none;\\n  --node-hover-bg-color: #fff;\\n  --node-hover-font-color: #002574;\\n  --node-hover-shadow: -1px -1px 5px #fff, 1px 1px 5px #babecc;\\n  --node-hover-text-shadow: none;\\n\\n  --node-null-font-color: #7c7c7c2f;\\n  --node-null-hover-font-color: #ff0000b9;\\n\\n  --transition: 0.5s;\\n}\\n\\n#react-tree-vis ul {\\n  padding: 0;\\n  padding-top: 20px;\\n  position: relative;\\n  transition: all var(--transition);\\n}\\n\\n#react-tree-vis > ul {\\n  width: fit-content;\\n  margin: 0 auto;\\n}\\n\\n#react-tree-vis li {\\n  float: left;\\n  text-align: center;\\n  list-style-type: none;\\n  position: relative;\\n  padding: 10px 1px 0 1px;\\n  transition: all var(--transition);\\n}\\n\\n/* Line Styles */\\n#react-tree-vis li::before,\\n#react-tree-vis li::after {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  right: 50%;\\n  border-top: 1px solid var(--line-color);\\n  width: 50%;\\n  height: 10px;\\n  transition: all var(--transition);\\n}\\n\\n#react-tree-vis li::after {\\n  right: auto;\\n  left: 50%;\\n  border-left: 1px solid var(--line-color);\\n}\\n\\n#react-tree-vis li:last-child::before {\\n  border-right: 1px solid var(--line-color);\\n  border-radius: 0 var(--line-radius) 0 0;\\n}\\n\\n#react-tree-vis li:first-child::after {\\n  border-radius: var(--line-radius) 0 0 0;\\n}\\n\\n#react-tree-vis ul ul::before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: 50%;\\n  border-left: 1px solid var(--line-color);\\n  width: 0;\\n  height: 20px;\\n  transition: all var(--transition);\\n}\\n\\n#react-tree-vis li:only-child::after,\\n#react-tree-vis li:only-child::before {\\n  display: none;\\n}\\n\\n#react-tree-vis li:only-child {\\n  padding-top: 0;\\n}\\n\\n#react-tree-vis li:first-child::before,\\n#react-tree-vis li:last-child::after {\\n  border: 0 none;\\n}\\n\\n/* Node Styles starts */\\n#react-tree-vis li div {\\n  padding: 6px 12px;\\n  text-decoration: none;\\n  color: var(--node-font-color);\\n  font-family: var(--node-font-family);\\n  font-size: var(--node-font-size);\\n  display: inline-block;\\n  box-shadow: var(--node-shadow);\\n  text-shadow: var(--node-text-shadow);\\n  border-radius: var(--node-border-radius);\\n  border: var(--node-border);\\n  background-color: var(--node-bg-color);\\n  transition: all var(--transition);\\n}\\n\\n#react-tree-vis li div.end {\\n  color: #c20000;\\n}\\n\\n#react-tree-vis li div.red {\\n  background-color: var(--node-red-bg-color);\\n}\\n\\n#react-tree-vis li div.black {\\n  background-color: var(--node-black-bg-color);\\n}\\n\\n#react-tree-vis li div.highlight {\\n  background-color: var(--node-hl-bg-color);\\n  border: var(--node-hl-border);\\n  box-shadow: var(--node-hl-shadow);\\n  color: var(--node-hl-font-color);\\n  text-shadow: var(--node-hl-text-shadow);\\n}\\n\\n/* Hover Styles starts */\\n#react-tree-vis li div:hover {\\n  border: var(--node-hover-border);\\n  color: var(--node-hover-font-color);\\n  background-color: var(--node-hover-bg-color);\\n  box-shadow: var(--node-hover-shadow);\\n  text-shadow: var(--node-hover-text-shadow);\\n}\\n\\n#react-tree-vis li div:hover + ul li::after,\\n#react-tree-vis li div:hover + ul li::before,\\n#react-tree-vis li div:hover + ul::before,\\n#react-tree-vis li div:hover + ul ul::before {\\n  border-color: var(--line-hover-color);\\n}\\n\\n#react-tree-vis li.null div {\\n  color: var(--node-null-font-color);\\n}\\n\\n#react-tree-vis li.null div:hover {\\n  color: var(--node-null-hover-font-color);\\n}\\n\\n#react-tree-vis .height {\\n  font-size: var(--node-avl-height-font-size);\\n}\\n\");\n\nvar y = function (t, e) {\n  if (t.length !== e.length) return !1;\n\n  for (var r = 0; r < t.length; r++) if (t[r] !== e[r]) return !1;\n\n  return !0;\n},\n    b = t.memo(i(function (e, i) {\n  var o = e.data,\n      l = e.treeStyles,\n      a = g(null),\n      s = a.tree,\n      h = a.treeJSX,\n      c = a.setTree;\n  m(l), n(i, function () {\n    return {\n      insert: function (t) {\n        if (!(null == s ? void 0 : s.root)) {\n          var e = new v();\n          return e.insert(t), void c(e);\n        }\n\n        s.insert(t), c(s);\n      },\n      remove: function (t) {\n        return !!(null == s ? void 0 : s.root) && !!s.search(t) && (s.remove(t), c(s.root ? s : null), !0);\n      },\n      search: function (t) {\n        if (!(null == s ? void 0 : s.root)) return !1;\n        var e = s.search(t);\n        return e && c(s), e;\n      },\n      getData: function (t) {\n        var e = [];\n        return s[t](e), e;\n      },\n      clear: function () {\n        c(new v());\n      },\n      balance: function () {\n        s.balance(), c(s);\n      },\n      generateRandomTree: function (t) {\n        var e = new v(t);\n        c(e);\n      },\n      checkTreeType: function () {\n        return s.checkBST();\n      }\n    };\n  });\n  return r(function () {\n    var t;\n    o && (t = new v(), o.forEach(function (e) {\n      return t.insert(e);\n    }), c(t));\n  }, [o]), t.createElement(\"div\", {\n    id: u\n  }, t.createElement(\"ul\", null, h));\n}), function (t, e) {\n  return t.data && e.data && y(t.data, e.data);\n}),\n    S = [\"step\", \"tremble\", \"dinner\", \"gigantic\", \"elated\", \"torpid\", \"crook\", \"throat\", \"equal\", \"sum\", \"marked\", \"suggestion\", \"dapper\", \"afford\", \"happy\", \"mist\", \"robin\", \"spot\", \"reaction\", \"crayon\", \"irritate\", \"tightfisted\", \"warlike\", \"difficult\", \"distinct\", \"share\", \"spiffy\", \"suspend\", \"base\", \"squeak\", \"abundant\", \"unlock\", \"spiritual\", \"amuse\", \"chance\", \"crowded\", \"friendly\", \"shade\", \"telephone\", \"pig\", \"parcel\", \"part\", \"follow\", \"amount\", \"earthy\", \"collect\", \"sort\", \"drunk\", \"blow\", \"division\", \"curve\", \"seed\", \"sniff\", \"greet\", \"workable\", \"small\", \"detect\", \"week\", \"day\", \"truthful\", \"milk\", \"spotless\", \"coat\", \"escape\", \"debt\", \"optimal\", \"jar\", \"quixotic\", \"lick\", \"inconclusive\", \"bruise\", \"maid\", \"laugh\", \"scare\", \"perform\", \"chivalrous\", \"nonstop\", \"spiteful\", \"ignore\", \"toothbrush\", \"promise\", \"redundant\", \"impulse\", \"value\", \"chalk\", \"appear\", \"sloppy\", \"hook\", \"breathe\", \"wakeful\", \"supreme\", \"cat\", \"arm\", \"settle\", \"orange\", \"zoom\", \"territory\", \"damaging\", \"deliver\", \"children\", \"protect\", \"test\", \"cracker\", \"loutish\", \"disapprove\", \"clover\", \"fry\", \"blink\", \"snails\", \"neck\", \"experience\", \"boy\", \"rely\", \"expert\", \"sulky\", \"things\", \"nation\", \"jewel\", \"crowd\", \"tan\", \"uncovered\", \"abrupt\", \"sad\", \"rambunctious\", \"pricey\", \"slim\", \"skinny\", \"scissors\", \"hour\", \"cuddly\", \"potato\", \"lively\", \"dirt\", \"receipt\", \"great\", \"heap\", \"cherries\", \"lowly\", \"wide\", \"cowardly\", \"insect\", \"behave\", \"zephyr\", \"parallel\", \"interfere\", \"acoustics\", \"head\", \"stir\", \"increase\", \"steady\", \"insurance\", \"dashing\", \"shrug\", \"babies\", \"efficient\", \"chilly\", \"puncture\", \"excuse\", \"advice\", \"example\", \"tin\", \"dry\", \"substance\", \"jazzy\", \"employ\", \"lonely\", \"reduce\", \"majestic\", \"spicy\", \"gaudy\", \"wealthy\", \"rush\", \"channel\", \"harm\", \"quirky\", \"brief\", \"stamp\", \"thought\", \"blot\", \"shop\", \"relax\", \"destruction\", \"zebra\", \"fairies\", \"wish\", \"wobble\", \"wail\", \"light\", \"growth\", \"monkey\", \"mine\", \"yell\", \"boil\", \"egg\", \"shrill\", \"gate\", \"deserve\", \"lettuce\", \"play\", \"pick\", \"shaggy\", \"bee\", \"cross\", \"carry\", \"form\", \"malicious\", \"side\", \"dusty\", \"trick\", \"responsible\", \"visit\", \"maniacal\", \"vast\", \"mitten\", \"visitor\", \"feeling\", \"gorgeous\", \"sneaky\", \"zipper\", \"muddle\", \"thumb\", \"insidious\", \"fresh\", \"passenger\", \"flat\", \"giant\", \"penitent\", \"snail\", \"free\", \"dear\", \"group\", \"smiling\", \"reflect\", \"shut\", \"overjoyed\", \"key\", \"clammy\", \"stone\", \"judge\", \"repulsive\", \"plantation\", \"dreary\", \"town\", \"sincere\", \"expansion\", \"paddle\", \"push\", \"tray\", \"lewd\", \"mice\", \"board\", \"thank\", \"nut\", \"unpack\", \"wash\", \"sister\", \"brainy\", \"purple\", \"preach\", \"merciful\", \"sidewalk\", \"pathetic\", \"start\", \"limit\", \"naive\", \"fantastic\", \"rebel\", \"invent\", \"macho\", \"cellar\", \"sable\", \"list\", \"rob\", \"spiky\", \"savory\", \"cart\", \"nasty\", \"evanescent\", \"shame\", \"hurried\", \"calculator\", \"comb\", \"selfish\", \"internal\", \"axiomatic\", \"seat\", \"return\", \"different\", \"stream\", \"frogs\", \"oval\", \"same\", \"oafish\", \"tug\", \"thoughtless\", \"heady\", \"limping\", \"badge\", \"learned\", \"efficacious\", \"haunt\", \"annoying\", \"battle\", \"tooth\", \"heavy\", \"spectacular\", \"ajar\", \"silent\", \"statuesque\", \"earth\", \"zinc\", \"laborer\", \"boast\", \"faithful\", \"annoy\", \"honey\", \"women\", \"bells\", \"spare\", \"remind\", \"agreement\", \"wry\", \"slave\", \"pumped\", \"nebulous\", \"royal\", \"rot\", \"reign\", \"arrogant\", \"spotted\", \"wire\", \"judicious\", \"graceful\", \"defeated\", \"black\", \"piquant\", \"extend\", \"early\", \"belligerent\", \"dust\", \"cooing\", \"subdued\", \"lip\", \"messy\", \"snake\", \"save\", \"sheet\", \"bow\", \"hulking\", \"accept\", \"inquisitive\", \"mammoth\", \"elderly\", \"land\", \"kiss\", \"freezing\", \"aunt\", \"quack\", \"wave\", \"dogs\", \"knotty\", \"arrest\", \"bell\", \"one\", \"print\", \"underwear\", \"painful\", \"wicked\", \"birthday\", \"cream\", \"proud\", \"sour\", \"greedy\", \"surprise\", \"pray\", \"fetch\", \"furniture\", \"songs\", \"kitty\", \"metal\", \"painstaking\", \"hat\", \"adamant\", \"rifle\", \"charming\", \"scale\", \"heartbreaking\", \"friend\", \"blade\", \"plane\", \"cloth\", \"holistic\", \"yellow\", \"sassy\", \"terrible\", \"bad\", \"toes\", \"parched\", \"secretary\", \"rescue\", \"shiny\", \"need\", \"sticky\", \"explode\", \"squeeze\", \"dime\", \"ancient\", \"idiotic\", \"box\", \"pot\", \"field\", \"handy\", \"cent\", \"drop\", \"rings\", \"taste\", \"bead\", \"ear\", \"camera\", \"month\", \"move\", \"awful\", \"identify\", \"yielding\", \"omniscient\", \"governor\", \"handsome\", \"vegetable\", \"team\", \"odd\", \"sand\", \"show\", \"sweet\", \"numberless\", \"infamous\", \"frightened\", \"watery\", \"wool\", \"cobweb\", \"coal\", \"observe\", \"connection\", \"song\", \"faulty\", \"deafening\", \"jog\", \"match\", \"complain\", \"cut\", \"servant\", \"skirt\", \"sticks\", \"weigh\", \"acid\", \"excellent\", \"damp\", \"glib\", \"devilish\", \"attractive\", \"trashy\", \"nippy\", \"tight\", \"squirrel\", \"power\", \"bite\", \"hang\", \"cynical\", \"rhyme\", \"humdrum\", \"sick\", \"men\", \"late\", \"tempt\", \"duck\", \"eatable\", \"dam\", \"sharp\", \"wistful\", \"third\", \"nimble\", \"agonizing\", \"living\", \"closed\", \"low\", \"hissing\", \"uppity\", \"check\", \"puffy\", \"adjoining\", \"ambiguous\", \"sleepy\", \"tour\", \"rigid\", \"erratic\", \"abhorrent\", \"colossal\", \"vengeful\", \"sky\", \"grotesque\", \"exultant\", \"adaptable\", \"turn\", \"versed\", \"donkey\", \"ask\", \"crazy\", \"useful\", \"pass\", \"medical\", \"prickly\", \"guarded\", \"explain\", \"cooperative\", \"drag\", \"squalid\", \"sock\", \"ruthless\", \"lumber\", \"wrestle\", \"worm\", \"worry\", \"capable\", \"lamp\", \"powder\", \"squeal\", \"control\", \"class\", \"depressed\", \"point\", \"death\", \"gentle\", \"beginner\", \"reply\", \"pour\", \"likeable\", \"actually\", \"preserve\", \"adhesive\", \"clear\", \"cool\", \"squealing\", \"veil\", \"unsuitable\", \"imperfect\", \"count\", \"curvy\", \"brass\", \"even\", \"shoe\", \"alcoholic\", \"beautiful\", \"youthful\", \"treatment\", \"bridge\", \"animal\", \"son\", \"decision\", \"humor\", \"moon\", \"delightful\", \"design\", \"improve\", \"luxuriant\", \"stay\", \"tongue\", \"stingy\", \"collar\", \"highfalutin\", \"disgusting\", \"white\", \"mere\", \"foregoing\", \"hammer\", \"vulgar\", \"gifted\", \"interest\", \"tree\", \"industry\", \"exchange\", \"icicle\", \"snatch\", \"better\", \"cloistered\", \"defiant\", \"skate\", \"park\", \"encouraging\", \"road\", \"abrasive\", \"possible\", \"art\", \"label\", \"whimsical\", \"abnormal\", \"rule\", \"bang\", \"clap\", \"welcome\", \"charge\", \"glass\", \"slimy\", \"eggnog\", \"determined\", \"neat\", \"close\", \"toys\", \"scared\", \"approval\", \"trip\", \"crooked\", \"scrape\", \"dramatic\", \"books\", \"canvas\", \"pipe\", \"window\", \"breezy\", \"hard\", \"two\", \"rice\", \"miss\", \"interrupt\", \"plausible\", \"mom\", \"mountain\", \"morning\", \"watch\", \"hair\", \"strengthen\", \"whisper\", \"reading\", \"trite\", \"burst\", \"manage\", \"touch\", \"ceaseless\", \"weather\", \"thing\", \"swift\", \"detailed\", \"afraid\", \"suspect\", \"silver\", \"enjoy\", \"pancake\", \"flippant\", \"income\", \"madly\", \"tense\", \"vague\", \"quicksand\", \"agree\", \"haircut\", \"aberrant\", \"abject\", \"horses\", \"standing\", \"peel\", \"tiger\", \"average\", \"cultured\", \"lake\", \"shave\", \"mellow\", \"past\", \"giants\", \"rose\", \"enthusiastic\", \"exist\", \"tow\", \"cats\", \"fool\", \"tricky\", \"slippery\", \"travel\", \"tire\", \"bitter\", \"knot\", \"obtain\", \"quiver\", \"dirty\", \"kittens\", \"repeat\", \"descriptive\", \"stem\", \"nest\", \"trousers\", \"mate\", \"smoke\", \"request\", \"automatic\", \"huge\", \"street\", \"bump\", \"church\", \"repair\", \"strange\", \"soggy\", \"argue\", \"elfin\", \"spurious\", \"occur\", \"back\", \"motion\", \"chicken\", \"arch\", \"tickle\", \"shy\", \"nervous\", \"wrap\", \"glove\", \"carve\", \"punishment\", \"zoo\", \"dynamic\", \"door\", \"ablaze\", \"weak\", \"eager\", \"fancy\", \"imminent\", \"current\", \"onerous\", \"joyous\", \"beneficial\", \"voyage\", \"smart\", \"quarter\", \"dance\", \"buzz\", \"oil\", \"letter\", \"dull\", \"kaput\", \"oven\", \"grumpy\", \"can\", \"mix\", \"brush\", \"wealth\", \"record\", \"clip\", \"earn\", \"book\", \"planes\", \"bikes\", \"spark\", \"lucky\", \"frighten\", \"languid\", \"wilderness\", \"drawer\", \"happen\", \"geese\", \"five\", \"fortunate\", \"entertain\", \"tall\", \"slope\", \"invincible\", \"spell\", \"phone\", \"smooth\", \"jobless\", \"woozy\", \"berserk\", \"flock\", \"sea\", \"moor\", \"alarm\", \"stare\", \"aloof\", \"rural\", \"finicky\", \"sprout\", \"distribution\", \"embarrass\", \"groan\", \"melt\", \"salty\", \"bizarre\", \"small\", \"ticket\", \"young\", \"offbeat\", \"material\", \"recondite\", \"woebegone\", \"combative\", \"disarm\", \"trade\", \"yam\", \"wink\", \"pack\", \"pleasant\", \"doll\", \"disastrous\", \"rabbits\", \"shivering\", \"loving\", \"irate\", \"industrious\", \"plastic\", \"cabbage\", \"top\", \"room\", \"cough\", \"bare\", \"release\", \"grab\", \"stain\", \"jail\", \"basketball\", \"magical\", \"incandescent\", \"rustic\", \"vacuous\", \"unfasten\", \"chase\", \"crack\", \"toad\", \"dream\", \"glamorous\", \"impossible\", \"lace\", \"present\", \"detail\", \"gruesome\", \"ill\", \"credit\", \"tramp\", \"stormy\", \"chop\", \"recess\", \"dolls\", \"somber\", \"finger\", \"afterthought\", \"quizzical\", \"confess\", \"nappy\", \"range\", \"bake\", \"glue\", \"remember\", \"flavor\", \"defective\", \"divergent\", \"use\", \"history\", \"psychotic\", \"precious\", \"car\", \"annoyed\", \"fair\", \"wholesale\", \"sparkle\", \"pan\", \"abstracted\", \"grateful\", \"flight\", \"notebook\", \"cause\", \"secret\", \"attempt\", \"obese\", \"trot\", \"card\", \"drum\", \"regret\", \"organic\", \"skip\", \"helpful\", \"time\", \"toe\", \"grandiose\", \"ugly\", \"ants\", \"fuzzy\", \"tasteful\", \"money\", \"blushing\", \"reason\", \"harmony\", \"relieved\", \"shaky\", \"romantic\", \"illegal\", \"perpetual\", \"ski\", \"nail\", \"halting\", \"care\", \"grouchy\", \"religion\", \"ladybug\", \"desert\", \"war\", \"lie\", \"wrist\", \"circle\", \"straight\", \"pop\", \"bed\", \"scratch\", \"nifty\", \"popcorn\", \"baseball\", \"cheer\", \"bath\", \"representative\", \"fertile\", \"train\", \"heavenly\", \"cumbersome\", \"disgusted\", \"tasteless\", \"attraction\", \"whip\", \"country\", \"run\", \"alleged\", \"willing\", \"pin\", \"reflective\", \"supply\", \"reproduce\", \"lazy\", \"frantic\", \"needless\", \"best\", \"addition\", \"communicate\", \"tangible\", \"thin\", \"honorable\", \"argument\", \"carpenter\", \"office\", \"nosy\", \"silky\", \"public\", \"first\", \"jumbled\", \"soda\", \"signal\", \"cure\", \"bike\", \"tawdry\", \"pastoral\", \"hover\", \"decide\", \"crate\", \"dangerous\", \"handle\", \"general\", \"cave\", \"disturbed\", \"shelter\", \"flashy\", \"wrong\", \"meal\", \"nonchalant\", \"functional\", \"sin\", \"question\", \"authority\", \"ordinary\", \"last\", \"military\", \"simple\", \"pat\", \"found\", \"include\", \"toothsome\", \"previous\", \"calendar\", \"smelly\", \"advise\", \"wheel\", \"reject\", \"memorise\", \"vacation\", \"angry\", \"cattle\", \"brake\", \"cows\", \"fence\", \"whole\", \"festive\", \"protest\", \"meek\", \"fragile\", \"enchanted\", \"unit\"],\n    w = function () {\n  function e(e) {\n    this.isEnd = !1, this.children = {}, this.parent = null, this.key = e, this.childrenJSX = [], this.currentJSX = t.createElement(\"li\", {\n      key: this.key\n    }, t.createElement(\"div\", {\n      className: \"normal\"\n    }, e || \"Root\"), this.childrenJSX.length ? t.createElement(\"ul\", null, this.childrenJSX) : null);\n  }\n\n  return e.prototype.updateJSX = function (e) {\n    void 0 === e && (e = !1), this.childrenJSX = [];\n\n    for (var r = Object.keys(this.children), i = 0; i < r.length; i++) this.childrenJSX.push(this.children[r[i]].currentJSX);\n\n    this.currentJSX = t.createElement(\"li\", {\n      key: this.key\n    }, t.createElement(\"div\", {\n      className: \"normal \" + (this.isEnd ? \"end\" : \"\") + \" \" + (e ? \"highlight\" : \"\")\n    }, this.key ? this.key : \"Root\"), this.childrenJSX.length ? t.createElement(\"ul\", null, this.childrenJSX) : null), this.parent && this.parent.updateJSX(e);\n  }, e;\n}(),\n    X = function () {\n  function t(t) {\n    void 0 === t && (t = null), this.root = new w(null), this.highlightedTill = null, t && this.randomTrie(t);\n  }\n\n  return t.prototype.insert = function (t) {\n    if (\"\" !== t) {\n      t = (t = t.trim()).toUpperCase();\n\n      for (var e = this.root, r = 0; r < t.length; r++) e.children[t[r]] || (e.children[t[r]] = new w(t[r]), e.children[t[r]].parent = e), e = e.children[t[r]], r === t.length - 1 && (e.isEnd = !0);\n\n      e.updateJSX();\n    }\n  }, t.prototype.searchWord = function (t) {\n    if (\"\" === t) return !1;\n    t = (t = t.trim()).toUpperCase();\n\n    for (var e = this.root, r = 0; r < t.length; r++) {\n      if (!e.children[t[r]]) return !1;\n      if (e = e.children[t[r]], r === t.length - 1) return e.isEnd;\n    }\n\n    return !1;\n  }, t.prototype.deleteWord = function (t) {\n    if (!this.searchWord(t)) return !1;\n    t = (t = t.trim()).toUpperCase();\n\n    for (var e = this.root, r = 0; r < t.length; r++) e = e.children[t[r]];\n\n    if (e.isEnd = !1, 0 === Object.keys(e.children).length) {\n      e = e.parent;\n\n      for (r = t.length - 1; r >= 0; r--) {\n        if (e === this.root) {\n          delete e.children[t[r]];\n          break;\n        }\n\n        if (e.isEnd) {\n          delete e.children[t[r]];\n          break;\n        }\n\n        if (Object.keys(e.children).length > 1) {\n          delete e.children[t[r]];\n          break;\n        }\n\n        e = e.parent;\n      }\n    }\n\n    return e.updateJSX(), !0;\n  }, t.prototype.findPrefix = function (t) {\n    if (this.removeHighligt(), \"\" === t) return !1;\n    t = (t = t.trim()).toUpperCase();\n\n    for (var e = this.root, r = 0; r < t.length; r++) {\n      if (!e.children[t[r]]) return !1;\n      e = e.children[t[r]];\n    }\n\n    return e.updateJSX(true), this.highlightedTill = e, !0;\n  }, t.prototype.findAllWords = function () {\n    for (var t = this.root, e = [], r = 0; r < Object.keys(t.children).length; r++) this.findAllWordsHelper(t.children[Object.keys(t.children)[r]], e);\n\n    return e;\n  }, t.prototype.findAllWordsHelper = function (t, e, r) {\n    void 0 === r && (r = \"\"), r += t.key, t.isEnd && e.push(r);\n\n    for (var i = 0; i < Object.keys(t.children).length; i++) this.findAllWordsHelper(t.children[Object.keys(t.children)[i]], e, r);\n  }, t.prototype.randomTrie = function (t) {\n    t > 993 && (t = 993);\n\n    for (var e = S, r = 2 * t + 10, i = new Set(), n = 0; n < t; n++) {\n      for (var o = Math.floor(Math.random() * (0 - r + 1)) + r; i.has(o) || o > 993;) o = Math.floor(Math.random() * (0 - r + 1)) + r;\n\n      i.add(o), this.insert(e[o]);\n    }\n  }, t.prototype.removeHighligt = function () {\n    this.highlightedTill && (this.highlightedTill.updateJSX(), this.highlightedTill = null);\n  }, t;\n}(),\n    J = t.memo(i(function (e, i) {\n  var o = e.data,\n      l = e.treeStyles,\n      a = g(null),\n      s = a.tree,\n      h = a.treeJSX,\n      c = a.setTree;\n  m(l);\n  var d = {\n    insert: function (t) {\n      if (!(null == s ? void 0 : s.root)) {\n        var e = new X();\n        return e.insert(t), void c(e);\n      }\n\n      s.insert(t), c(s);\n    },\n    remove: function (t) {\n      return !(!(null == s ? void 0 : s.root) || !t) && !!s.deleteWord(t) && (c(s.root ? s : null), !0);\n    },\n    search: function (t) {\n      return !(!(null == s ? void 0 : s.root) || !t) && !!s.searchWord(t) && (s.findPrefix(t), c(s), !0);\n    },\n    searchPrefix: function (t) {\n      if (!(null == s ? void 0 : s.root)) return !1;\n      var e = s.findPrefix(t);\n      return c(s), e;\n    },\n    getAllWords: function () {\n      return (null == s ? void 0 : s.root) ? s.findAllWords() : [];\n    },\n    generateRandomTrie: function (t) {\n      var e = new X(t);\n      c(e);\n    },\n    removeHighlight: function () {\n      s.removeHighligt(), c(s);\n    }\n  };\n  n(i, function () {\n    return d;\n  });\n  return r(function () {\n    var t;\n    o && (t = new X(), o.forEach(function (e) {\n      return t.insert(e);\n    }), c(t));\n  }, [o]), t.createElement(\"div\", {\n    id: u\n  }, t.createElement(\"ul\", null, h));\n}), function (t, e) {\n  return t.data && e.data && y(t.data, e.data);\n}),\n    N = l,\n    k = a,\n    x = h,\n    C = s,\n    T = t.createElement(\"li\", {\n  className: \"null\"\n}, t.createElement(\"div\", null, \"null\")),\n    E = function (e, r, i, n, o) {\n  return void 0 === o && (o = !1), t.createElement(\"li\", {\n    key: e\n  }, t.createElement(\"div\", {\n    className: \"normal \" + (o ? \"highlight\" : \"\")\n  }, e, \" \", t.createElement(\"p\", {\n    className: \"height\"\n  }, r)), t.createElement(\"ul\", null, i, \" \", n));\n},\n    H = function () {\n  function t(t) {\n    this.value = t, this.height = 0, this.left = null, this.right = null, this.parent = null, this.leftJSX = T, this.rightJSX = T, this.currentJSX = E(this.value, this.height, this.leftJSX, this.rightJSX);\n  }\n\n  return t.prototype.insert = function (t, e) {\n    var r = t.currentJSX;\n    e ? this.leftJSX = r : this.rightJSX = r, this.setJSX(), this.updateRootJSX();\n  }, t.prototype.setJSX = function () {\n    this.currentJSX = E(this.value, this.height, this.leftJSX, this.rightJSX);\n  }, t.prototype.updateRootJSX = function () {\n    null !== this.parent && (this.parent.left === this ? this.parent.insert(this, !0) : this.parent.insert(this, !1));\n  }, t.prototype.setChildToNull = function (t) {\n    t ? this.leftJSX = T : this.rightJSX = T, this.setJSX(), this.updateRootJSX();\n  }, t.prototype.setChildToChildsChild = function (t, e) {\n    t ? e ? (this.leftJSX = this.left.left.currentJSX, this.setJSX()) : (this.leftJSX = this.left.right.currentJSX, this.setJSX()) : e ? (this.rightJSX = this.right.left.currentJSX, this.setJSX()) : (this.rightJSX = this.right.right.currentJSX, this.setJSX()), this.updateRootJSX();\n  }, t.prototype.remove = function (t) {\n    this.parent && (t ? \"left\" === t ? this.parent.left === this ? this.parent.setChildToChildsChild(!0, !0) : this.parent.setChildToChildsChild(!1, !0) : this.parent.left === this ? this.parent.setChildToChildsChild(!0, !1) : this.parent.setChildToChildsChild(!1, !1) : this.parent.left === this ? this.parent.setChildToNull(!0) : this.parent.setChildToNull(!1));\n  }, t.prototype.updateValue = function (t) {\n    this.value = t, this.setJSX(), this.updateRootJSX();\n  }, t.prototype.addHighlight = function () {\n    this.currentJSX = E(this.value, this.height, this.leftJSX, this.rightJSX, !0), this.updateRootJSX();\n  }, t.prototype.clearHighlight = function () {\n    this.setJSX(), this.updateRootJSX();\n  }, t.prototype.balanceJSX = function () {\n    !this.left && this.right ? (this.right.balanceJSX(), this.rightJSX = this.right.currentJSX, this.setChildToNull(!0)) : !this.right && this.left ? (this.left.balanceJSX(), this.leftJSX = this.left.currentJSX, this.setChildToNull(!1)) : this.right && this.left ? (this.left.balanceJSX(), this.right.balanceJSX(), this.leftJSX = this.left.currentJSX, this.rightJSX = this.right.currentJSX, this.setJSX(), this.updateRootJSX()) : (this.leftJSX = T, this.rightJSX = T, this.setJSX(), this.updateRootJSX());\n  }, t;\n}(),\n    R = function () {\n  function t(t) {\n    void 0 === t && (t = 0), this.root = null, t && this.generateRandomBST(t), this.highlightedNode = null, this.leafDepth = -1;\n  }\n\n  return t.prototype.rotateRight = function (t) {\n    var e = t.left;\n    return t.left.right && (t.left.right.parent = t), t.left = t.left.right, e.parent = t.parent, t.parent = e, e.right = t, e.height = this.setHeight(e), t.height = this.setHeight(t), e;\n  }, t.prototype.rotateLeft = function (t) {\n    var e = t.right;\n    return t.right.left && (t.right.left.parent = t), t.right = t.right.left, e.parent = t.parent, t.parent = e, e.left = t, e.height = this.setHeight(e), t.height = this.setHeight(t), e;\n  }, t.prototype.setHeight = function (t) {\n    if (null === t) return -1;\n    var e = null !== t.left ? t.left.height : -1,\n        r = null !== t.right ? t.right.height : -1;\n    return Math.max(e, r) + 1;\n  }, t.prototype.balanceCheck = function (t) {\n    return null === t ? 0 : (null !== t.left ? t.left.height : -1) - (null !== t.right ? t.right.height : -1);\n  }, t.prototype.balance = function (t) {\n    var e = this.balanceCheck(t);\n    return e > 1 ? (this.setHeight(t.left.left) > this.setHeight(t.left.right) || (t.left = this.rotateLeft(t.left)), t = this.rotateRight(t)) : e < -1 && (this.setHeight(t.right.right) > this.setHeight(t.right.left) || (t.right = this.rotateRight(t.right)), t = this.rotateLeft(t)), null !== t && (t.height = this.setHeight(t)), t && t.right && t.right.balanceJSX(), t && t.left && t.left.balanceJSX(), t;\n  }, t.prototype.findMax = function (t) {\n    return void 0 === t && (t = this.root), null == t || null == t.right ? t : this.findMax(t.right);\n  }, t.prototype.findMin = function (t) {\n    return void 0 === t && (t = this.root), null == t || null == t.left ? t : this.findMin(t.left);\n  }, t.prototype.insert = function (t) {\n    this.clearHighlight();\n    var e = new H(t);\n    null === this.root ? this.root = e : this.root = this.insertNode(this.root, e);\n  }, t.prototype.insertNode = function (t, e) {\n    return e.value < t.value ? null === t.left ? (t.left = e, e.parent = t, t.insert(e, !0)) : t.left = this.insertNode(t.left, e) : null === t.right ? (t.right = e, e.parent = t, t.insert(e, !1)) : t.right = this.insertNode(t.right, e), t = this.balance(t);\n  }, t.prototype.remove = function (t) {\n    this.clearHighlight(), this.root = this.removeNode(this.root, t);\n  }, t.prototype.removeNode = function (t, e) {\n    if (null == t) return null;\n    if (e < t.value) t.left = this.removeNode(t.left, e);else if (e > t.value) t.right = this.removeNode(t.right, e);else if (null === t.left && null === t.right) t.remove(null), t = null;else if (null === t.left) t.remove(\"right\"), t.right.parent = t.parent, t = t.right;else if (null === t.right) t.remove(\"left\"), t.left.parent = t.parent, t = t.left;else {\n      var r = this.findMin(t.right);\n      t.updateValue(r.value), t.right = this.removeNode(t.right, r.value);\n    }\n    return t = this.balance(t);\n  }, t.prototype.preorder = function (t, e) {\n    void 0 === e && (e = this.root), null !== e && (t.push(e.value), this.preorder(t, e.left), this.preorder(t, e.right));\n  }, t.prototype.inorder = function (t, e) {\n    void 0 === e && (e = this.root), null !== e && (this.inorder(t, e.left), t.push(e.value), this.inorder(t, e.right));\n  }, t.prototype.postorder = function (t, e) {\n    void 0 === e && (e = this.root), null !== e && (this.postorder(t, e.left), this.postorder(t, e.right), t.push(e.value));\n  }, t.prototype.search = function (t, e) {\n    return void 0 === e && (e = this.root), this.clearHighlight(), null !== e && (e.value === t ? (e.addHighlight(), this.highlightedNode = e, !0) : e.value > t ? this.search(t, e.left) : this.search(t, e.right));\n  }, t.prototype.generateRandomBST = function (t) {\n    for (var e = 2 * t + 10, r = new Set(), i = 0; i < t; i++) {\n      for (var n = Math.floor(Math.random() * (0 - e + 1)) + e; r.has(n);) n = Math.floor(Math.random() * (0 - e + 1)) + e;\n\n      r.add(n), this.insert(n);\n    }\n  }, t.prototype.checkAVL = function () {\n    var t = [];\n    return this.isBalanced() && t.push(N), this.isComplete() && t.push(k), this.isPerfect() && t.push(C), this.isFull() && t.push(x), t;\n  }, t.prototype.isBalanced = function (t) {\n    if (void 0 === t && (t = this.root), null === t) return !0;\n    var e = t.left ? t.left.height : -1,\n        r = t.right ? t.right.height : -1;\n    return Math.abs(e - r) <= 1 && this.isBalanced(t.left) && this.isBalanced(t.right);\n  }, t.prototype.isComplete = function () {\n    var t = this.countNodes();\n    return this.isComplete2(0, t);\n  }, t.prototype.isComplete2 = function (t, e, r) {\n    if (void 0 === r && (r = this.root), null === r) return !0;\n    if (t >= e) return !1;\n    var i = this.isComplete2(2 * t + 1, e, r.left);\n    return i &= this.isComplete2(2 * t + 2, e, r.right);\n  }, t.prototype.isPerfect = function () {\n    return !(!this.isFull() || !this.isComplete()) && this.isPerfect2();\n  }, t.prototype.isPerfect2 = function (t, e) {\n    if (void 0 === t && (t = this.root), void 0 === e && (e = 0), !t) return !0;\n\n    if (e++, !t.right && !t.left) {\n      if (-1 !== this.leafDepth && this.leafDepth !== e) return !1;\n      this.leafDepth = e;\n    }\n\n    return this.isPerfect2(t.left, e) && this.isPerfect2(t.right, e);\n  }, t.prototype.isFull = function (t) {\n    if (void 0 === t && (t = this.root), null === t) return !0;\n    if (null === t.left && null === t.right) return !0;\n\n    if (null !== t.left && null !== t.right) {\n      var e = void 0;\n      return (e = this.isFull(t.left)) && (e = this.isFull(t.right)), e;\n    }\n\n    return !1;\n  }, t.prototype.countNodes = function (t) {\n    return void 0 === t && (t = this.root), null === t ? 0 : this.countNodes(t.left) + 1 + this.countNodes(t.right);\n  }, t.prototype.clearHighlight = function () {\n    this.highlightedNode && (this.highlightedNode.clearHighlight(), this.highlightedNode = null);\n  }, t;\n}(),\n    B = t.memo(i(function (e, i) {\n  var o = e.data,\n      l = e.treeStyles,\n      a = g(null),\n      s = a.tree,\n      h = a.treeJSX,\n      c = a.setTree;\n  m(l), n(i, function () {\n    return {\n      insert: function (t) {\n        if (!(null == s ? void 0 : s.root)) {\n          var e = new R();\n          return e.insert(t), void c(e);\n        }\n\n        s.insert(t), c(s);\n      },\n      remove: function (t) {\n        return !!(null == s ? void 0 : s.root) && !!s.search(t) && (s.remove(t), c(s.root ? s : null), !0);\n      },\n      search: function (t) {\n        if (!(null == s ? void 0 : s.root)) return !1;\n        var e = s.search(t);\n        return e && c(s), e;\n      },\n      getData: function (t) {\n        var e = [];\n        return s[t](e), e;\n      },\n      clear: function () {\n        c(new R());\n      },\n      generateRandomTree: function (t) {\n        var e = new R(t);\n        c(e);\n      },\n      checkTreeType: function () {\n        return s.checkAVL();\n      }\n    };\n  });\n  return r(function () {\n    var t;\n    o && (t = new R(), o.forEach(function (e) {\n      return t.insert(e);\n    }), c(t));\n  }, [o]), t.createElement(\"div\", {\n    id: u\n  }, t.createElement(\"ul\", null, h));\n}), function (t, e) {\n  return t.data && e.data && y(t.data, e.data);\n}),\n    M = l,\n    D = a,\n    V = h,\n    z = s,\n    j = function (e, r, i, n, o) {\n  return void 0 === o && (o = !1), t.createElement(\"li\", {\n    key: e\n  }, t.createElement(\"div\", {\n    className: \"normal \" + (1 === n ? \"red\" : \"black\") + \" \" + (o ? \"highlight\" : \"\")\n  }, e), t.createElement(\"ul\", null, r, \" \", i));\n},\n    F = function () {\n  function e() {\n    this.color = 0, this.isNull = !0, this.parent = null, this.currentJSX = t.createElement(\"li\", {\n      className: \"null\"\n    }, t.createElement(\"div\", {\n      className: \"null black\"\n    }, \"null\"));\n  }\n\n  return e.prototype.insert = function () {}, e.prototype.addHighlight = function () {}, e;\n}(),\n    P = function () {\n  function e(e) {\n    var r = new F();\n    r.parent = this, this.value = e, this.color = 1, this.right = r, this.left = r, this.parent = null, this.isNull = !1, this.currentJSX = t.createElement(\"li\", {\n      key: this.value\n    }, t.createElement(\"div\", {\n      className: \"normal red\"\n    }, this.value), t.createElement(\"ul\", null, this.left.currentJSX, \" \", this.right.currentJSX));\n  }\n\n  return e.prototype.setHtml = function () {\n    this.currentJSX = j(this.value, this.left.currentJSX, this.right.currentJSX, this.color);\n  }, e.prototype.updateRootHtml = function () {\n    null !== this.parent && this.parent.insert();\n  }, e.prototype.insert = function () {\n    this.setHtml(), this.updateRootHtml();\n  }, e.prototype.addHighlight = function () {\n    this.currentJSX = j(this.value, this.left.currentJSX, this.right.currentJSX, this.color, !0), this.updateRootHtml();\n  }, e.prototype.clearHighlight = function () {\n    this.setHtml(), this.updateRootHtml();\n  }, e;\n}(),\n    O = function () {\n  function t(t) {\n    void 0 === t && (t = 0);\n    var e = new F();\n    this.root = e, t && this.generateRandomBST(t), this.highlighted = null, this.leafDepth = -1;\n  }\n\n  return t.prototype.rotateRight = function (t, e) {\n    var r = t.parent;\n    t.parent = r.parent, null !== r.parent && (r.parent.left === r ? r.parent.left = t : r.parent.right = t);\n    var i = t.right;\n    t.right = r, r.parent = t, r.left = i, i.parent = r, e && (t.color = 0, r.color = 1);\n  }, t.prototype.rotateLeft = function (t, e) {\n    var r = t.parent;\n    t.parent = r.parent, null !== r.parent && (r.parent.right === r ? r.parent.right = t : r.parent.left = t);\n    var i = t.left;\n    t.left = r, r.parent = t, r.right = i, i.parent = r, e && (t.color = 0, r.color = 1);\n  }, t.prototype.siblingOf = function (t) {\n    return null === t.parent ? null : t.parent.left === t ? t.parent.right : t.parent.left;\n  }, t.prototype.findMin = function (t) {\n    return void 0 === t && (t = this.root), t.isNull || t.left.isNull ? t : this.findMin(t.left);\n  }, t.prototype.insert = function (t) {\n    this.root = this.insertNode(null, this.root, t);\n  }, t.prototype.insertNode = function (t, e, r) {\n    if (e.isNull) {\n      var i = new P(r);\n      return null === t ? (i.color = 0, i.insert(), i) : (i.parent = t, i);\n    }\n\n    if (e.value === r) return e;\n    var n, o;\n\n    if (e.value > r) {\n      var l = this.insertNode(e, e.left, r);\n      if (l === e.parent) return e.insert(), l;\n      e.left = l, n = !0;\n    } else {\n      var a = this.insertNode(e, e.right, r);\n      if (a === e.parent) return e.insert(), a;\n      e.right = a, n = !1;\n    }\n\n    n ? 1 === e.left.color && 1 === e.color && (0 === (o = this.siblingOf(e)).color || o.isNull ? e.parent.left === e ? this.rotateRight(e, !0) : (this.rotateRight(e.left, !1), e = e.parent, this.rotateLeft(e, !0)) : (e.color = 0, o.color = 0, null !== e.parent.parent && (e.parent.color = 1))) : 1 === e.right.color && 1 === e.color && (0 === (o = this.siblingOf(e)).color || o.isNull ? e.parent.right === e ? this.rotateLeft(e, !0) : (this.rotateLeft(e.right, !1), e = e.parent, this.rotateRight(e, !0)) : (e.color = 0, o.color = 0, null !== e.parent.parent && (e.parent.color = 1)));\n    return e.left.isNull || e.left.insert(), e.right.isNull || e.right.insert(), e;\n  }, t.prototype.remove = function (t, e) {\n    if (void 0 === e && (e = this.root), this.clearHighlight(), !e.isNull) {\n      if (e.value === t) if (e.left.isNull || e.right.isNull) {\n        var r = e.parent;\n        this.deleteOneChild(e), r ? (r.left.isNull || r.left.insert(), r.right.isNull || r.right.insert(), r.insert(), r.parent && r.parent.insert()) : this.root.isNull || this.root.insert();\n      } else {\n        var i = this.findMin(e.right);\n        e.value = i.value, e.insert(), this.remove(i.value, e.right);\n      }\n      e.value > t ? this.remove(t, e.left) : this.remove(t, e.right);\n    }\n  }, t.prototype.deleteOneChild = function (t) {\n    var e;\n    e = t.left.isNull ? t.right : t.left, this.replaceChild(e, t), 0 === t.color && (1 === e.color ? (e.color = 0, e.insert()) : this.deleteCase1(e));\n  }, t.prototype.deleteCase1 = function (t) {\n    if (null === t.parent) return this.root = t, void (this.root.isNull || this.root.insert());\n    this.deleteCase2(t);\n  }, t.prototype.deleteCase2 = function (t) {\n    var e = this.siblingOf(t);\n    1 === e.color && (e.parent.left === e ? this.rotateRight(e, !0) : this.rotateLeft(e, !0), null === e.parent && (this.root = e)), this.deleteCase3(t);\n  }, t.prototype.deleteCase3 = function (t) {\n    var e = this.siblingOf(t);\n    0 === t.parent.color && 0 === e.color && 0 === e.left.color && 0 === e.right.color ? (e.color = 1, this.deleteCase1(t.parent)) : this.deleteCase4(t);\n  }, t.prototype.deleteCase4 = function (t) {\n    var e = this.siblingOf(t);\n    if (1 === t.parent.color && 0 === e.color && 0 === e.left.color && 0 === e.right.color) return e.color = 1, void (t.parent.color = 0);\n    this.deleteCase5(t);\n  }, t.prototype.deleteCase5 = function (t) {\n    var e = this.siblingOf(t);\n    0 === e.color && (t.parent.left === t && 0 === e.right.color && 1 === e.left.color ? (this.rotateRight(e.left, !0), e.insert()) : t.parent.right === t && 0 === e.left.color && 1 === e.right.color && (this.rotateLeft(e.right, !0), e.insert())), this.deleteCase6(t);\n  }, t.prototype.deleteCase6 = function (t) {\n    var e = this.siblingOf(t);\n    e.color = e.parent.color, e.parent.color = 0, t.parent.left === t ? (e.right.color = 0, this.rotateLeft(e, !1), e.right.isNull || e.right.insert(), e.left.isNull || e.left.insert()) : (e.left.color = 0, this.rotateRight(e, !1), e.right.isNull || e.right.insert(), e.left.isNull || e.left.insert()), null === e.parent && (this.root = e);\n  }, t.prototype.replaceChild = function (t, e) {\n    t.parent = e.parent, null === e.parent ? this.root = t : e.parent.left === e ? e.parent.left = t : e.parent.right = t;\n  }, t.prototype.preorder = function (t, e) {\n    void 0 === e && (e = this.root), e.isNull || (t.push(e.value), this.preorder(t, e.left), this.preorder(t, e.right));\n  }, t.prototype.inorder = function (t, e) {\n    void 0 === e && (e = this.root), e.isNull || (this.inorder(t, e.left), t.push(e.value), this.inorder(t, e.right));\n  }, t.prototype.postorder = function (t, e) {\n    void 0 === e && (e = this.root), e.isNull || (this.postorder(t, e.left), this.postorder(t, e.right), t.push(e.value));\n  }, t.prototype.search = function (t, e) {\n    return void 0 === e && (e = this.root), this.clearHighlight(), !e.isNull && (e.value === t ? (e.addHighlight(), this.highlighted = e, !0) : e.value > t ? this.search(t, e.left) : this.search(t, e.right));\n  }, t.prototype.generateRandomBST = function (t) {\n    for (var e = 2 * t + 10, r = new Set(), i = 0; i < t; i++) {\n      for (var n = Math.floor(Math.random() * (0 - e + 1)) + e; r.has(n);) n = Math.floor(Math.random() * (0 - e + 1)) + e;\n\n      r.add(n), this.insert(n);\n    }\n  }, t.prototype.checkBinaryTree = function () {\n    var t = [];\n    return this.isBalanced() && t.push(M), this.isComplete() && t.push(D), this.isPerfect() && t.push(z), this.isFull() && t.push(V), t;\n  }, t.prototype.isBalanced = function (t) {\n    if (void 0 === t && (t = this.root), t.isNull) return !0;\n    var e = this.height(t.left),\n        r = this.height(t.right);\n    return Math.abs(e - r) <= 1 && this.isBalanced(t.left) && this.isBalanced(t.right);\n  }, t.prototype.height = function (t) {\n    return void 0 === t && (t = this.root), t.isNull ? -1 : (e = this.height(t.left), (e = Math.max(this.height(t.right), e)) + 1);\n    var e;\n  }, t.prototype.isComplete = function () {\n    var t = this.countNodes();\n    return this.isComplete2(0, t);\n  }, t.prototype.isComplete2 = function (t, e, r) {\n    if (void 0 === r && (r = this.root), r.isNull) return !0;\n    if (t >= e) return !1;\n    var i = this.isComplete2(2 * t + 1, e, r.left);\n    return i &= this.isComplete2(2 * t + 2, e, r.right);\n  }, t.prototype.isPerfect = function () {\n    return !(!this.isFull() || !this.isComplete()) && this.isPerfect2();\n  }, t.prototype.isPerfect2 = function (t, e) {\n    if (void 0 === t && (t = this.root), void 0 === e && (e = 0), t.isNull) return !0;\n\n    if (e++, t.right.isNull && t.left.isNull) {\n      if (-1 !== this.leafDepth && this.leafDepth !== e) return !1;\n      this.leafDepth = e;\n    }\n\n    return this.isPerfect2(t.left, e) && this.isPerfect2(t.right, e);\n  }, t.prototype.isFull = function (t) {\n    if (void 0 === t && (t = this.root), t.isNull) return !0;\n    if (t.left.isNull && t.right.isNull) return !0;\n    if (t.left.isNull || t.right.isNull) return !1;\n    var e = void 0;\n    return e = this.isFull(t.left), e &= this.isFull(t.right);\n  }, t.prototype.countNodes = function (t) {\n    return void 0 === t && (t = this.root), t.isNull ? 0 : this.countNodes(t.left) + 1 + this.countNodes(t.right);\n  }, t.prototype.clearHighlight = function () {\n    this.highlighted && (this.highlighted.clearHighlight(), this.highlighted = null);\n  }, t;\n}(),\n    q = t.memo(i(function (e, i) {\n  var o = e.data,\n      l = e.treeStyles,\n      a = g(null),\n      s = a.tree,\n      h = a.treeJSX,\n      c = a.setTree;\n  m(l), n(i, function () {\n    return {\n      insert: function (t) {\n        if (!(null == s ? void 0 : s.root)) {\n          var e = new O();\n          return e.insert(t), void c(e);\n        }\n\n        s.insert(t), c(s);\n      },\n      remove: function (t) {\n        return !!(null == s ? void 0 : s.root) && !!s.search(t) && (s.remove(t), c(s.root ? s : null), !0);\n      },\n      search: function (t) {\n        if (!(null == s ? void 0 : s.root)) return !1;\n        var e = s.search(t);\n        return e && c(s), e;\n      },\n      getData: function (t) {\n        var e = [];\n        return s[t](e), e;\n      },\n      clear: function () {\n        c(new O());\n      },\n      generateRandomTree: function (t) {\n        var e = new O(t);\n        c(e);\n      },\n      checkTreeType: function () {\n        return s.checkBinaryTree();\n      }\n    };\n  });\n  return r(function () {\n    var t;\n    o && (t = new O(), o.forEach(function (e) {\n      return t.insert(e);\n    }), c(t));\n  }, [o]), t.createElement(\"div\", {\n    id: u\n  }, t.createElement(\"ul\", null, h));\n}), function (t, e) {\n  return t.data && e.data && y(t.data, e.data);\n}),\n    A = function (t, e) {\n  return A = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (t, e) {\n    t.__proto__ = e;\n  } || function (t, e) {\n    for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);\n  }, A(t, e);\n};\n\nfunction L(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Class extends value \" + String(e) + \" is not a constructor or null\");\n\n  function r() {\n    this.constructor = t;\n  }\n\n  A(t, e), t.prototype = null === e ? Object.create(e) : (r.prototype = e.prototype, new r());\n}\n\nvar U = function () {\n  function e(t) {\n    void 0 === t && (t = 0), this.end = 0, this.heap = [], this.currentJSX = null, t && this.generateRandomHeap(t);\n  }\n\n  return e.prototype.heapifyUp = function (t) {\n    console.error(t + \": Base class's heapifyUp called\");\n  }, e.prototype.heapifyDown = function (t) {\n    void 0 === t && (t = 0), console.error(t + \": Base class's heapifyDown called\");\n  }, e.prototype.isEmpty = function () {\n    return 0 === this.end;\n  }, e.prototype.insert = function (t) {\n    this.heap[this.end] = t, this.heapifyUp(this.end++), this.currentJSX = this.updateJSX();\n  }, e.prototype.removeTop = function () {\n    if (this.isEmpty()) return null;\n    var t = this.heap[0];\n    return this.heap[0] = this.heap[--this.end], this.heapifyDown(), this.heap.pop(), this.currentJSX = this.updateJSX(), t;\n  }, e.prototype.deleteEl = function (t, e) {\n    void 0 === e && (e = !0);\n    var r = this.heap.indexOf(t);\n    -1 !== r && (this.heap[r] = e ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY, this.heapifyUp(r), this.removeTop());\n  }, e.prototype.updateJSX = function (e) {\n    if (void 0 === e && (e = 0), !this.end) return null;\n    var r = 2 * e + 1,\n        i = r + 1;\n    if (i >= this.end && r >= this.end) return t.createElement(\"li\", {\n      key: e\n    }, t.createElement(\"div\", {\n      className: \"normal\"\n    }, this.heap[e]), t.createElement(\"ul\", null, t.createElement(\"li\", {\n      className: \"null\"\n    }, t.createElement(\"div\", {\n      className: \"null\"\n    }, \"null\")), t.createElement(\"li\", {\n      className: \"null\"\n    }, t.createElement(\"div\", {\n      className: \"null\"\n    }, \"null\"))));\n\n    if (i >= this.end && r < this.end) {\n      var n = this.updateJSX(r);\n      return t.createElement(\"li\", {\n        key: e\n      }, t.createElement(\"div\", {\n        className: \"normal\"\n      }, this.heap[e]), t.createElement(\"ul\", null, n, t.createElement(\"li\", {\n        className: \"null\"\n      }, t.createElement(\"div\", {\n        className: \"null\"\n      }, \"null\"))));\n    }\n\n    if (i < this.end && r >= this.end) {\n      var o = this.updateJSX(i);\n      return t.createElement(\"li\", {\n        key: e\n      }, t.createElement(\"div\", {\n        className: \"normal\"\n      }, this.heap[e]), t.createElement(\"ul\", null, t.createElement(\"li\", {\n        className: \"null\"\n      }, t.createElement(\"div\", {\n        className: \"null\"\n      }, \"null\")), o));\n    }\n\n    n = this.updateJSX(r), o = this.updateJSX(i);\n    return t.createElement(\"li\", {\n      key: e\n    }, t.createElement(\"div\", {\n      className: \"normal\"\n    }, this.heap[e]), t.createElement(\"ul\", null, n, o));\n  }, e.prototype.generateRandomHeap = function (t) {\n    for (var e = 2 * t + 10, r = new Set(), i = 0; i < t; i++) {\n      for (var n = Math.floor(Math.random() * (0 - e + 1)) + e; r.has(n);) n = Math.floor(Math.random() * (0 - e + 1)) + e;\n\n      r.add(n), this.insert(n);\n    }\n  }, e;\n}(),\n    W = function (t) {\n  function e() {\n    return null !== t && t.apply(this, arguments) || this;\n  }\n\n  return L(e, t), e.prototype.heapifyUp = function (t) {\n    var e;\n\n    if (0 !== t) {\n      var r = t;\n      r % 2 == 0 ? r -= 2 : r--, r /= 2, this.heap[r] > this.heap[t] && (e = [this.heap[t], this.heap[r]], this.heap[r] = e[0], this.heap[t] = e[1], this.heapifyUp(r));\n    }\n  }, e.prototype.heapifyDown = function (t) {\n    var e, r, i, n;\n    void 0 === t && (t = 0);\n    var o = 2 * t + 1,\n        l = o + 1;\n    l >= this.end && o >= this.end || (l >= this.end && o < this.end ? this.heap[o] < this.heap[t] && (e = [this.heap[o], this.heap[t]], this.heap[t] = e[0], this.heap[o] = e[1], this.heapifyDown(o)) : l < this.end && o >= this.end ? this.heap[l] < this.heap[t] && (r = [this.heap[l], this.heap[t]], this.heap[t] = r[0], this.heap[l] = r[1], this.heapifyDown(l)) : (this.heap[t] > this.heap[o] || this.heap[t] > this.heap[l]) && (this.heap[o] < this.heap[l] ? (i = [this.heap[o], this.heap[t]], this.heap[t] = i[0], this.heap[o] = i[1], this.heapifyDown(o)) : (n = [this.heap[l], this.heap[t]], this.heap[t] = n[0], this.heap[l] = n[1], this.heapifyDown(l))));\n  }, e.prototype.remove = function (t) {\n    return this.deleteEl(t);\n  }, e;\n}(U),\n    I = function (t) {\n  function e() {\n    return null !== t && t.apply(this, arguments) || this;\n  }\n\n  return L(e, t), e.prototype.heapifyUp = function (t) {\n    var e;\n\n    if (0 !== t) {\n      var r = t;\n      r % 2 == 0 ? r -= 2 : r--, r /= 2, this.heap[r] < this.heap[t] && (e = [this.heap[t], this.heap[r]], this.heap[r] = e[0], this.heap[t] = e[1], this.heapifyUp(r));\n    }\n  }, e.prototype.heapifyDown = function (t) {\n    var e, r, i, n;\n    void 0 === t && (t = 0);\n    var o = 2 * t + 1,\n        l = o + 1;\n    l >= this.end && o >= this.end || (l >= this.end && o < this.end ? this.heap[o] > this.heap[t] && (e = [this.heap[o], this.heap[t]], this.heap[t] = e[0], this.heap[o] = e[1], this.heapifyDown(o)) : l < this.end && o >= this.end ? this.heap[l] > this.heap[t] && (r = [this.heap[l], this.heap[t]], this.heap[t] = r[0], this.heap[l] = r[1], this.heapifyDown(l)) : (this.heap[t] < this.heap[o] || this.heap[t] < this.heap[l]) && (this.heap[o] > this.heap[l] ? (i = [this.heap[o], this.heap[t]], this.heap[t] = i[0], this.heap[o] = i[1], this.heapifyDown(o)) : (n = [this.heap[l], this.heap[t]], this.heap[t] = n[0], this.heap[l] = n[1], this.heapifyDown(l))));\n  }, e.prototype.remove = function (t) {\n    return this.deleteEl(t, !1);\n  }, e;\n}(U),\n    _ = t.memo(i(function (e, i) {\n  var o = e.data,\n      l = e.treeStyles,\n      a = g(null),\n      s = a.tree,\n      h = a.treeJSX,\n      c = a.setTree;\n  m(l), n(i, function () {\n    return {\n      insert: function (t) {\n        if (null == s ? void 0 : s.isEmpty()) {\n          var e = new W();\n          return e.insert(t), void c(e);\n        }\n\n        s.insert(t), c(s);\n      },\n      remove: function (t) {\n        return !(null == s ? void 0 : s.isEmpty()) && (s.remove(t), c(s), !0);\n      },\n      getData: function () {\n        return s.heap;\n      },\n      clear: function () {\n        c(new W());\n      },\n      generateRandomTree: function (t) {\n        var e = new W(t);\n        c(e);\n      },\n      extractTop: function () {\n        var t = s.removeTop();\n        return c(s), t;\n      }\n    };\n  });\n  return r(function () {\n    var t;\n    o && (t = new W(), o.forEach(function (e) {\n      return t.insert(e);\n    }), c(t));\n  }, [o]), t.createElement(\"div\", {\n    id: u\n  }, t.createElement(\"ul\", null, h));\n}), function (t, e) {\n  return t.data && e.data && y(t.data, e.data);\n}),\n    Y = t.memo(i(function (e, i) {\n  var o = e.data,\n      l = e.treeStyles,\n      a = g(null),\n      s = a.tree,\n      h = a.treeJSX,\n      c = a.setTree;\n  m(l), n(i, function () {\n    return {\n      insert: function (t) {\n        if (null == s ? void 0 : s.isEmpty()) {\n          var e = new I();\n          return e.insert(t), void c(e);\n        }\n\n        s.insert(t), c(s);\n      },\n      remove: function (t) {\n        return !(null == s ? void 0 : s.isEmpty()) && (s.remove(t), c(s), !0);\n      },\n      getData: function () {\n        return s.heap;\n      },\n      clear: function () {\n        c(new I());\n      },\n      generateRandomTree: function (t) {\n        var e = new I(t);\n        c(e);\n      },\n      extractTop: function () {\n        var t = s.removeTop();\n        return c(s), t;\n      }\n    };\n  });\n  return r(function () {\n    var t;\n    o && (t = new I(), o.forEach(function (e) {\n      return t.insert(e);\n    }), c(t));\n  }, [o]), t.createElement(\"div\", {\n    id: u\n  }, t.createElement(\"ul\", null, h));\n}), function (t, e) {\n  return t.data && e.data && y(t.data, e.data);\n}),\n    G = function () {\n  var t = o(null),\n      i = e(null),\n      n = i[0],\n      l = i[1],\n      a = e(null),\n      s = a[0],\n      h = a[1],\n      u = e(null),\n      c = u[0],\n      d = u[1],\n      f = e(null),\n      p = f[0],\n      v = f[1],\n      g = e(null),\n      m = g[0],\n      y = g[1],\n      b = e(null),\n      S = b[0],\n      w = b[1],\n      X = e(null),\n      J = X[0],\n      N = X[1],\n      k = e(null),\n      x = k[0],\n      C = k[1];\n  return r(function () {\n    l(function () {\n      return function (e) {\n        var r;\n        return null === (r = null == t ? void 0 : t.current) || void 0 === r ? void 0 : r.insert(e);\n      };\n    }), h(function () {\n      return function (e) {\n        var r;\n        return null === (r = null == t ? void 0 : t.current) || void 0 === r ? void 0 : r.remove(e);\n      };\n    }), d(function () {\n      return function (e) {\n        var r;\n        return null === (r = null == t ? void 0 : t.current) || void 0 === r ? void 0 : r.search(e);\n      };\n    }), v(function () {\n      return function (e) {\n        var r;\n        return null === (r = null == t ? void 0 : t.current) || void 0 === r ? void 0 : r.getData(e);\n      };\n    }), y(function () {\n      return function () {\n        var e;\n        return null === (e = null == t ? void 0 : t.current) || void 0 === e ? void 0 : e.clear();\n      };\n    }), w(function () {\n      return function () {\n        var e;\n        return null === (e = null == t ? void 0 : t.current) || void 0 === e ? void 0 : e.balance();\n      };\n    }), N(function () {\n      return function (e) {\n        var r;\n        return null === (r = null == t ? void 0 : t.current) || void 0 === r ? void 0 : r.generateRandomTree(e);\n      };\n    }), C(function () {\n      return function () {\n        var e;\n        return null === (e = null == t ? void 0 : t.current) || void 0 === e ? void 0 : e.checkTreeType();\n      };\n    });\n  }, [t]), {\n    ref: t,\n    insert: n,\n    remove: s,\n    search: c,\n    getData: p,\n    clear: m,\n    balance: S,\n    generateRandomTree: J,\n    checkTreeType: x\n  };\n},\n    K = function () {\n  var t = o(null),\n      i = e(null),\n      n = i[0],\n      l = i[1],\n      a = e(null),\n      s = a[0],\n      h = a[1],\n      u = e(null),\n      c = u[0],\n      d = u[1],\n      f = e(null),\n      p = f[0],\n      v = f[1],\n      g = e(null),\n      m = g[0],\n      y = g[1],\n      b = e(null),\n      S = b[0],\n      w = b[1],\n      X = e(null),\n      J = X[0],\n      N = X[1];\n  return r(function () {\n    l(function () {\n      return function (e) {\n        var r;\n        return null === (r = null == t ? void 0 : t.current) || void 0 === r ? void 0 : r.insert(e);\n      };\n    }), h(function () {\n      return function (e) {\n        var r;\n        return null === (r = null == t ? void 0 : t.current) || void 0 === r ? void 0 : r.remove(e);\n      };\n    }), d(function () {\n      return function (e) {\n        var r;\n        return null === (r = null == t ? void 0 : t.current) || void 0 === r ? void 0 : r.search(e);\n      };\n    }), v(function () {\n      return function (e) {\n        var r;\n        return null === (r = null == t ? void 0 : t.current) || void 0 === r ? void 0 : r.searchPrefix(e);\n      };\n    }), y(function () {\n      return function () {\n        var e;\n        return null === (e = null == t ? void 0 : t.current) || void 0 === e ? void 0 : e.getAllWords();\n      };\n    }), w(function () {\n      return function (e) {\n        var r;\n        return null === (r = null == t ? void 0 : t.current) || void 0 === r ? void 0 : r.generateRandomTrie(e);\n      };\n    }), N(function () {\n      return function () {\n        var e;\n        return null === (e = null == t ? void 0 : t.current) || void 0 === e ? void 0 : e.removeHighlight();\n      };\n    });\n  }, [t]), {\n    ref: t,\n    insert: n,\n    generateRandomTrie: S,\n    getAllWords: m,\n    remove: s,\n    search: c,\n    searchPrefix: p,\n    removeHighlight: J\n  };\n},\n    Q = function () {\n  var t = o(null),\n      i = e(null),\n      n = i[0],\n      l = i[1],\n      a = e(null),\n      s = a[0],\n      h = a[1],\n      u = e(null),\n      c = u[0],\n      d = u[1],\n      f = e(null),\n      p = f[0],\n      v = f[1],\n      g = e(null),\n      m = g[0],\n      y = g[1],\n      b = e(null),\n      S = b[0],\n      w = b[1],\n      X = e(null),\n      J = X[0],\n      N = X[1];\n  return r(function () {\n    l(function () {\n      return function (e) {\n        var r;\n        return null === (r = null == t ? void 0 : t.current) || void 0 === r ? void 0 : r.insert(e);\n      };\n    }), h(function () {\n      return function (e) {\n        var r;\n        return null === (r = null == t ? void 0 : t.current) || void 0 === r ? void 0 : r.remove(e);\n      };\n    }), d(function () {\n      return function (e) {\n        var r;\n        return null === (r = null == t ? void 0 : t.current) || void 0 === r ? void 0 : r.search(e);\n      };\n    }), v(function () {\n      return function (e) {\n        var r;\n        return null === (r = null == t ? void 0 : t.current) || void 0 === r ? void 0 : r.getData(e);\n      };\n    }), y(function () {\n      return function () {\n        var e;\n        return null === (e = null == t ? void 0 : t.current) || void 0 === e ? void 0 : e.clear();\n      };\n    }), w(function () {\n      return function (e) {\n        var r;\n        return null === (r = null == t ? void 0 : t.current) || void 0 === r ? void 0 : r.generateRandomTree(e);\n      };\n    }), N(function () {\n      return function () {\n        var e;\n        return null === (e = null == t ? void 0 : t.current) || void 0 === e ? void 0 : e.checkTreeType();\n      };\n    });\n  }, [t]), {\n    ref: t,\n    insert: n,\n    remove: s,\n    search: c,\n    getData: p,\n    clear: m,\n    generateRandomTree: S,\n    checkTreeType: J\n  };\n},\n    Z = function () {\n  var t = o(null),\n      i = e(null),\n      n = i[0],\n      l = i[1],\n      a = e(null),\n      s = a[0],\n      h = a[1],\n      u = e(null),\n      c = u[0],\n      d = u[1],\n      f = e(null),\n      p = f[0],\n      v = f[1],\n      g = e(null),\n      m = g[0],\n      y = g[1],\n      b = e(null),\n      S = b[0],\n      w = b[1];\n  return r(function () {\n    l(function () {\n      return function (e) {\n        var r;\n        return null === (r = null == t ? void 0 : t.current) || void 0 === r ? void 0 : r.insert(e);\n      };\n    }), h(function () {\n      return function (e) {\n        var r;\n        return null === (r = null == t ? void 0 : t.current) || void 0 === r ? void 0 : r.remove(e);\n      };\n    }), d(function () {\n      return function () {\n        var e;\n        return null === (e = null == t ? void 0 : t.current) || void 0 === e ? void 0 : e.clear();\n      };\n    }), v(function () {\n      return function (e) {\n        var r;\n        return null === (r = null == t ? void 0 : t.current) || void 0 === r ? void 0 : r.generateRandomTree(e);\n      };\n    }), y(function () {\n      return function () {\n        var e;\n        return null === (e = null == t ? void 0 : t.current) || void 0 === e ? void 0 : e.extractTop();\n      };\n    }), w(function () {\n      return function () {\n        var e;\n        return null === (e = null == t ? void 0 : t.current) || void 0 === e ? void 0 : e.getData();\n      };\n    });\n  }, [t]), {\n    ref: t,\n    insert: n,\n    remove: s,\n    clear: c,\n    generateRandomTree: p,\n    extractTop: m,\n    getData: S\n  };\n};\n\nexport { B as AVLTree, b as BinarySearchTree, Y as MaxHeap, _ as MinHeap, q as RedBlackTree, J as Trie, Q as useAVLTree, G as useBinarySearchTree, Z as useHeap, Q as useRedBlackTree, K as useTrie };","map":{"version":3,"mappings":"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","names":["BINARY_TREE_TYPE","TREE_ID","CSS_VARIABLE_MAP","lineColor","variableName","defaultValue","description","lineHoverColor","lineRadius","nodeBorder","nodeBorderRadius","nodeBackgroundColor","nodeFontColor","nodeShadow","nodeTextShadow","nodeFontSize","nodeFontFamily","nodeAvlHeightFontSize","nodeRedBackgroundColor","nodeBlackBackgroundColor","nodeHighlightBorder","nodeHighlightBackgroundColor","nodeHighlightFontColor","nodeHighlightShadow","nodeHighlightTextShadow","nodeHoverBorder","nodeHoverBackgroundColor","nodeHoverFontColor","nodeHoverShadow","nodeHoverTextShadow","nodeNullFontColor","nodeNullHoverFontColor","transitionDuration","NULL_NODE_JSX","React","className","getNormalNodeJSX","value","leftJSX","rightJSX","isHighlighted","key","this","left","right","parent","currentJSX","Node","node","isLeft","newJSX","setJSX","updateRootJSX","insert","isLeftChild","childrenCondtion","setChildToChildsChild","setChildToNull","num","root","generateRandomBST","highlightedNode","leafDepth","BST","clearHighlight","newNode","insertNode","findMax","findMin","removeNode","remove","minNodeOfRight","updateValue","ans","height","Math","max","countNodes","list","push","preorder","inorder","postorder","addHighlight","search","lower","elements","Set","i","floor","random","has","add","COMPLETE","FULL","PERFECT","BSTTypeList","isBalanced","BALANCED","isComplete","isPerfect","isFull","leftHeight","rightHeight","abs","totalNodes","isComplete2","index","isPerfect2","depth","nodes","BSTToArr","length","makeBST","start","end","mid","t","useTreeState","treeObject","_b","useState","tree","setTreeInternal","_c","treeJSX","setTreeJSX","setTree","newTreeObject","useTreeStyle","treeStyles","useEffect","entries","Object","_i","style","document","getElementById","setProperty","handleStyles","css","ref","insertAt","head","getElementsByTagName","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","compareArray","array1","array2","b","memo","forwardRef","_a","data","useImperativeHandle","newTree","foundNode","getData","traversalOrder","traversalData","clear","balance","generateRandomTree","countOfNodes","checkTreeType","checkBST","forEach","elem","id","previousPros","newProps","words","w","isEnd","children","childrenJSX","nodeTrie","isAddHighlight","keys","updateJSX","highlightedTill","randomTrie","Trie","word","trim","toUpperCase","searchWord","removeHighligt","allWords","findAllWordsHelper","indexOfWordsAdded","J","trieFunctions","TrieDataStructure","deleteWord","findPrefix","searchPrefix","isPrefixFound","getAllWords","findAllWords","generateRandomTrie","wordCount","newTrie","removeHighlight","balanceJSX","AVL","tempNode","setHeight","balanceCheck","rotateLeft","rotateRight","leftH","rightH","B","checkAVL","color","isNull","NullNode","e","P","newNullNode","setHtml","updateRootHtml","highlighted","RBT","toRecolor","sibling","siblingOf","tempParent","deleteOneChild","smallestRight","child","replaceChild","deleteCase1","deleteCase2","deleteCase3","deleteCase4","deleteCase5","deleteCase6","q","RBTree","checkBinaryTree","extendStatics","d","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","constructor","create","heap","generateRandomHeap","Heap","j","console","error","heapifyUp","isEmpty","poppedTopElement","heapifyDown","pop","isMinHeap","indexOf","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","removeTop","parentIndex","child1Index","child2Index","child1JSX","child2JSX","MinHeap","childIndex","_d","deleteEl","MaxHeap","MinHeapDataStructure","extractTop","top","MaxHeapDataStructure","useBinarySearchTree","useRef","insertFunction","setInsertFunction","removeFunction","setRemoveFunction","searchFunction","setSearchFunction","getDataFunction","setGetDataFunction","_e","clearFunction","setClearFunction","_f","balanceFunction","setBalanceFunction","_g","generateRandomTreeFunction","setGenerateRandomTreeFunction","_h","checkTreeTypeFunction","setCheckTreeTypeFunction","current","useTrie","setInsert","setRemove","setSearch","setSearchPrefix","setGetAllWords","setGenerateRandomTrie","setRemoveHighlight","useSelfBalancingTree","useHeap","extractTopFunction","setExtractTopFunction"],"sources":["/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/src/constants.ts","/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/src/data-structures/BSTree.tsx","/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/src/hooks/useTreeState.ts","/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/src/hooks/useTreeStyle.ts","/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/node_modules/style-inject/dist/style-inject.es.js","/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/src/util.ts","/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/src/components/BinarySearchTree.tsx","/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/src/AllWords.ts","/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/src/data-structures/Trie.tsx","/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/src/components/Trie.tsx","/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/src/data-structures/AVLTree.tsx","/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/src/components/AVLTree.tsx","/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/src/data-structures/RedBlackTree.tsx","/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/src/components/RedBlackTree.tsx","/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/node_modules/tslib/tslib.es6.js","/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/src/data-structures/Heap.tsx","/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/src/components/MinHeap.tsx","/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/src/components/MaxHeap.tsx","/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/src/hooks/useBinarySearchTree.ts","/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/src/hooks/useTrie.ts","/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/src/hooks/useSelfBalancingTree.tsx","/media/midhun/New Volume/Projects/tre/node_modules/react-tree-vis/src/hooks/useHeap.ts"],"sourcesContent":["import { TableDataType } from './types'\n\nexport const INORDER_KEY = 'inorder'\nexport const POSTORDER_KEY = 'postorder'\nexport const PREORDER_KEY = 'preorder'\n\nexport const BINARY_TREE_TYPE = {\n  BALANCED: 'balanced',\n  COMPLETE: 'complete',\n  PERFECT: 'perfect',\n  FULL: 'full',\n}\n\nexport const TREE_ID = 'react-tree-vis'\n\nexport const CSS_VARIABLE_MAP = {\n  lineColor: {\n    variableName: '--line-color',\n    defaultValue: '#ccc',\n    description: 'Color of the line connecting nodes',\n  },\n  lineHoverColor: {\n    variableName: '--line-hover-color',\n    defaultValue: '#5f6674',\n    description: 'Hover color of the line connecting nodes',\n  },\n  lineRadius: {\n    variableName: '--line-radius',\n    defaultValue: '5px',\n    description: 'Radius of curves in the line',\n  },\n  nodeBorder: {\n    variableName: '--node-border',\n    defaultValue: 'none',\n    description:\n      'Border style of the nodes. Syntax of short-hand CSS border property is accepted here.',\n  },\n  nodeBorderRadius: {\n    variableName: '--node-border-radius',\n    defaultValue: '200px',\n    description: '',\n  },\n  nodeBackgroundColor: {\n    variableName: '--node-bg-color',\n    defaultValue: '#fff',\n    description: '',\n  },\n  nodeFontColor: {\n    variableName: '--node-font-color',\n    defaultValue: '#666',\n    description: '',\n  },\n  nodeShadow: {\n    variableName: '--node-shadow',\n    defaultValue: '-5px -5px 20px #fff, 5px 5px 20px #babecc',\n    description: 'Syntax of short-hand CSS shadow property accepted here.',\n  },\n  nodeTextShadow: {\n    variableName: '--node-text-shadow',\n    defaultValue: 'none',\n    description: 'Syntax of short-hand CSS shadow property accepted here.',\n  },\n  nodeFontSize: {\n    variableName: '--node-font-size',\n    defaultValue: '20px',\n    description: '',\n  },\n  nodeFontFamily: {\n    variableName: '--node-font-family',\n    defaultValue: 'arial, verdana, tahoma',\n    description: '',\n  },\n  nodeAvlHeightFontSize: {\n    variableName: '--node-avl-height-font-size',\n    defaultValue: '13px',\n    description: '',\n  },\n  nodeRedBackgroundColor: {\n    variableName: '--node-red-bg-color',\n    defaultValue: '#da606066',\n    description: '',\n  },\n  nodeBlackBackgroundColor: {\n    variableName: '--node-black-bg-color',\n    defaultValue: '#acacac66',\n    description: '',\n  },\n  nodeHighlightBorder: {\n    variableName: '--node-hl-border',\n    defaultValue: 'none',\n    description: 'Syntax of short-hand CSS border property is accepted here.',\n  },\n  nodeHighlightBackgroundColor: {\n    variableName: '--node-hl-bg-color',\n    defaultValue: '#fff',\n    description: '',\n  },\n  nodeHighlightFontColor: {\n    variableName: '--node-hl-font-color',\n    defaultValue: '#fff',\n    description: '',\n  },\n  nodeHighlightShadow: {\n    variableName: '--node-hl-shadow',\n    defaultValue: '-5px -5px 20px #fff, 5px 5px 20px #babecc',\n    description: 'Syntax of short-hand CSS shadow property accepted here.',\n  },\n  nodeHighlightTextShadow: {\n    variableName: '--node-hl-text-shadow',\n    defaultValue:\n      '0 0 5px #fff, 0 0 10px #fff, 0 0 15px #00ff15, 0 0 20px #00ff15, 0 0 25px #00ff15, 0 0 30px #00ff15, 0 0 35px #00ff15',\n    description: 'Syntax of short-hand CSS shadow property accepted here.',\n  },\n  nodeHoverBorder: {\n    variableName: '--node-hover-border',\n    defaultValue: 'none',\n    description: 'Syntax of short-hand CSS border property is accepted here.',\n  },\n  nodeHoverBackgroundColor: {\n    variableName: '--node-hover-bg-color',\n    defaultValue: '#fff',\n    description: '',\n  },\n  nodeHoverFontColor: {\n    variableName: '--node-hover-font-color',\n    defaultValue: '#002574',\n    description: '',\n  },\n  nodeHoverShadow: {\n    variableName: '--node-hover-shadow',\n    defaultValue: '-1px -1px 5px #fff, 1px 1px 5px #babecc',\n    description: 'Syntax of short-hand CSS shadow property accepted here.',\n  },\n  nodeHoverTextShadow: {\n    variableName: '--node-hover-text-shadow',\n    defaultValue: 'none',\n    description: 'Syntax of short-hand CSS shadow property accepted here.',\n  },\n  nodeNullFontColor: {\n    variableName: '--node-null-font-color',\n    defaultValue: '#7c7c7c2f',\n    description: '',\n  },\n  nodeNullHoverFontColor: {\n    variableName: '--node-null-hover-font-color',\n    defaultValue: '#ff0000b9',\n    description: '',\n  },\n  transitionDuration: {\n    variableName: '--transition',\n    defaultValue: '0.5s',\n    description: '',\n  },\n}\n\nexport const AVL_TREE_PROPS: TableDataType = {\n  head: ['Prop', 'Type', 'Required', 'Description'],\n  body: [\n    [\n      '<code>ref</code>',\n      '<code>React.MutableRefObject&lt;any&gt;</code>',\n      '❌',\n      'Allows interaction with AVLTree component. <code>ref</code> object passed, is obtained from <code>useAVLTree()</code>.',\n    ],\n    [\n      '<code>data</code>',\n      '<code>number[]</code>',\n      '❌',\n      'Elements in the array are inserted into the tree on mount.',\n    ],\n    [\n      '<code>treeStyles</code>',\n      '<code>object</code>',\n      '❌',\n      'Allows overriding default style of the component. Checkout treeStyles object story under STYLES for more info.',\n    ],\n  ],\n}\n\nexport const RED_BLACK_TREE_PROPS: TableDataType = {\n  head: ['Prop', 'Type', 'Required', 'Description'],\n  body: [\n    [\n      '<code>ref</code>',\n      '<code>React.MutableRefObject&lt;any&gt;</code>',\n      '❌',\n      'Allows interaction with RedBlackTree component. <code>ref</code> object passed, is obtained from <code>useRedBlackTree()</code>.',\n    ],\n    [\n      '<code>data</code>',\n      '<code>number[]</code>',\n      '❌',\n      'Elements in the array are inserted into the tree on mount.',\n    ],\n    [\n      '<code>treeStyles</code>',\n      '<code>object</code>',\n      '❌',\n      'Allows overriding default style of the component. Checkout treeStyles object story under STYLES for more info.',\n    ],\n  ],\n}\n\nexport const BINARY_SEARCH_TREE_PROPS: TableDataType = {\n  head: ['Prop', 'Type', 'Required', 'Description'],\n  body: [\n    [\n      '<code>ref</code>',\n      '<code>React.MutableRefObject&lt;any&gt;</code>',\n      '❌',\n      'Allows interaction with BST component. <code>ref</code> object passed, is obtained from <code>useBinarySearchTree()</code>.',\n    ],\n    [\n      '<code>data</code>',\n      '<code>number[]</code>',\n      '❌',\n      'Elements in the array are inserted into the tree on mount.',\n    ],\n    [\n      '<code>treeStyles</code>',\n      '<code>object</code>',\n      '❌',\n      'Allows overriding default style of the component. Checkout treeStyles object story under STYLES for more info.',\n    ],\n  ],\n}\n\nexport const HEAP_PROPS: TableDataType = {\n  head: ['Prop', 'Type', 'Required', 'Description'],\n  body: [\n    [\n      '<code>ref</code>',\n      '<code>React.MutableRefObject&lt;any&gt;</code>',\n      '❌',\n      'Allows interaction with Heap component. <code>ref</code> object passed, is obtained from <code>useHeap()</code>.',\n    ],\n    [\n      '<code>data</code>',\n      '<code>number[]</code>',\n      '❌',\n      'Elements in the array are inserted into the tree on mount.',\n    ],\n    [\n      '<code>treeStyles</code>',\n      '<code>object</code>',\n      '❌',\n      'Allows overriding default style of the component. Checkout treeStyles object story under STYLES for more info.',\n    ],\n  ],\n}\n\nexport const TRIE_PROPS: TableDataType = {\n  head: ['Prop', 'Type', 'Required', 'Description'],\n  body: [\n    [\n      '<code>ref</code>',\n      '<code>React.MutableRefObject&lt;any&gt;</code>',\n      '❌',\n      'Allows interaction with Trie component. <code>ref</code> object passed, is obtained from <code>useTrie()</code>.',\n    ],\n    [\n      '<code>data</code>',\n      '<code>string[]</code>',\n      '❌',\n      'Elements in the array are inserted into the trie on mount.',\n    ],\n    [\n      '<code>treeStyles</code>',\n      '<code>object</code>',\n      '❌',\n      'Allows overriding default style of the component. Checkout treeStyles object story under STYLES for more info.',\n    ],\n  ],\n}\n\nexport const AVL_HOOK_PROPERTIES: TableDataType = {\n  head: ['Property', 'Type', 'Description'],\n  body: [\n    [\n      '<code>ref</code>',\n      '<code>React.MutableRefObject&lt;any&gt;</code>',\n      'Pass this ref object to your tree component. It binds the functions returned by this hook to that component.',\n    ],\n    [\n      '<code>insert</code>',\n      '<code>(value: number) => void</code>',\n      'Inserts the value',\n    ],\n    [\n      '<code>remove</code>',\n      '<code>(value: number) => boolean</code>',\n      'removes the value',\n    ],\n    [\n      '<code>search</code>',\n      '<code>(value: number) => boolean</code>',\n      'Searches the value and returns true if found. Also, node found is highlighted',\n    ],\n    [\n      '<code>getData</code>',\n      '<code>(traversalOrder: TraversalOrderType) => number[]</code>',\n      'Returns traversal of the tree',\n    ],\n    ['<code>clear</code>', '<code>() => void</code>', 'Removes all nodes '],\n    [\n      '<code>generateRandomTree</code>',\n      '<code>(countOfNodes: number) => void</code>',\n      'Removes all nodes and inserts countOfNodes random values.',\n    ],\n    [\n      '<code>checkTreeType</code>',\n      '<code>() => BinaryTreeCheckType[]</code>',\n      'Checks whether the current tree is balanced, complete, perfect or full',\n    ],\n  ],\n}\n\nexport const BINARY_SEARCH_TREE_HOOK_PROPERTIES: TableDataType = {\n  head: ['Property', 'Type', 'Description'],\n  body: [\n    [\n      '<code>ref</code>',\n      '<code>React.MutableRefObject&lt;any&gt;</code>',\n      'Pass this ref object to your tree component. It binds the functions returned by this hook to that component.',\n    ],\n    [\n      '<code>insert</code>',\n      '<code>(value: number) => void</code>',\n      'Inserts the value',\n    ],\n    [\n      '<code>remove</code>',\n      '<code>(value: number) => boolean</code>',\n      'removes the value',\n    ],\n    [\n      '<code>search</code>',\n      '<code>(value: number) => boolean</code>',\n      'Searches the value and returns true if found. Also, node found is highlighted',\n    ],\n    [\n      '<code>getData</code>',\n      '<code>(traversalOrder: TraversalOrderType) => number[]</code>',\n      'Returns traversal of the tree',\n    ],\n    ['<code>clear</code>', '<code>() => void</code>', 'Removes all nodes'],\n    ['<code>balance</code>', '<code>() => void</code>', '\tBalances the tree'],\n    [\n      '<code>generateRandomTree</code>',\n      '<code>(countOfNodes: number) => void</code>',\n      'Removes all nodes and inserts countOfNodes random values.',\n    ],\n    [\n      '<code>checkTreeType</code>',\n      '<code>() => BinaryTreeCheckType[]</code>',\n      'Checks whether the current tree is balanced, complete, perfect or full',\n    ],\n  ],\n}\n\nexport const HEAP_HOOK_PROPERTIES: TableDataType = {\n  head: ['Property', 'Type', 'Description'],\n  body: [\n    [\n      '<code>ref</code>',\n      '<code>React.MutableRefObject&lt;any&gt;</code>',\n      'Pass this ref object to your tree component. It binds the functions returned by this hook to that component.',\n    ],\n    [\n      '<code>insert</code>',\n      '<code>(value: number) => void</code>',\n      'Inserts the value',\n    ],\n    [\n      '<code>remove</code>',\n      '<code>(value: number) => boolean</code>',\n      'removes the value',\n    ],\n    [\n      '<code>getData</code>',\n      '<code>() => number[]</code>',\n      'Returns internal array used to create heap',\n    ],\n    ['<code>clear</code>', '<code>() => void</code>', 'Removes all nodes '],\n    [\n      '<code>generateRandomTree</code>',\n      '<code>(countOfNodes: number) => void</code>',\n      'Removes all nodes and inserts countOfNodes random values.',\n    ],\n    [\n      '<code>extractTop</code>',\n      '<code>() => number</code>',\n      'Extracts the top most value from the heap and returns it',\n    ],\n  ],\n}\n\nexport const TRIE_HOOK_PROPERTIES: TableDataType = {\n  head: ['Property', 'Type', 'Description'],\n  body: [\n    [\n      '<code>ref</code>',\n      '<code>React.MutableRefObject&lt;any&gt;</code>',\n      'Pass this ref object to your Trie component. It binds the functions returned by this hook to that component.',\n    ],\n    [\n      '<code>insert</code>',\n      '<code>(word: string) => void</code>',\n      'Inserts the word',\n    ],\n    [\n      '<code>remove</code>',\n      '<code>(word: string) => boolean</code>',\n      'removes the word',\n    ],\n    [\n      '<code>search</code>',\n      '<code>(word: string) => boolean</code>',\n      'Searches the word and returns true if found. Also, the nodes are highlighted.',\n    ],\n    [\n      '<code>searchPrefix</code>',\n      '<code>(word: string) => boolean</code>',\n      'Searches the prefix and return true if full prefix is present. Also, the nodes are highlighted.',\n    ],\n    [\n      '<code>getAllWords</code>',\n      '<code>() => string[]</code>',\n      'Returns an array of all the words in trie',\n    ],\n    [\n      '<code>generateRandomTrie</code>',\n      '<code>(countOfWords: number) => void</code>',\n      'Removes all nodes and inserts countOfNodes random words.',\n    ],\n    [\n      '<code>removeHighlight</code>',\n      '<code>() => void</code>',\n      'Removes highlight from all the nodes, if any',\n    ],\n  ],\n}\n","import React from 'react'\nimport { BINARY_TREE_TYPE } from '../constants'\nimport { BinaryTreeCheckType } from '../types'\n\nconst LEFT = 'left'\nconst RIGHT = 'right'\n\nconst NULL_NODE_JSX = (\n  <li className=\"null\">\n    <div>null</div>\n  </li>\n)\n\nconst getNormalNodeJSX = (\n  value: number,\n  leftJSX: JSX.Element,\n  rightJSX: JSX.Element,\n  isHighlighted = false,\n) => (\n  <li key={value}>\n    <div className={`normal ${isHighlighted ? 'highlight' : ''}`}>{value}</div>\n    <ul>\n      {leftJSX} {rightJSX}\n    </ul>\n  </li>\n)\n\nexport class Node {\n  value: number\n  left: Node\n  right: Node\n  parent: Node\n  leftJSX: JSX.Element\n  rightJSX: JSX.Element\n  currentJSX: JSX.Element\n\n  constructor(value: number) {\n    this.value = value\n    this.left = null\n    this.right = null\n    this.parent = null\n    this.leftJSX = NULL_NODE_JSX\n    this.rightJSX = NULL_NODE_JSX\n    this.currentJSX = getNormalNodeJSX(this.value, this.leftJSX, this.rightJSX)\n  }\n\n  //Inserts a node in JSX\n  insert(node: Node, isLeft: boolean): void {\n    const newJSX = node.currentJSX\n\n    if (isLeft) {\n      this.leftJSX = newJSX\n    } else {\n      this.rightJSX = newJSX\n    }\n    this.setJSX()\n    this.updateRootJSX()\n  }\n\n  //Updates JSX for the node\n  setJSX(): void {\n    this.currentJSX = getNormalNodeJSX(this.value, this.leftJSX, this.rightJSX)\n  }\n\n  //Updates the whole JSX\n  updateRootJSX(): void {\n    if (this.parent !== null) {\n      if (this.parent.left === this) this.parent.insert(this, true)\n      else this.parent.insert(this, false)\n    }\n  }\n\n  //Sets one child to null\n  setChildToNull(isLeft: boolean): void {\n    if (isLeft) this.leftJSX = NULL_NODE_JSX\n    else this.rightJSX = NULL_NODE_JSX\n    this.setJSX()\n    this.updateRootJSX()\n  }\n\n  //Sets grandchild to child\n  setChildToChildsChild(isLeftChild: boolean, isLeft: boolean): void {\n    if (isLeftChild) {\n      if (isLeft) {\n        this.leftJSX = this.left.left.currentJSX\n        this.setJSX()\n      } else {\n        this.leftJSX = this.left.right.currentJSX\n        this.setJSX()\n      }\n    } else {\n      if (isLeft) {\n        this.rightJSX = this.right.left.currentJSX\n        this.setJSX()\n      } else {\n        this.rightJSX = this.right.right.currentJSX\n\n        this.setJSX()\n      }\n    }\n    this.updateRootJSX()\n  }\n\n  //Removes a node from JSX\n  remove(childrenCondtion: string): void {\n    if (!this.parent) return\n    if (!childrenCondtion) {\n      if (this.parent.left === this) {\n        this.parent.setChildToNull(true)\n      } else {\n        this.parent.setChildToNull(false)\n      }\n    } else if (childrenCondtion === LEFT) {\n      if (this.parent.left === this) {\n        this.parent.setChildToChildsChild(true, true)\n      } else {\n        this.parent.setChildToChildsChild(false, true)\n      }\n    } else {\n      if (this.parent.left === this) {\n        this.parent.setChildToChildsChild(true, false)\n      } else {\n        this.parent.setChildToChildsChild(false, false)\n      }\n    }\n  }\n\n  //Updates the value of a node\n  updateValue(value: number): void {\n    this.value = value\n    this.setJSX()\n    this.updateRootJSX()\n  }\n\n  //Adds highlight to a node when searched\n  addHighlight(): void {\n    this.currentJSX = getNormalNodeJSX(\n      this.value,\n      this.leftJSX,\n      this.rightJSX,\n      true,\n    )\n    this.updateRootJSX()\n  }\n\n  //Removes the highlight\n  clearHighlight(): void {\n    this.setJSX()\n\n    this.updateRootJSX()\n  }\n\n  //Changes the JSX when tree is balanced\n  balanceJSX(): void {\n    if (!this.left && this.right) {\n      this.rightJSX = this.right.currentJSX\n      this.setChildToNull(true)\n    } else if (!this.right && this.left) {\n      this.leftJSX = this.left.currentJSX\n      this.setChildToNull(false)\n    } else if (this.right && this.left) {\n      this.leftJSX = this.left.currentJSX\n      this.rightJSX = this.right.currentJSX\n      this.setJSX()\n      this.updateRootJSX()\n    } else {\n      this.leftJSX = NULL_NODE_JSX\n      this.rightJSX = NULL_NODE_JSX\n      this.setJSX()\n      this.updateRootJSX()\n    }\n  }\n}\n\nclass BST {\n  root: Node\n  highlightedNode: Node\n  leafDepth: number\n\n  constructor(num = 0) {\n    this.root = null\n    if (num) {\n      this.generateRandomBST(num)\n    }\n    this.highlightedNode = null\n    this.leafDepth = -1\n  }\n\n  //inserting a new node\n  insert(value: number): void {\n    this.clearHighlight()\n    const newNode = new Node(value)\n    if (this.root === null) {\n      this.root = newNode\n    } else this.insertNode(this.root, newNode)\n  }\n\n  insertNode(node: Node, newNode: Node): void {\n    if (newNode.value < node.value) {\n      if (node.left === null) {\n        node.left = newNode\n        newNode.parent = node\n        node.insert(newNode, true)\n      } else this.insertNode(node.left, newNode)\n    } else {\n      if (node.right === null) {\n        node.right = newNode\n        newNode.parent = node\n        node.insert(newNode, false)\n      } else this.insertNode(node.right, newNode)\n    }\n  }\n\n  //Finding max value\n  findMax(node = this.root): Node {\n    if (node == null) return node\n    else if (node.right == null) {\n      return node\n    } else {\n      return this.findMax(node.right)\n    }\n  }\n\n  //Finding min value\n  findMin(node = this.root): Node {\n    if (node == null) return node\n    else if (node.left == null) {\n      return node\n    } else {\n      return this.findMin(node.left)\n    }\n  }\n\n  //Deleting node\n  remove(value: number): void {\n    this.clearHighlight()\n    this.root = this.removeNode(this.root, value)\n  }\n\n  // TODO: Probably returning a node is not required, handling it simialr to insert function\n  removeNode(node: Node, value: number): Node {\n    if (node === null) return null\n    else if (value < node.value) {\n      node.left = this.removeNode(node.left, value)\n      return node\n    } else if (value > node.value) {\n      node.right = this.removeNode(node.right, value)\n      return node\n    } else {\n      if (node.left === null && node.right === null) {\n        node.remove(null)\n        node = null\n        return node\n      }\n      if (node.left === null) {\n        node.remove(RIGHT)\n        node.right.parent = node.parent\n        node = node.right\n        return node\n      } else if (node.right === null) {\n        node.remove(LEFT)\n        node.left.parent = node.parent\n        node = node.left\n        return node\n      }\n      const minNodeOfRight = this.findMin(node.right)\n      node.updateValue(minNodeOfRight.value)\n\n      node.right = this.removeNode(node.right, minNodeOfRight.value)\n      return node\n    }\n  }\n\n  //Find height\n  height(node = this.root): number {\n    if (node === null) return -1\n    let ans: number\n    ans = this.height(node.left)\n    ans = Math.max(this.height(node.right), ans)\n    return ans + 1\n  }\n\n  //Count number of nodes\n  countNodes(node = this.root): number {\n    if (node === null) return 0\n    return this.countNodes(node.left) + 1 + this.countNodes(node.right)\n  }\n\n  //BST traversal\n  preorder(list: number[], node = this.root): void {\n    if (node !== null) {\n      list.push(node.value)\n      this.preorder(list, node.left)\n      this.preorder(list, node.right)\n    }\n  }\n\n  inorder(list: number[], node = this.root): void {\n    if (node !== null) {\n      this.inorder(list, node.left)\n      list.push(node.value)\n      this.inorder(list, node.right)\n    }\n  }\n\n  postorder(list: number[], node = this.root): void {\n    if (node !== null) {\n      this.postorder(list, node.left)\n      this.postorder(list, node.right)\n      list.push(node.value)\n    }\n  }\n\n  //Search\n  search(value: number, node = this.root): boolean {\n    this.clearHighlight()\n\n    if (node === null) return false\n    else if (node.value === value) {\n      node.addHighlight()\n      this.highlightedNode = node\n      return true\n    } else if (node.value > value) return this.search(value, node.left)\n    else return this.search(value, node.right)\n  }\n\n  //Random Tree generator\n  generateRandomBST(num: number): void {\n    const upper = 0\n    const lower = num * 2 + 10\n    const elements = new Set()\n    for (let i = 0; i < num; i++) {\n      let value = Math.floor(Math.random() * (upper - lower + 1)) + lower\n      while (elements.has(value)) {\n        value = Math.floor(Math.random() * (upper - lower + 1)) + lower\n      }\n      elements.add(value)\n      this.insert(value)\n    }\n  }\n\n  //BST Checker\n  //Main Checker function\n  checkBST(): BinaryTreeCheckType[] {\n    const { BALANCED, COMPLETE, FULL, PERFECT } = BINARY_TREE_TYPE\n    const BSTTypeList: BinaryTreeCheckType[] = []\n    if (this.isBalanced()) {\n      BSTTypeList.push(BALANCED)\n    }\n    if (this.isComplete()) {\n      BSTTypeList.push(COMPLETE)\n    }\n    if (this.isPerfect()) {\n      BSTTypeList.push(FULL)\n    }\n    if (this.isFull()) {\n      BSTTypeList.push(PERFECT)\n    }\n    return BSTTypeList\n  }\n\n  //Subfunctions\n  //balance\n  isBalanced(node = this.root): boolean {\n    if (node === null) return true\n    const leftHeight = this.height(node.left)\n    const rightHeight = this.height(node.right)\n    if (Math.abs(leftHeight - rightHeight) <= 1) {\n      return this.isBalanced(node.left) && this.isBalanced(node.right)\n    } else {\n      return false\n    }\n  }\n\n  //complete\n  isComplete(): boolean {\n    const totalNodes = this.countNodes()\n    return this.isComplete2(0, totalNodes)\n  }\n  isComplete2(index: number, totalNodes: number, node = this.root): boolean {\n    if (node === null) return true\n    else if (index >= totalNodes) return false\n    else {\n      let ans = this.isComplete2(index * 2 + 1, totalNodes, node.left)\n      ans &&= this.isComplete2(index * 2 + 2, totalNodes, node.right)\n      return ans\n    }\n  }\n\n  //perfect\n  isPerfect(): boolean {\n    if (!this.isFull() || !this.isComplete()) return false\n    return this.isPerfect2()\n  }\n\n  isPerfect2(node = this.root, depth = 0): boolean {\n    if (!node) return true\n    depth++\n    if (!node.right && !node.left) {\n      if (this.leafDepth !== -1 && this.leafDepth !== depth) return false\n      this.leafDepth = depth\n    }\n    return (\n      this.isPerfect2(node.left, depth) && this.isPerfect2(node.right, depth)\n    )\n  }\n\n  //full\n  isFull(node = this.root): boolean {\n    if (node === null) return true\n    else if (node.left === null && node.right === null) return true\n    else if (node.left !== null && node.right !== null) {\n      let ans: boolean\n      ans = this.isFull(node.left)\n      ans &&= this.isFull(node.right)\n      return ans\n    } else return false\n  }\n\n  //Balancing BST\n  // TODO: improve the algorithm, it does not work for repeated values\n  balance(node = this.root): void {\n    this.clearHighlight()\n    const nodes: Node[] = []\n    this.BSTToArr(node, nodes)\n    const length = nodes.length\n    this.root = null\n\n    this.makeBST(nodes, 0, length - 1)\n  }\n\n  //Balancing sub functions\n  BSTToArr(node: Node, nodes: Node[]): void {\n    if (node !== null) {\n      this.BSTToArr(node.left, nodes)\n      nodes.push(node)\n      this.BSTToArr(node.right, nodes)\n    }\n  }\n\n  //making BST from array\n  makeBST(nodes: Node[], start: number, end: number): void {\n    if (start > end) {\n      return\n    }\n    const mid = Math.floor((start + end) / 2)\n    this.insert(nodes[mid].value)\n    this.makeBST(nodes, start, mid - 1)\n    this.makeBST(nodes, mid + 1, end)\n  }\n\n  clearHighlight(): void {\n    if (this.highlightedNode) {\n      this.highlightedNode.clearHighlight()\n      this.highlightedNode = null\n    }\n  }\n}\n\nexport default BST\n","import { useState } from 'react'\nimport BST from '../data-structures/BSTree'\n\ntype ReturnType<TreeType> = {\n  tree: TreeType\n  treeJSX: JSX.Element\n  setTree: (newTreeObject: TreeType) => void\n}\n\nfunction useTreeState<TreeType = BST>(\n  treeObject: TreeType,\n): ReturnType<TreeType> {\n  const [tree, setTreeInternal] = useState<TreeType>(treeObject)\n  const [treeJSX, setTreeJSX] = useState<JSX.Element>(\n    (treeObject as any)?.root.currentJSX,\n  )\n  const setTree = (newTreeObject: TreeType) => {\n    setTreeInternal(newTreeObject)\n    setTreeJSX(\n      (newTreeObject as any)?.root?.currentJSX ||\n        (newTreeObject as any)?.currentJSX,\n    )\n  }\n  return { tree, treeJSX, setTree }\n}\n\nexport default useTreeState\n","import { useEffect } from 'react'\nimport { CSS_VARIABLE_MAP, TREE_ID } from '../constants'\nimport { TreeStylesType } from '../types'\n\nconst useTreeStyle = (treeStyles: TreeStylesType): void => {\n  const handleStyles = () => {\n    if (!treeStyles) return\n    for (const [style, value] of Object.entries(treeStyles)) {\n      document\n        .getElementById(TREE_ID)\n        .style.setProperty(CSS_VARIABLE_MAP[style].variableName, value)\n    }\n  }\n  useEffect(() => {\n    handleStyles()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [treeStyles])\n}\nexport default useTreeStyle\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { CSS_VARIABLE_MAP } from './constants'\nimport { TableDataType } from './types'\n\nexport const compareArray = (array1: any[], array2: any[]): boolean => {\n  if (array1.length !== array2.length) return false\n  for (let i = 0; i < array1.length; i++) {\n    if (array1[i] !== array2[i]) return false\n  }\n  return true\n}\n\nexport const handleStyleArgTypes = (): Record<string, any> => {\n  const argTypes = {}\n  for (const [style, { defaultValue }] of Object.entries(CSS_VARIABLE_MAP)) {\n    argTypes[style] = {\n      control: {\n        type: style.includes('Color') ? 'color' : 'text',\n      },\n      defaultValue,\n    }\n  }\n  return argTypes\n}\n\nexport const getTreeStylesInTableDataFormat = () => {\n  const data: TableDataType = { head: [], body: [] }\n  data.head = ['Property', 'Type', 'Description', 'Default']\n  data.body = Object.entries(CSS_VARIABLE_MAP).map(\n    ([key, { description, defaultValue }]) => [\n      `<code>${key}</code>`,\n      '<code>string</code>',\n      description,\n      `<code>${defaultValue}</code>`,\n    ],\n  )\n  return data\n}\n","import React, { forwardRef, useEffect, useImperativeHandle } from 'react'\nimport { TREE_ID } from '../constants'\nimport BST from '../data-structures/BSTree'\nimport useTreeState from '../hooks/useTreeState'\nimport useTreeStyle from '../hooks/useTreeStyle'\nimport '../styles/BinarySearchTree.css'\nimport {\n  BinaryTreeCheckType,\n  BinaryTreeRefType,\n  TraversalOrderType,\n  TreeStylesType,\n} from '../types'\nimport { compareArray } from '../util'\n\ntype BSTProps = {\n  data?: number[]\n  treeStyles?: TreeStylesType\n}\n\nconst BinarySearchTree: React.ForwardRefRenderFunction<\n  BinaryTreeRefType,\n  BSTProps\n> = (\n  { data, treeStyles }: BSTProps,\n  ref: React.MutableRefObject<BinaryTreeRefType>,\n) => {\n  const { tree, treeJSX, setTree } = useTreeState(null)\n  useTreeStyle(treeStyles)\n\n  useImperativeHandle(ref, () => ({\n    insert: (value: number) => {\n      // if tree is empty\n      if (!tree?.root) {\n        const newTree = new BST()\n        newTree.insert(value)\n        setTree(newTree)\n        return\n      }\n\n      tree.insert(value)\n      setTree(tree)\n    },\n    remove: (value: number): boolean => {\n      if (!tree?.root) return false\n\n      if (!tree.search(value)) return false\n      tree.remove(value)\n      setTree(tree.root ? tree : null)\n      return true\n    },\n    search: (value: number): boolean => {\n      if (!tree?.root) return false\n      const foundNode = tree.search(value)\n      if (foundNode) setTree(tree)\n      return foundNode\n    },\n    getData: (traversalOrder: TraversalOrderType): number[] => {\n      const traversalData = []\n      tree[traversalOrder](traversalData)\n      return traversalData\n    },\n    clear: () => {\n      setTree(new BST())\n    },\n    balance: () => {\n      tree.balance()\n      setTree(tree)\n    },\n    generateRandomTree: (countOfNodes: number) => {\n      const newTree = new BST(countOfNodes)\n      setTree(newTree)\n    },\n    checkTreeType: (): BinaryTreeCheckType[] => {\n      return tree.checkBST()\n    },\n  }))\n\n  const handleData = () => {\n    const newTree = new BST()\n    data.forEach((elem) => newTree.insert(elem))\n    setTree(newTree)\n  }\n\n  useEffect(() => {\n    if (data) handleData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data])\n\n  return (\n    <div id={TREE_ID}>\n      <ul>{treeJSX}</ul>\n    </div>\n  )\n}\n\n// returns true if data has changed\nconst compareBinarySearchTree = (previousPros: BSTProps, newProps: BSTProps) =>\n  previousPros.data &&\n  newProps.data &&\n  compareArray(previousPros.data, newProps.data)\n\nexport default React.memo(forwardRef(BinarySearchTree), compareBinarySearchTree)\n","const words = {\n  words: [\n    'step',\n    'tremble',\n    'dinner',\n    'gigantic',\n    'elated',\n    'torpid',\n    'crook',\n    'throat',\n    'equal',\n    'sum',\n    'marked',\n    'suggestion',\n    'dapper',\n    'afford',\n    'happy',\n    'mist',\n    'robin',\n    'spot',\n    'reaction',\n    'crayon',\n    'irritate',\n    'tightfisted',\n    'warlike',\n    'difficult',\n    'distinct',\n    'share',\n    'spiffy',\n    'suspend',\n    'base',\n    'squeak',\n    'abundant',\n    'unlock',\n    'spiritual',\n    'amuse',\n    'chance',\n    'crowded',\n    'friendly',\n    'shade',\n    'telephone',\n    'pig',\n    'parcel',\n    'part',\n    'follow',\n    'amount',\n    'earthy',\n    'collect',\n    'sort',\n    'drunk',\n    'blow',\n    'division',\n    'curve',\n    'seed',\n    'sniff',\n    'greet',\n    'workable',\n    'small',\n    'detect',\n    'week',\n    'day',\n    'truthful',\n    'milk',\n    'spotless',\n    'coat',\n    'escape',\n    'debt',\n    'optimal',\n    'jar',\n    'quixotic',\n    'lick',\n    'inconclusive',\n    'bruise',\n    'maid',\n    'laugh',\n    'scare',\n    'perform',\n    'chivalrous',\n    'nonstop',\n    'spiteful',\n    'ignore',\n    'toothbrush',\n    'promise',\n    'redundant',\n    'impulse',\n    'value',\n    'chalk',\n    'appear',\n    'sloppy',\n    'hook',\n    'breathe',\n    'wakeful',\n    'supreme',\n    'cat',\n    'arm',\n    'settle',\n    'orange',\n    'zoom',\n    'territory',\n    'damaging',\n    'deliver',\n    'children',\n    'protect',\n    'test',\n    'cracker',\n    'loutish',\n    'disapprove',\n    'clover',\n    'fry',\n    'blink',\n    'snails',\n    'neck',\n    'experience',\n    'boy',\n    'rely',\n    'expert',\n    'sulky',\n    'things',\n    'nation',\n    'jewel',\n    'crowd',\n    'tan',\n    'uncovered',\n    'abrupt',\n    'sad',\n    'rambunctious',\n    'pricey',\n    'slim',\n    'skinny',\n    'scissors',\n    'hour',\n    'cuddly',\n    'potato',\n    'lively',\n    'dirt',\n    'receipt',\n    'great',\n    'heap',\n    'cherries',\n    'lowly',\n    'wide',\n    'cowardly',\n    'insect',\n    'behave',\n    'zephyr',\n    'parallel',\n    'interfere',\n    'acoustics',\n    'head',\n    'stir',\n    'increase',\n    'steady',\n    'insurance',\n    'dashing',\n    'shrug',\n    'babies',\n    'efficient',\n    'chilly',\n    'puncture',\n    'excuse',\n    'advice',\n    'example',\n    'tin',\n    'dry',\n    'substance',\n    'jazzy',\n    'employ',\n    'lonely',\n    'reduce',\n    'majestic',\n    'spicy',\n    'gaudy',\n    'wealthy',\n    'rush',\n    'channel',\n    'harm',\n    'quirky',\n    'brief',\n    'stamp',\n    'thought',\n    'blot',\n    'shop',\n    'relax',\n    'destruction',\n    'zebra',\n    'fairies',\n    'wish',\n    'wobble',\n    'wail',\n    'light',\n    'growth',\n    'monkey',\n    'mine',\n    'yell',\n    'boil',\n    'egg',\n    'shrill',\n    'gate',\n    'deserve',\n    'lettuce',\n    'play',\n    'pick',\n    'shaggy',\n    'bee',\n    'cross',\n    'carry',\n    'form',\n    'malicious',\n    'side',\n    'dusty',\n    'trick',\n    'responsible',\n    'visit',\n    'maniacal',\n    'vast',\n    'mitten',\n    'visitor',\n    'feeling',\n    'gorgeous',\n    'sneaky',\n    'zipper',\n    'muddle',\n    'thumb',\n    'insidious',\n    'fresh',\n    'passenger',\n    'flat',\n    'giant',\n    'penitent',\n    'snail',\n    'free',\n    'dear',\n    'group',\n    'smiling',\n    'reflect',\n    'shut',\n    'overjoyed',\n    'key',\n    'clammy',\n    'stone',\n    'judge',\n    'repulsive',\n    'plantation',\n    'dreary',\n    'town',\n    'sincere',\n    'expansion',\n    'paddle',\n    'push',\n    'tray',\n    'lewd',\n    'mice',\n    'board',\n    'thank',\n    'nut',\n    'unpack',\n    'wash',\n    'sister',\n    'brainy',\n    'purple',\n    'preach',\n    'merciful',\n    'sidewalk',\n    'pathetic',\n    'start',\n    'limit',\n    'naive',\n    'fantastic',\n    'rebel',\n    'invent',\n    'macho',\n    'cellar',\n    'sable',\n    'list',\n    'rob',\n    'spiky',\n    'savory',\n    'cart',\n    'nasty',\n    'evanescent',\n    'shame',\n    'hurried',\n    'calculator',\n    'comb',\n    'selfish',\n    'internal',\n    'axiomatic',\n    'seat',\n    'return',\n    'different',\n    'stream',\n    'frogs',\n    'oval',\n    'same',\n    'oafish',\n    'tug',\n    'thoughtless',\n    'heady',\n    'limping',\n    'badge',\n    'learned',\n    'efficacious',\n    'haunt',\n    'annoying',\n    'battle',\n    'tooth',\n    'heavy',\n    'spectacular',\n    'ajar',\n    'silent',\n    'statuesque',\n    'earth',\n    'zinc',\n    'laborer',\n    'boast',\n    'faithful',\n    'annoy',\n    'honey',\n    'women',\n    'bells',\n    'spare',\n    'remind',\n    'agreement',\n    'wry',\n    'slave',\n    'pumped',\n    'nebulous',\n    'royal',\n    'rot',\n    'reign',\n    'arrogant',\n    'spotted',\n    'wire',\n    'judicious',\n    'graceful',\n    'defeated',\n    'black',\n    'piquant',\n    'extend',\n    'early',\n    'belligerent',\n    'dust',\n    'cooing',\n    'subdued',\n    'lip',\n    'messy',\n    'snake',\n    'save',\n    'sheet',\n    'bow',\n    'hulking',\n    'accept',\n    'inquisitive',\n    'mammoth',\n    'elderly',\n    'land',\n    'kiss',\n    'freezing',\n    'aunt',\n    'quack',\n    'wave',\n    'dogs',\n    'knotty',\n    'arrest',\n    'bell',\n    'one',\n    'print',\n    'underwear',\n    'painful',\n    'wicked',\n    'birthday',\n    'cream',\n    'proud',\n    'sour',\n    'greedy',\n    'surprise',\n    'pray',\n    'fetch',\n    'furniture',\n    'songs',\n    'kitty',\n    'metal',\n    'painstaking',\n    'hat',\n    'adamant',\n    'rifle',\n    'charming',\n    'scale',\n    'heartbreaking',\n    'friend',\n    'blade',\n    'plane',\n    'cloth',\n    'holistic',\n    'yellow',\n    'sassy',\n    'terrible',\n    'bad',\n    'toes',\n    'parched',\n    'secretary',\n    'rescue',\n    'shiny',\n    'need',\n    'sticky',\n    'explode',\n    'squeeze',\n    'dime',\n    'ancient',\n    'idiotic',\n    'box',\n    'pot',\n    'field',\n    'handy',\n    'cent',\n    'drop',\n    'rings',\n    'taste',\n    'bead',\n    'ear',\n    'camera',\n    'month',\n    'move',\n    'awful',\n    'identify',\n    'yielding',\n    'omniscient',\n    'governor',\n    'handsome',\n    'vegetable',\n    'team',\n    'odd',\n    'sand',\n    'show',\n    'sweet',\n    'numberless',\n    'infamous',\n    'frightened',\n    'watery',\n    'wool',\n    'cobweb',\n    'coal',\n    'observe',\n    'connection',\n    'song',\n    'faulty',\n    'deafening',\n    'jog',\n    'match',\n    'complain',\n    'cut',\n    'servant',\n    'skirt',\n    'sticks',\n    'weigh',\n    'acid',\n    'excellent',\n    'damp',\n    'glib',\n    'devilish',\n    'attractive',\n    'trashy',\n    'nippy',\n    'tight',\n    'squirrel',\n    'power',\n    'bite',\n    'hang',\n    'cynical',\n    'rhyme',\n    'humdrum',\n    'sick',\n    'men',\n    'late',\n    'tempt',\n    'duck',\n    'eatable',\n    'dam',\n    'sharp',\n    'wistful',\n    'third',\n    'nimble',\n    'agonizing',\n    'living',\n    'closed',\n    'low',\n    'hissing',\n    'uppity',\n    'check',\n    'puffy',\n    'adjoining',\n    'ambiguous',\n    'sleepy',\n    'tour',\n    'rigid',\n    'erratic',\n    'abhorrent',\n    'colossal',\n    'vengeful',\n    'sky',\n    'grotesque',\n    'exultant',\n    'adaptable',\n    'turn',\n    'versed',\n    'donkey',\n    'ask',\n    'crazy',\n    'useful',\n    'pass',\n    'medical',\n    'prickly',\n    'guarded',\n    'explain',\n    'cooperative',\n    'drag',\n    'squalid',\n    'sock',\n    'ruthless',\n    'lumber',\n    'wrestle',\n    'worm',\n    'worry',\n    'capable',\n    'lamp',\n    'powder',\n    'squeal',\n    'control',\n    'class',\n    'depressed',\n    'point',\n    'death',\n    'gentle',\n    'beginner',\n    'reply',\n    'pour',\n    'likeable',\n    'actually',\n    'preserve',\n    'adhesive',\n    'clear',\n    'cool',\n    'squealing',\n    'veil',\n    'unsuitable',\n    'imperfect',\n    'count',\n    'curvy',\n    'brass',\n    'even',\n    'shoe',\n    'alcoholic',\n    'beautiful',\n    'youthful',\n    'treatment',\n    'bridge',\n    'animal',\n    'son',\n    'decision',\n    'humor',\n    'moon',\n    'delightful',\n    'design',\n    'improve',\n    'luxuriant',\n    'stay',\n    'tongue',\n    'stingy',\n    'collar',\n    'highfalutin',\n    'disgusting',\n    'white',\n    'mere',\n    'foregoing',\n    'hammer',\n    'vulgar',\n    'gifted',\n    'interest',\n    'tree',\n    'industry',\n    'exchange',\n    'icicle',\n    'snatch',\n    'better',\n    'cloistered',\n    'defiant',\n    'skate',\n    'park',\n    'encouraging',\n    'road',\n    'abrasive',\n    'possible',\n    'art',\n    'label',\n    'whimsical',\n    'abnormal',\n    'rule',\n    'bang',\n    'clap',\n    'welcome',\n    'charge',\n    'glass',\n    'slimy',\n    'eggnog',\n    'determined',\n    'neat',\n    'close',\n    'toys',\n    'scared',\n    'approval',\n    'trip',\n    'crooked',\n    'scrape',\n    'dramatic',\n    'books',\n    'canvas',\n    'pipe',\n    'window',\n    'breezy',\n    'hard',\n    'two',\n    'rice',\n    'miss',\n    'interrupt',\n    'plausible',\n    'mom',\n    'mountain',\n    'morning',\n    'watch',\n    'hair',\n    'strengthen',\n    'whisper',\n    'reading',\n    'trite',\n    'burst',\n    'manage',\n    'touch',\n    'ceaseless',\n    'weather',\n    'thing',\n    'swift',\n    'detailed',\n    'afraid',\n    'suspect',\n    'silver',\n    'enjoy',\n    'pancake',\n    'flippant',\n    'income',\n    'madly',\n    'tense',\n    'vague',\n    'quicksand',\n    'agree',\n    'haircut',\n    'aberrant',\n    'abject',\n    'horses',\n    'standing',\n    'peel',\n    'tiger',\n    'average',\n    'cultured',\n    'lake',\n    'shave',\n    'mellow',\n    'past',\n    'giants',\n    'rose',\n    'enthusiastic',\n    'exist',\n    'tow',\n    'cats',\n    'fool',\n    'tricky',\n    'slippery',\n    'travel',\n    'tire',\n    'bitter',\n    'knot',\n    'obtain',\n    'quiver',\n    'dirty',\n    'kittens',\n    'repeat',\n    'descriptive',\n    'stem',\n    'nest',\n    'trousers',\n    'mate',\n    'smoke',\n    'request',\n    'automatic',\n    'huge',\n    'street',\n    'bump',\n    'church',\n    'repair',\n    'strange',\n    'soggy',\n    'argue',\n    'elfin',\n    'spurious',\n    'occur',\n    'back',\n    'motion',\n    'chicken',\n    'arch',\n    'tickle',\n    'shy',\n    'nervous',\n    'wrap',\n    'glove',\n    'carve',\n    'punishment',\n    'zoo',\n    'dynamic',\n    'door',\n    'ablaze',\n    'weak',\n    'eager',\n    'fancy',\n    'imminent',\n    'current',\n    'onerous',\n    'joyous',\n    'beneficial',\n    'voyage',\n    'smart',\n    'quarter',\n    'dance',\n    'buzz',\n    'oil',\n    'letter',\n    'dull',\n    'kaput',\n    'oven',\n    'grumpy',\n    'can',\n    'mix',\n    'brush',\n    'wealth',\n    'record',\n    'clip',\n    'earn',\n    'book',\n    'planes',\n    'bikes',\n    'spark',\n    'lucky',\n    'frighten',\n    'languid',\n    'wilderness',\n    'drawer',\n    'happen',\n    'geese',\n    'five',\n    'fortunate',\n    'entertain',\n    'tall',\n    'slope',\n    'invincible',\n    'spell',\n    'phone',\n    'smooth',\n    'jobless',\n    'woozy',\n    'berserk',\n    'flock',\n    'sea',\n    'moor',\n    'alarm',\n    'stare',\n    'aloof',\n    'rural',\n    'finicky',\n    'sprout',\n    'distribution',\n    'embarrass',\n    'groan',\n    'melt',\n    'salty',\n    'bizarre',\n    'small',\n    'ticket',\n    'young',\n    'offbeat',\n    'material',\n    'recondite',\n    'woebegone',\n    'combative',\n    'disarm',\n    'trade',\n    'yam',\n    'wink',\n    'pack',\n    'pleasant',\n    'doll',\n    'disastrous',\n    'rabbits',\n    'shivering',\n    'loving',\n    'irate',\n    'industrious',\n    'plastic',\n    'cabbage',\n    'top',\n    'room',\n    'cough',\n    'bare',\n    'release',\n    'grab',\n    'stain',\n    'jail',\n    'basketball',\n    'magical',\n    'incandescent',\n    'rustic',\n    'vacuous',\n    'unfasten',\n    'chase',\n    'crack',\n    'toad',\n    'dream',\n    'glamorous',\n    'impossible',\n    'lace',\n    'present',\n    'detail',\n    'gruesome',\n    'ill',\n    'credit',\n    'tramp',\n    'stormy',\n    'chop',\n    'recess',\n    'dolls',\n    'somber',\n    'finger',\n    'afterthought',\n    'quizzical',\n    'confess',\n    'nappy',\n    'range',\n    'bake',\n    'glue',\n    'remember',\n    'flavor',\n    'defective',\n    'divergent',\n    'use',\n    'history',\n    'psychotic',\n    'precious',\n    'car',\n    'annoyed',\n    'fair',\n    'wholesale',\n    'sparkle',\n    'pan',\n    'abstracted',\n    'grateful',\n    'flight',\n    'notebook',\n    'cause',\n    'secret',\n    'attempt',\n    'obese',\n    'trot',\n    'card',\n    'drum',\n    'regret',\n    'organic',\n    'skip',\n    'helpful',\n    'time',\n    'toe',\n    'grandiose',\n    'ugly',\n    'ants',\n    'fuzzy',\n    'tasteful',\n    'money',\n    'blushing',\n    'reason',\n    'harmony',\n    'relieved',\n    'shaky',\n    'romantic',\n    'illegal',\n    'perpetual',\n    'ski',\n    'nail',\n    'halting',\n    'care',\n    'grouchy',\n    'religion',\n    'ladybug',\n    'desert',\n    'war',\n    'lie',\n    'wrist',\n    'circle',\n    'straight',\n    'pop',\n    'bed',\n    'scratch',\n    'nifty',\n    'popcorn',\n    'baseball',\n    'cheer',\n    'bath',\n    'representative',\n    'fertile',\n    'train',\n    'heavenly',\n    'cumbersome',\n    'disgusted',\n    'tasteless',\n    'attraction',\n    'whip',\n    'country',\n    'run',\n    'alleged',\n    'willing',\n    'pin',\n    'reflective',\n    'supply',\n    'reproduce',\n    'lazy',\n    'frantic',\n    'needless',\n    'best',\n    'addition',\n    'communicate',\n    'tangible',\n    'thin',\n    'honorable',\n    'argument',\n    'carpenter',\n    'office',\n    'nosy',\n    'silky',\n    'public',\n    'first',\n    'jumbled',\n    'soda',\n    'signal',\n    'cure',\n    'bike',\n    'tawdry',\n    'pastoral',\n    'hover',\n    'decide',\n    'crate',\n    'dangerous',\n    'handle',\n    'general',\n    'cave',\n    'disturbed',\n    'shelter',\n    'flashy',\n    'wrong',\n    'meal',\n    'nonchalant',\n    'functional',\n    'sin',\n    'question',\n    'authority',\n    'ordinary',\n    'last',\n    'military',\n    'simple',\n    'pat',\n    'found',\n    'include',\n    'toothsome',\n    'previous',\n    'calendar',\n    'smelly',\n    'advise',\n    'wheel',\n    'reject',\n    'memorise',\n    'vacation',\n    'angry',\n    'cattle',\n    'brake',\n    'cows',\n    'fence',\n    'whole',\n    'festive',\n    'protest',\n    'meek',\n    'fragile',\n    'enchanted',\n    'unit',\n  ],\n}\n\nexport default words\n","import React from 'react'\nimport words from '../AllWords'\n\nconst ADD_HIGHLIGHT = true\n\nclass nodeTrie {\n  isEnd: boolean\n  children: { [key: string]: nodeTrie }\n  parent: nodeTrie\n  key: string\n  childrenJSX: JSX.Element[]\n  currentJSX: JSX.Element\n\n  constructor(key: string) {\n    this.isEnd = false\n    this.children = {}\n    this.parent = null\n    this.key = key\n    this.childrenJSX = []\n    this.currentJSX = (\n      <li key={this.key}>\n        <div className=\"normal\">{key ? key : 'Root'}</div>\n        {this.childrenJSX.length ? <ul>{this.childrenJSX}</ul> : null}\n      </li>\n    )\n  }\n\n  updateJSX(isAddHighlight = false) {\n    this.childrenJSX = []\n    const keys = Object.keys(this.children)\n    for (let i = 0; i < keys.length; i++) {\n      this.childrenJSX.push(this.children[keys[i]].currentJSX)\n    }\n\n    this.currentJSX = (\n      <li key={this.key}>\n        <div\n          className={`normal ${this.isEnd ? 'end' : ''} ${\n            isAddHighlight ? 'highlight' : ''\n          }`}\n        >\n          {this.key ? this.key : 'Root'}\n        </div>\n        {this.childrenJSX.length ? <ul>{this.childrenJSX}</ul> : null}\n      </li>\n    )\n\n    if (this.parent) this.parent.updateJSX(isAddHighlight)\n  }\n}\n\nclass Trie {\n  root: nodeTrie\n  highlightedTill: nodeTrie\n\n  constructor(num = null) {\n    this.root = new nodeTrie(null)\n    this.highlightedTill = null\n    if (num) this.randomTrie(num)\n  }\n\n  insert(word: string): void {\n    if (word === '') return\n    word = word.trim()\n    word = word.toUpperCase()\n    let node = this.root\n    for (let i = 0; i < word.length; i++) {\n      if (!node.children[word[i]]) {\n        node.children[word[i]] = new nodeTrie(word[i])\n        node.children[word[i]].parent = node\n      }\n      node = node.children[word[i]]\n      if (i === word.length - 1) node.isEnd = true\n    }\n    node.updateJSX()\n  }\n\n  searchWord(word: string): boolean {\n    if (word === '') return false\n    word = word.trim()\n    word = word.toUpperCase()\n    let node = this.root\n    for (let i = 0; i < word.length; i++) {\n      if (!node.children[word[i]]) return false\n      node = node.children[word[i]]\n      if (i === word.length - 1) return node.isEnd\n    }\n    return false\n  }\n\n  deleteWord(word: string): boolean {\n    if (!this.searchWord(word)) return false\n    word = word.trim()\n    word = word.toUpperCase()\n    let node = this.root\n    for (let i = 0; i < word.length; i++) {\n      node = node.children[word[i]]\n    }\n    node.isEnd = false\n\n    if (Object.keys(node.children).length === 0) {\n      node = node.parent\n      for (let i = word.length - 1; i >= 0; i--) {\n        if (node === this.root) {\n          delete node.children[word[i]]\n          break\n        }\n        if (node.isEnd) {\n          delete node.children[word[i]]\n          break\n        }\n\n        if (Object.keys(node.children).length > 1) {\n          delete node.children[word[i]]\n          break\n        }\n        node = node.parent\n      }\n    }\n\n    node.updateJSX()\n    return true\n  }\n\n  findPrefix(word: string): boolean {\n    this.removeHighligt()\n    if (word === '') return false\n    word = word.trim()\n    word = word.toUpperCase()\n    let node = this.root\n    for (let i = 0; i < word.length; i++) {\n      if (!node.children[word[i]]) return false\n      node = node.children[word[i]]\n    }\n    node.updateJSX(ADD_HIGHLIGHT)\n    this.highlightedTill = node\n    return true\n  }\n\n  findAllWords(): string[] {\n    const node = this.root\n    const allWords = []\n    for (let i = 0; i < Object.keys(node.children).length; i++) {\n      this.findAllWordsHelper(\n        node.children[Object.keys(node.children)[i]],\n        allWords,\n      )\n    }\n    return allWords\n  }\n\n  findAllWordsHelper(node: nodeTrie, allWords: string[], word = ''): void {\n    word += node.key\n    if (node.isEnd) allWords.push(word)\n    for (let i = 0; i < Object.keys(node.children).length; i++) {\n      this.findAllWordsHelper(\n        node.children[Object.keys(node.children)[i]],\n        allWords,\n        word,\n      )\n    }\n  }\n\n  //Inserts num random words to the trie\n  randomTrie(num: number): void {\n    if (num > 993) num = 993\n    const allWords = words['words']\n    const upper = 0\n    const lower = num * 2 + 10\n    const indexOfWordsAdded = new Set()\n    for (let i = 0; i < num; i++) {\n      let value = Math.floor(Math.random() * (upper - lower + 1)) + lower\n      while (indexOfWordsAdded.has(value) || value > 993) {\n        value = Math.floor(Math.random() * (upper - lower + 1)) + lower\n      }\n      indexOfWordsAdded.add(value)\n      this.insert(allWords[value])\n    }\n  }\n\n  removeHighligt(): void {\n    if (this.highlightedTill) {\n      this.highlightedTill.updateJSX()\n      this.highlightedTill = null\n    }\n  }\n}\n\nexport default Trie\n","import React, { forwardRef, useEffect, useImperativeHandle } from 'react'\nimport { TREE_ID } from '../constants'\nimport TrieDataStructure from '../data-structures/Trie'\nimport useTreeState from '../hooks/useTreeState'\nimport useTreeStyle from '../hooks/useTreeStyle'\nimport '../styles/BinarySearchTree.css'\nimport { TreeStylesType, TrieRefType } from '../types'\nimport { compareArray } from '../util'\n\ntype TrieProps = {\n  data?: string[]\n  treeStyles?: TreeStylesType\n}\n\nconst Trie: React.ForwardRefRenderFunction<TrieRefType, TrieProps> = (\n  { data, treeStyles }: TrieProps,\n  ref: React.MutableRefObject<TrieRefType>,\n) => {\n  const { tree, treeJSX, setTree } = useTreeState<TrieDataStructure>(null)\n  useTreeStyle(treeStyles)\n\n  const trieFunctions: TrieRefType = {\n    insert: (word: string) => {\n      // if tree is empty\n      if (!tree?.root) {\n        const newTree = new TrieDataStructure()\n        newTree.insert(word)\n        setTree(newTree)\n        return\n      }\n\n      tree.insert(word)\n      setTree(tree)\n    },\n    remove: (word: string) => {\n      if (!tree?.root || !word) return false\n      if (tree.deleteWord(word)) {\n        setTree(tree.root ? tree : null)\n        return true\n      }\n      return false\n    },\n    search: (word: string) => {\n      if (!tree?.root || !word) return false\n      if (tree.searchWord(word)) {\n        // Highlights the word in the trie\n        tree.findPrefix(word)\n        setTree(tree)\n        return true\n      }\n      return false\n    },\n    searchPrefix: (word: string) => {\n      if (!tree?.root) return false\n      const isPrefixFound = tree.findPrefix(word)\n      setTree(tree)\n      return isPrefixFound\n    },\n    getAllWords: () => {\n      if (!tree?.root) return []\n      return tree.findAllWords()\n    },\n    generateRandomTrie: (wordCount: number) => {\n      const newTrie = new TrieDataStructure(wordCount)\n      setTree(newTrie)\n    },\n    removeHighlight: () => {\n      tree.removeHighligt()\n      setTree(tree)\n    },\n  }\n\n  useImperativeHandle(ref, () => trieFunctions)\n\n  const handleData = () => {\n    const newTree = new TrieDataStructure()\n    data.forEach((elem) => newTree.insert(elem))\n    setTree(newTree)\n  }\n\n  useEffect(() => {\n    if (data) handleData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data])\n\n  return (\n    <div id={TREE_ID}>\n      <ul>{treeJSX}</ul>\n    </div>\n  )\n}\n\n// returns true if data has changed\nconst compareTrie = (previousPros: TrieProps, newProps: TrieProps) =>\n  previousPros.data &&\n  newProps.data &&\n  compareArray(previousPros.data, newProps.data)\n\nexport default React.memo(forwardRef(Trie), compareTrie)\n","import React from 'react'\nimport { BINARY_TREE_TYPE } from '../constants'\n\nconst LEFT = 'left'\nconst RIGHT = 'right'\n\nconst { BALANCED, COMPLETE, FULL, PERFECT } = BINARY_TREE_TYPE\n\nconst NULL_NODE_JSX = (\n  <li className=\"null\">\n    <div>null</div>\n  </li>\n)\n\nconst getNormalNodeJSX = (\n  value: number,\n  height: number,\n  leftJSX: JSX.Element,\n  rightJSX: JSX.Element,\n  isHighlighted = false,\n) => (\n  <li key={value}>\n    <div className={`normal ${isHighlighted ? 'highlight' : ''}`}>\n      {value} <p className=\"height\">{height}</p>\n    </div>\n    <ul>\n      {leftJSX} {rightJSX}\n    </ul>\n  </li>\n)\n\nclass Node {\n  value: number\n  height: number\n  left: Node\n  right: Node\n  parent: Node\n  leftJSX: JSX.Element\n  rightJSX: JSX.Element\n  currentJSX: JSX.Element\n\n  constructor(value: number) {\n    this.value = value\n    this.height = 0\n    this.left = null\n    this.right = null\n    this.parent = null\n    this.leftJSX = NULL_NODE_JSX\n    this.rightJSX = NULL_NODE_JSX\n    this.currentJSX = getNormalNodeJSX(\n      this.value,\n      this.height,\n      this.leftJSX,\n      this.rightJSX,\n    )\n  }\n\n  //Inserting JSX of a new node\n  insert(node: Node, isLeft: boolean) {\n    const newJSX = node.currentJSX\n\n    if (isLeft) {\n      this.leftJSX = newJSX\n    } else {\n      this.rightJSX = newJSX\n    }\n    this.setJSX()\n    this.updateRootJSX()\n  }\n\n  //Updating JSX of a node\n  setJSX() {\n    this.currentJSX = getNormalNodeJSX(\n      this.value,\n      this.height,\n      this.leftJSX,\n      this.rightJSX,\n    )\n  }\n\n  //Updating JSX of the whole tree\n  updateRootJSX() {\n    if (this.parent !== null) {\n      if (this.parent.left === this) this.parent.insert(this, true)\n      else this.parent.insert(this, false)\n    }\n  }\n\n  //Changing a child to null\n  setChildToNull(isLeft: boolean) {\n    if (isLeft) {\n      this.leftJSX = NULL_NODE_JSX\n    } else {\n      this.rightJSX = NULL_NODE_JSX\n    }\n    this.setJSX()\n    this.updateRootJSX()\n  }\n\n  //interchanging a child with a grandchild\n  setChildToChildsChild(isLeftChild: boolean, isLeft: boolean) {\n    if (isLeftChild) {\n      if (isLeft) {\n        this.leftJSX = this.left.left.currentJSX\n        this.setJSX()\n      } else {\n        this.leftJSX = this.left.right.currentJSX\n        this.setJSX()\n      }\n    } else {\n      if (isLeft) {\n        this.rightJSX = this.right.left.currentJSX\n        this.setJSX()\n      } else {\n        this.rightJSX = this.right.right.currentJSX\n\n        this.setJSX()\n      }\n    }\n    this.updateRootJSX()\n  }\n\n  //Removing JSX of a deleted node\n  remove(childrenCondtion?: string) {\n    if (!this.parent) return\n    if (!childrenCondtion) {\n      if (this.parent.left === this) {\n        this.parent.setChildToNull(true)\n      } else {\n        this.parent.setChildToNull(false)\n      }\n    } else if (childrenCondtion === LEFT) {\n      if (this.parent.left === this) {\n        this.parent.setChildToChildsChild(true, true)\n      } else {\n        this.parent.setChildToChildsChild(false, true)\n      }\n    } else {\n      if (this.parent.left === this) {\n        this.parent.setChildToChildsChild(true, false)\n      } else {\n        this.parent.setChildToChildsChild(false, false)\n      }\n    }\n  }\n\n  //Updates value of a node JSX\n  updateValue(value: number) {\n    this.value = value\n    this.setJSX()\n    this.updateRootJSX()\n  }\n\n  //Adds Highlight to node JSX\n  addHighlight() {\n    // TODO: Test\n    this.currentJSX = getNormalNodeJSX(\n      this.value,\n      this.height,\n      this.leftJSX,\n      this.rightJSX,\n      true,\n    )\n\n    this.updateRootJSX()\n  }\n\n  //Clears Highlight of the node JSX\n  clearHighlight() {\n    this.setJSX()\n\n    this.updateRootJSX()\n  }\n\n  //Updating JSX after balancing\n  balanceJSX() {\n    if (!this.left && this.right) {\n      this.right.balanceJSX()\n\n      this.rightJSX = this.right.currentJSX\n      this.setChildToNull(true)\n    } else if (!this.right && this.left) {\n      this.left.balanceJSX()\n\n      this.leftJSX = this.left.currentJSX\n      this.setChildToNull(false)\n    } else if (this.right && this.left) {\n      this.left.balanceJSX()\n      this.right.balanceJSX()\n\n      this.leftJSX = this.left.currentJSX\n      this.rightJSX = this.right.currentJSX\n      this.setJSX()\n      this.updateRootJSX()\n    } else {\n      this.leftJSX = NULL_NODE_JSX\n\n      this.rightJSX = NULL_NODE_JSX\n      this.setJSX()\n      this.updateRootJSX()\n    }\n  }\n}\n\nclass AVL {\n  root: Node\n  highlightedNode: Node\n  leafDepth: number\n  constructor(num = 0) {\n    this.root = null\n    if (num) {\n      this.generateRandomBST(num)\n    }\n    this.highlightedNode = null\n    this.leafDepth = -1\n  }\n\n  //Helper functions\n  rotateRight(node: Node) {\n    const tempNode = node.left\n    if (node.left.right) node.left.right.parent = node\n    node.left = node.left.right\n\n    //For Handling JSX\n    tempNode.parent = node.parent\n    node.parent = tempNode\n    //For Handling JSX END\n\n    tempNode.right = node\n    tempNode.height = this.setHeight(tempNode)\n    node.height = this.setHeight(node)\n    return tempNode\n  }\n\n  rotateLeft(node: Node) {\n    const tempNode = node.right\n    if (node.right.left) node.right.left.parent = node\n    node.right = node.right.left\n\n    //For Handling JSX\n    tempNode.parent = node.parent\n    node.parent = tempNode\n    //For Handling JSX END\n\n    tempNode.left = node\n    // tempNode.left\n    tempNode.height = this.setHeight(tempNode)\n    node.height = this.setHeight(node)\n    return tempNode\n  }\n\n  //Sets hight of a node\n  setHeight(node: Node) {\n    if (node === null) return -1\n    const leftHeight = node.left !== null ? node.left.height : -1\n    const rightHeight = node.right !== null ? node.right.height : -1\n    return Math.max(leftHeight, rightHeight) + 1\n  }\n\n  //Checks if a sub tree is balanced\n  balanceCheck(node: Node) {\n    if (node === null) return 0\n    const leftHeight = node.left !== null ? node.left.height : -1\n    const rightHeight = node.right !== null ? node.right.height : -1\n    return leftHeight - rightHeight\n  }\n\n  //Balances the Tree\n  balance(node: Node) {\n    const balance = this.balanceCheck(node)\n    if (balance > 1) {\n      if (this.setHeight(node.left.left) > this.setHeight(node.left.right)) {\n        node = this.rotateRight(node)\n      } else {\n        node.left = this.rotateLeft(node.left)\n\n        node = this.rotateRight(node)\n      }\n    } else if (balance < -1) {\n      if (this.setHeight(node.right.right) > this.setHeight(node.right.left)) {\n        node = this.rotateLeft(node)\n      } else {\n        node.right = this.rotateRight(node.right)\n\n        node = this.rotateLeft(node)\n      }\n    }\n    if (node !== null) node.height = this.setHeight(node)\n    if (node && node.right) node.right.balanceJSX()\n    if (node && node.left) node.left.balanceJSX()\n    return node\n  }\n\n  findMax(node = this.root) {\n    if (node == null) {\n      return node\n    } else if (node.right == null) {\n      return node\n    } else {\n      return this.findMax(node.right)\n    }\n  }\n\n  findMin(node = this.root) {\n    if (node == null) {\n      return node\n    } else if (node.left == null) {\n      return node\n    } else {\n      return this.findMin(node.left)\n    }\n  }\n\n  //inserting a new node\n  insert(value: number) {\n    this.clearHighlight()\n    const newNode = new Node(value)\n    if (this.root === null) this.root = newNode\n    else this.root = this.insertNode(this.root, newNode)\n  }\n\n  insertNode(node: Node, newNode: Node) {\n    if (newNode.value < node.value) {\n      if (node.left === null) {\n        node.left = newNode\n        newNode.parent = node\n        node.insert(newNode, true)\n      } else node.left = this.insertNode(node.left, newNode)\n    } else {\n      if (node.right === null) {\n        node.right = newNode\n        newNode.parent = node\n        node.insert(newNode, false)\n      } else node.right = this.insertNode(node.right, newNode)\n    }\n\n    node = this.balance(node)\n    return node\n  }\n\n  //Deleting node\n  remove(value: number) {\n    this.clearHighlight()\n    this.root = this.removeNode(this.root, value)\n  }\n\n  removeNode(node: Node, value: number) {\n    if (node === null || typeof node === 'undefined') return null\n    else if (value < node.value) {\n      node.left = this.removeNode(node.left, value)\n      // return node\n    } else if (value > node.value) {\n      node.right = this.removeNode(node.right, value)\n      // return node\n    } else {\n      if (node.left === null && node.right === null) {\n        node.remove(null)\n        node = null\n        // return node\n      } else if (node.left === null) {\n        node.remove(RIGHT)\n        node.right.parent = node.parent\n        node = node.right\n        // return node\n      } else if (node.right === null) {\n        node.remove(LEFT)\n        node.left.parent = node.parent\n        node = node.left\n        // return node\n      } else {\n        const minNodeOfRight = this.findMin(node.right)\n        node.updateValue(minNodeOfRight.value)\n\n        node.right = this.removeNode(node.right, minNodeOfRight.value)\n      }\n    }\n    node = this.balance(node)\n    return node\n  }\n\n  //Tree Traversal\n  preorder(list: number[], node = this.root) {\n    if (node !== null) {\n      list.push(node.value)\n      this.preorder(list, node.left)\n      this.preorder(list, node.right)\n    }\n  }\n\n  inorder(list: number[], node = this.root) {\n    if (node !== null) {\n      this.inorder(list, node.left)\n      list.push(node.value)\n      this.inorder(list, node.right)\n    }\n  }\n\n  postorder(list: number[], node = this.root) {\n    if (node !== null) {\n      this.postorder(list, node.left)\n      this.postorder(list, node.right)\n      list.push(node.value)\n    }\n  }\n\n  //Search\n  search(value: number, node = this.root) {\n    this.clearHighlight()\n\n    if (node === null) return false\n    else if (node.value === value) {\n      node.addHighlight()\n      this.highlightedNode = node\n      return true\n    } else if (node.value > value) return this.search(value, node.left)\n    else return this.search(value, node.right)\n  }\n\n  //Random Tree generator\n  generateRandomBST(num: number) {\n    const upper = 0\n    const lower = num * 2 + 10\n    const elements = new Set()\n\n    for (let i = 0; i < num; i++) {\n      let value = Math.floor(Math.random() * (upper - lower + 1)) + lower\n      while (elements.has(value)) {\n        value = Math.floor(Math.random() * (upper - lower + 1)) + lower\n      }\n      elements.add(value)\n\n      this.insert(value)\n    }\n  }\n\n  //BST Checker\n  //Main Checker function\n  checkAVL() {\n    const BSTTypeList = []\n    if (this.isBalanced()) {\n      BSTTypeList.push(BALANCED)\n    }\n    if (this.isComplete()) {\n      BSTTypeList.push(COMPLETE)\n    }\n    if (this.isPerfect()) {\n      BSTTypeList.push(PERFECT)\n    }\n    if (this.isFull()) {\n      BSTTypeList.push(FULL)\n    }\n    return BSTTypeList\n  }\n\n  //Subfunctions\n  //balance\n  isBalanced(node = this.root) {\n    if (node === null) return true\n    const leftH = node.left ? node.left.height : -1\n    const rightH = node.right ? node.right.height : -1\n    if (Math.abs(leftH - rightH) <= 1) {\n      return this.isBalanced(node.left) && this.isBalanced(node.right)\n    } else {\n      return false\n    }\n  }\n\n  //complete\n  isComplete() {\n    const totalNodes = this.countNodes()\n    return this.isComplete2(0, totalNodes)\n  }\n  isComplete2(index: number, totalNodes: number, node = this.root) {\n    if (node === null) return true\n    else if (index >= totalNodes) return false\n    else {\n      let ans = this.isComplete2(index * 2 + 1, totalNodes, node.left)\n      ans &= this.isComplete2(index * 2 + 2, totalNodes, node.right)\n      return ans\n    }\n  }\n\n  //perfect\n  isPerfect() {\n    if (!this.isFull() || !this.isComplete()) return false\n    return this.isPerfect2()\n  }\n\n  isPerfect2(node = this.root, depth = 0) {\n    if (!node) return true\n    depth++\n    if (!node.right && !node.left) {\n      if (this.leafDepth !== -1 && this.leafDepth !== depth) return false\n      this.leafDepth = depth\n    }\n    return (\n      this.isPerfect2(node.left, depth) && this.isPerfect2(node.right, depth)\n    )\n  }\n\n  //full\n  isFull(node = this.root) {\n    if (node === null) return true\n    else if (node.left === null && node.right === null) return true\n    else if (node.left !== null && node.right !== null) {\n      let ans: boolean\n      ans = this.isFull(node.left)\n      ans &&= this.isFull(node.right)\n      return ans\n    } else return false\n  }\n\n  countNodes(node = this.root) {\n    if (node === null) return 0\n    return this.countNodes(node.left) + 1 + this.countNodes(node.right)\n  }\n\n  //Clears highlight of previously searched nodes\n  clearHighlight() {\n    if (this.highlightedNode) {\n      this.highlightedNode.clearHighlight()\n      this.highlightedNode = null\n    }\n  }\n}\n\nexport default AVL\n","import React, { forwardRef, useEffect, useImperativeHandle } from 'react'\nimport { TREE_ID } from '../constants'\nimport AVL from '../data-structures/AVLTree'\nimport useTreeState from '../hooks/useTreeState'\nimport useTreeStyle from '../hooks/useTreeStyle'\nimport {\n  SelfBalancingTreeRefType,\n  BinaryTreeCheckType,\n  TraversalOrderType,\n  TreeStylesType,\n} from '../types'\nimport { compareArray } from '../util'\n\ntype AVLTreeProps = {\n  data?: number[]\n  treeStyles?: TreeStylesType\n}\n\nconst AVLTree: React.ForwardRefRenderFunction<\n  SelfBalancingTreeRefType,\n  AVLTreeProps\n> = (\n  { data, treeStyles }: AVLTreeProps,\n  ref: React.MutableRefObject<SelfBalancingTreeRefType>,\n) => {\n  const { tree, treeJSX, setTree } = useTreeState<AVL>(null)\n  useTreeStyle(treeStyles)\n\n  useImperativeHandle(ref, () => ({\n    insert: (value: number) => {\n      // if tree is empty\n      if (!tree?.root) {\n        const newTree = new AVL()\n        newTree.insert(value)\n        setTree(newTree)\n        return\n      }\n\n      tree.insert(value)\n      setTree(tree)\n    },\n    remove: (value: number): boolean => {\n      if (!tree?.root) return false\n\n      if (!tree.search(value)) return false\n      tree.remove(value)\n      setTree(tree.root ? tree : null)\n      return true\n    },\n    search: (value: number): boolean => {\n      if (!tree?.root) return false\n      const foundNode = tree.search(value)\n      if (foundNode) setTree(tree)\n      return foundNode\n    },\n    getData: (traversalOrder: TraversalOrderType): number[] => {\n      const traversalData = []\n      tree[traversalOrder](traversalData)\n      return traversalData\n    },\n    clear: () => {\n      setTree(new AVL())\n    },\n    generateRandomTree: (countOfNodes: number) => {\n      const newTree = new AVL(countOfNodes)\n      setTree(newTree)\n    },\n    checkTreeType: (): BinaryTreeCheckType[] => {\n      return tree.checkAVL()\n    },\n  }))\n\n  const handleData = () => {\n    const newTree = new AVL()\n    data.forEach((elem) => newTree.insert(elem))\n    setTree(newTree)\n  }\n\n  useEffect(() => {\n    if (data) handleData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data])\n\n  return (\n    <div id={TREE_ID}>\n      <ul>{treeJSX}</ul>\n    </div>\n  )\n}\n\n// returns true if data has changed\nconst compareAVLTree = (previousPros: AVLTreeProps, newProps: AVLTreeProps) =>\n  previousPros.data &&\n  newProps.data &&\n  compareArray(previousPros.data, newProps.data)\n\nexport default React.memo(forwardRef(AVLTree), compareAVLTree)\n","import React from 'react'\nimport { BINARY_TREE_TYPE } from '../constants'\n\ntype Color = typeof RED | typeof BLACK\n\nconst BLACK = 0\nconst RED = 1\nconst { BALANCED, COMPLETE, FULL, PERFECT } = BINARY_TREE_TYPE\n\nconst getNormalNodeJSX = (\n  value: number,\n  leftJSX: JSX.Element,\n  rightJSX: JSX.Element,\n  color: Color,\n  isHighlighted = false,\n) => (\n  <li key={value}>\n    <div\n      className={`normal ${color === RED ? 'red' : 'black'} ${\n        isHighlighted ? 'highlight' : ''\n      }`}\n    >\n      {value}\n    </div>\n    <ul>\n      {leftJSX} {rightJSX}\n    </ul>\n  </li>\n)\n\nclass NullNode {\n  color: number\n  isNull: boolean\n  parent: Node\n  currentJSX: JSX.Element\n  value: null\n  left: null\n  right: null\n  insert() {\n    return\n  }\n  addHighlight() {\n    return\n  }\n  constructor() {\n    this.color = BLACK\n    this.isNull = true\n    this.parent = null\n    this.currentJSX = (\n      <li className=\"null\">\n        <div className={`null black`}>null</div>\n      </li>\n    )\n  }\n}\n\nclass Node {\n  value: number\n  color: Color\n  right: Node | NullNode\n  left: Node | NullNode\n  parent: Node\n  isNull: boolean\n  currentJSX: JSX.Element\n\n  constructor(value: number) {\n    const newNullNode = new NullNode()\n    newNullNode.parent = this\n    this.value = value\n    this.color = RED\n    this.right = newNullNode\n    this.left = newNullNode\n    this.parent = null\n    this.isNull = false\n\n    this.currentJSX = (\n      <li key={this.value}>\n        <div className={`normal red`}>{this.value}</div>\n        <ul>\n          {this.left.currentJSX} {this.right.currentJSX}\n        </ul>\n      </li>\n    )\n  }\n\n  //Updating html of a node\n  setHtml() {\n    this.currentJSX = getNormalNodeJSX(\n      this.value,\n      this.left.currentJSX,\n      this.right.currentJSX,\n      this.color,\n    )\n  }\n\n  //Updating html of the whole tree\n  updateRootHtml() {\n    if (this.parent !== null) {\n      this.parent.insert()\n    }\n  }\n\n  //Inserting new node to tree\n  insert() {\n    this.setHtml()\n    this.updateRootHtml()\n  }\n\n  //Adds Highlight to node html\n  addHighlight() {\n    this.currentJSX = getNormalNodeJSX(\n      this.value,\n      this.left.currentJSX,\n      this.right.currentJSX,\n      this.color,\n      true,\n    )\n\n    this.updateRootHtml()\n  }\n\n  //Clears Highlight of the node html\n  clearHighlight() {\n    this.setHtml()\n    this.updateRootHtml()\n  }\n}\n\nclass RBT {\n  root: Node | NullNode\n  highlighted: Node\n  leafDepth: number\n\n  constructor(num = 0) {\n    const newNullNode = new NullNode()\n    this.root = newNullNode\n    if (num) {\n      this.generateRandomBST(num)\n    }\n    this.highlighted = null\n    this.leafDepth = -1\n  }\n\n  //Helper functions\n  //Rotate right\n  rotateRight(node: Node, toRecolor: boolean) {\n    const parent = node.parent\n    node.parent = parent.parent\n    if (parent.parent !== null) {\n      if (parent.parent.left === parent) {\n        parent.parent.left = node\n      } else {\n        parent.parent.right = node\n      }\n    }\n    const right = node.right\n    node.right = parent\n    parent.parent = node\n    parent.left = right\n    right.parent = parent\n    if (toRecolor) {\n      node.color = BLACK\n      parent.color = RED\n    }\n  }\n\n  //Rotate left\n  rotateLeft(node: Node, toRecolor: boolean) {\n    const parent = node.parent\n    node.parent = parent.parent\n    if (parent.parent !== null) {\n      if (parent.parent.right === parent) {\n        parent.parent.right = node\n      } else {\n        parent.parent.left = node\n      }\n    }\n    const left = node.left\n    node.left = parent\n    parent.parent = node\n    parent.right = left\n    left.parent = parent\n    if (toRecolor) {\n      node.color = BLACK\n      parent.color = RED\n    }\n  }\n\n  //Find sibling\n  siblingOf(node: Node) {\n    if (node.parent === null) return null\n    if (node.parent.left === node) {\n      return node.parent.right\n    } else {\n      return node.parent.left\n    }\n  }\n\n  //Finding min value\n  findMin(node = this.root) {\n    if (node.isNull) {\n      return node\n    } else if (node.left.isNull) {\n      return node\n    } else {\n      return this.findMin(node.left)\n    }\n  }\n\n  //Insert\n  insert(value: number) {\n    this.root = this.insertNode(null, this.root as Node, value)\n  }\n\n  //Insert helper function\n  insertNode(parent: Node, node: Node, value: number) {\n    if (node.isNull) {\n      const newNode = new Node(value)\n      if (parent === null) {\n        newNode.color = BLACK\n        newNode.insert()\n        return newNode\n      } else {\n        newNode.parent = parent\n        return newNode\n      }\n    }\n\n    if (node.value === value) {\n      return node\n    }\n\n    let isLeft: boolean\n    if (node.value > value) {\n      const left = this.insertNode(node, node.left as Node, value)\n      if (left === node.parent) {\n        node.insert()\n        return left\n      }\n      node.left = left\n      isLeft = true\n    } else {\n      const right = this.insertNode(node, node.right as Node, value)\n      if (right === node.parent) {\n        node.insert()\n        return right\n      }\n      node.right = right\n      isLeft = false\n    }\n\n    if (isLeft) {\n      if (node.left.color === RED && node.color === RED) {\n        const sibling = this.siblingOf(node)\n        if (sibling.color === BLACK || sibling.isNull) {\n          if (node.parent.left === node) {\n            this.rotateRight(node, true)\n          } else {\n            this.rotateRight(node.left as Node, false)\n            node = node.parent\n            this.rotateLeft(node, true)\n          }\n        } else {\n          node.color = BLACK\n          sibling.color = BLACK\n          if (node.parent.parent !== null) {\n            node.parent.color = RED\n          }\n        }\n      }\n    } else {\n      if (node.right.color === RED && node.color === RED) {\n        const sibling = this.siblingOf(node)\n        if (sibling.color === BLACK || sibling.isNull) {\n          if (node.parent.right === node) {\n            this.rotateLeft(node, true)\n          } else {\n            this.rotateLeft(node.right as Node, false)\n            node = node.parent\n            this.rotateRight(node, true)\n          }\n        } else {\n          node.color = BLACK\n          sibling.color = BLACK\n          if (node.parent.parent !== null) {\n            node.parent.color = RED\n          }\n        }\n      }\n    }\n\n    if (!node.left.isNull) node.left.insert()\n    if (!node.right.isNull) node.right.insert()\n\n    return node\n  }\n\n  //Delete Node\n  remove(value: number, node = this.root) {\n    this.clearHighlight()\n    if (node.isNull) {\n      return\n    }\n    if (node.value === value) {\n      if (node.left.isNull || node.right.isNull) {\n        const tempParent = node.parent\n        this.deleteOneChild(node as Node)\n        if (tempParent) {\n          if (!tempParent.left.isNull) tempParent.left.insert()\n          if (!tempParent.right.isNull) tempParent.right.insert()\n          tempParent.insert()\n          if (tempParent.parent) tempParent.parent.insert()\n        } else if (!this.root.isNull) this.root.insert()\n      } else {\n        const smallestRight = this.findMin(node.right)\n        node.value = smallestRight.value\n        node.insert()\n        this.remove(smallestRight.value, node.right)\n      }\n    }\n\n    if (node.value > value) {\n      this.remove(value, node.left)\n    } else {\n      this.remove(value, node.right)\n    }\n  }\n\n  //Delete helper functions\n  deleteOneChild(node: Node) {\n    let child\n\n    if (node.left.isNull) {\n      child = node.right\n    } else {\n      child = node.left\n    }\n    this.replaceChild(child, node)\n    if (node.color === BLACK) {\n      if (child.color === RED) {\n        child.color = BLACK\n        child.insert()\n      } else this.deleteCase1(child)\n    }\n  }\n\n  //All cases\n  deleteCase1(node: Node) {\n    if (node.parent === null) {\n      this.root = node\n      if (!this.root.isNull) this.root.insert()\n      return\n    }\n    this.deleteCase2(node)\n  }\n\n  deleteCase2(node: Node) {\n    const sibling = this.siblingOf(node)\n    if (sibling.color === RED) {\n      if (sibling.parent.left === sibling)\n        this.rotateRight(sibling as Node, true)\n      else this.rotateLeft(sibling as Node, true)\n      if (sibling.parent === null) this.root = sibling\n    }\n    this.deleteCase3(node)\n  }\n\n  deleteCase3(node: Node) {\n    const sibling = this.siblingOf(node)\n    if (\n      node.parent.color === BLACK &&\n      sibling.color === BLACK &&\n      sibling.left.color === BLACK &&\n      sibling.right.color === BLACK\n    ) {\n      sibling.color = RED\n      this.deleteCase1(node.parent)\n    } else {\n      this.deleteCase4(node)\n    }\n  }\n\n  deleteCase4(node: Node) {\n    const sibling = this.siblingOf(node)\n    if (\n      node.parent.color === RED &&\n      sibling.color === BLACK &&\n      sibling.left.color === BLACK &&\n      sibling.right.color === BLACK\n    ) {\n      sibling.color = RED\n      node.parent.color = BLACK\n      return\n    } else {\n      this.deleteCase5(node)\n    }\n  }\n\n  deleteCase5(node: Node) {\n    const sibling = this.siblingOf(node)\n    if (sibling.color === BLACK) {\n      if (\n        node.parent.left === node &&\n        sibling.right.color === BLACK &&\n        sibling.left.color === RED\n      ) {\n        this.rotateRight(sibling.left as Node, true)\n        sibling.insert()\n      } else if (\n        node.parent.right === node &&\n        sibling.left.color === BLACK &&\n        sibling.right.color === RED\n      ) {\n        this.rotateLeft(sibling.right as Node, true)\n        sibling.insert()\n      }\n    }\n    this.deleteCase6(node)\n  }\n\n  deleteCase6(node: Node) {\n    const sibling = this.siblingOf(node)\n    sibling.color = sibling.parent.color\n    sibling.parent.color = BLACK\n    if (node.parent.left === node) {\n      sibling.right.color = BLACK\n      this.rotateLeft(sibling as Node, false)\n      if (!sibling.right.isNull) sibling.right.insert()\n      if (!sibling.left.isNull) sibling.left.insert()\n    } else {\n      sibling.left.color = BLACK\n      this.rotateRight(sibling as Node, false)\n      if (!sibling.right.isNull) sibling.right.insert()\n      if (!sibling.left.isNull) sibling.left.insert()\n    }\n    if (sibling.parent === null) {\n      this.root = sibling\n    }\n  }\n\n  replaceChild(child: Node, node: Node) {\n    child.parent = node.parent\n    if (node.parent === null) this.root = child\n    else {\n      if (node.parent.left === node) {\n        node.parent.left = child\n      } else {\n        node.parent.right = child\n      }\n    }\n  }\n\n  //Tree Traversal\n  preorder(list: number[], node = this.root) {\n    if (!node.isNull) {\n      list.push(node.value)\n      this.preorder(list, node.left)\n      this.preorder(list, node.right)\n    }\n  }\n\n  inorder(list: number[], node = this.root) {\n    if (!node.isNull) {\n      this.inorder(list, node.left)\n      list.push(node.value)\n      this.inorder(list, node.right)\n    }\n  }\n\n  postorder(list: number[], node = this.root) {\n    if (!node.isNull) {\n      this.postorder(list, node.left)\n      this.postorder(list, node.right)\n      list.push(node.value)\n    }\n  }\n\n  //Search\n  search(value: number, node = this.root) {\n    this.clearHighlight()\n\n    if (node.isNull) return false\n    else if (node.value === value) {\n      node.addHighlight()\n      this.highlighted = node as Node\n      return true\n    } else if (node.value > value) return this.search(value, node.left)\n    else return this.search(value, node.right)\n  }\n\n  //Random Tree generator\n  generateRandomBST(num: number) {\n    const upper = 0\n    const lower = num * 2 + 10\n    const elements = new Set()\n\n    for (let i = 0; i < num; i++) {\n      let value = Math.floor(Math.random() * (upper - lower + 1)) + lower\n      while (elements.has(value)) {\n        value = Math.floor(Math.random() * (upper - lower + 1)) + lower\n      }\n      elements.add(value)\n      this.insert(value)\n    }\n  }\n\n  //BST Checker\n  //Main Checker function\n  checkBinaryTree() {\n    const BSTTypeList = []\n    if (this.isBalanced()) {\n      BSTTypeList.push(BALANCED)\n    }\n    if (this.isComplete()) {\n      BSTTypeList.push(COMPLETE)\n    }\n    if (this.isPerfect()) {\n      BSTTypeList.push(PERFECT)\n    }\n    if (this.isFull()) {\n      BSTTypeList.push(FULL)\n    }\n    return BSTTypeList\n  }\n\n  //Subfunctions\n  //balance\n  isBalanced(node = this.root) {\n    if (node.isNull) return true\n    const leftH = this.height(node.left)\n    const rightH = this.height(node.right)\n    if (Math.abs(leftH - rightH) <= 1) {\n      return this.isBalanced(node.left) && this.isBalanced(node.right)\n    } else {\n      return false\n    }\n  }\n\n  //Find height\n  height(node = this.root) {\n    if (node.isNull) return -1\n    let ans: number\n    ans = this.height(node.left)\n    ans = Math.max(this.height(node.right), ans)\n    return ans + 1\n  }\n\n  //complete\n  isComplete() {\n    const totalNodes = this.countNodes()\n    return this.isComplete2(0, totalNodes)\n  }\n  isComplete2(index: number, totalNodes: number, node = this.root) {\n    if (node.isNull) return true\n    else if (index >= totalNodes) return false\n    else {\n      let ans = this.isComplete2(index * 2 + 1, totalNodes, node.left)\n      ans &= this.isComplete2(index * 2 + 2, totalNodes, node.right)\n      return ans\n    }\n  }\n\n  //perfect EDITED\n  isPerfect() {\n    if (!this.isFull() || !this.isComplete()) return false\n    return this.isPerfect2()\n  }\n\n  isPerfect2(node = this.root, depth = 0) {\n    if (node.isNull) return true\n    depth++\n    if (node.right.isNull && node.left.isNull) {\n      if (this.leafDepth !== -1 && this.leafDepth !== depth) return false\n      this.leafDepth = depth\n    }\n    return (\n      this.isPerfect2(node.left, depth) && this.isPerfect2(node.right, depth)\n    )\n  }\n\n  //full\n  isFull(node = this.root) {\n    if (node.isNull) return true\n    else if (node.left.isNull && node.right.isNull) return true\n    else if (!node.left.isNull && !node.right.isNull) {\n      let ans\n      ans = this.isFull(node.left)\n      ans &= this.isFull(node.right)\n      return ans\n    } else return false\n  }\n\n  countNodes(node = this.root) {\n    if (node.isNull) return 0\n    return this.countNodes(node.left) + 1 + this.countNodes(node.right)\n  }\n\n  //Clears highlight of previously searched nodes\n  clearHighlight() {\n    if (this.highlighted) {\n      this.highlighted.clearHighlight()\n      this.highlighted = null\n    }\n  }\n}\n\nexport default RBT\n","import useTreeState from '../hooks/useTreeState'\nimport {\n  BinaryTreeCheckType,\n  SelfBalancingTreeRefType,\n  TraversalOrderType,\n  TreeStylesType,\n} from '../types'\nimport RBTree from '../data-structures/RedBlackTree'\nimport useTreeStyle from '../hooks/useTreeStyle'\nimport React, { forwardRef, useEffect, useImperativeHandle } from 'react'\nimport { TREE_ID } from '../constants'\nimport { compareArray } from '../util'\n\ntype RedBlackTreeProps = {\n  data?: number[]\n  treeStyles?: TreeStylesType\n}\n\nconst RedBlackTree: React.ForwardRefRenderFunction<\n  SelfBalancingTreeRefType,\n  RedBlackTreeProps\n> = (\n  { data, treeStyles }: RedBlackTreeProps,\n  ref: React.MutableRefObject<SelfBalancingTreeRefType>,\n) => {\n  const { tree, treeJSX, setTree } = useTreeState<RBTree>(null)\n  useTreeStyle(treeStyles)\n\n  useImperativeHandle(ref, () => ({\n    insert: (value: number) => {\n      // if tree is empty\n      if (!tree?.root) {\n        const newTree = new RBTree()\n        newTree.insert(value)\n        setTree(newTree)\n        return\n      }\n\n      tree.insert(value)\n      setTree(tree)\n    },\n    remove: (value: number): boolean => {\n      if (!tree?.root) return false\n\n      if (!tree.search(value)) return false\n      tree.remove(value)\n      setTree(tree.root ? tree : null)\n      return true\n    },\n    search: (value: number): boolean => {\n      if (!tree?.root) return false\n      const foundNode = tree.search(value)\n      if (foundNode) setTree(tree)\n      return foundNode\n    },\n    getData: (traversalOrder: TraversalOrderType): number[] => {\n      const traversalData = []\n      tree[traversalOrder](traversalData)\n      return traversalData\n    },\n    clear: () => {\n      setTree(new RBTree())\n    },\n    generateRandomTree: (countOfNodes: number) => {\n      const newTree = new RBTree(countOfNodes)\n      setTree(newTree)\n    },\n    checkTreeType: (): BinaryTreeCheckType[] => {\n      return tree.checkBinaryTree()\n    },\n  }))\n\n  const handleData = () => {\n    const newTree = new RBTree()\n    data.forEach((elem) => newTree.insert(elem))\n    setTree(newTree)\n  }\n\n  useEffect(() => {\n    if (data) handleData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data])\n\n  return (\n    <div id={TREE_ID}>\n      <ul>{treeJSX}</ul>\n    </div>\n  )\n}\n\n// returns true if data has changed\nconst compareRedBlackTree = (\n  previousPros: RedBlackTreeProps,\n  newProps: RedBlackTreeProps,\n) =>\n  previousPros.data &&\n  newProps.data &&\n  compareArray(previousPros.data, newProps.data)\n\nexport default React.memo(forwardRef(RedBlackTree), compareRedBlackTree)\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import React from 'react'\n\nclass Heap {\n  end: number\n  heap: number[]\n  currentJSX: JSX.Element\n  constructor(num = 0) {\n    this.end = 0\n    this.heap = []\n    this.currentJSX = null\n    if (num) {\n      this.generateRandomHeap(num)\n    }\n  }\n\n  heapifyUp(j: number) {\n    console.error(j + \": Base class's heapifyUp called\")\n  }\n  heapifyDown(j = 0) {\n    console.error(j + \": Base class's heapifyDown called\")\n  }\n\n  //Checks if heap is empty\n  isEmpty() {\n    return this.end === 0\n  }\n\n  //inserts a new value into the heap\n  insert(value: number) {\n    this.heap[this.end] = value\n    this.heapifyUp(this.end++)\n    this.currentJSX = this.updateJSX()\n  }\n\n  //Extracts the top value\n  removeTop() {\n    if (this.isEmpty()) return null\n    const poppedTopElement = this.heap[0]\n    this.heap[0] = this.heap[--this.end]\n    this.heapifyDown()\n    this.heap.pop()\n    this.currentJSX = this.updateJSX()\n\n    return poppedTopElement\n  }\n\n  //Deletes a specified value\n  deleteEl(value: number, isMinHeap = true) {\n    const index = this.heap.indexOf(value)\n    if (index === -1) return\n    this.heap[index] = isMinHeap\n      ? Number.NEGATIVE_INFINITY\n      : Number.POSITIVE_INFINITY\n    this.heapifyUp(index)\n    this.removeTop()\n  }\n\n  //Updates the whole JSX\n  updateJSX(parentIndex = 0) {\n    if (!this.end) return null\n    const child1Index = 2 * parentIndex + 1\n    const child2Index = child1Index + 1\n\n    if (child2Index >= this.end && child1Index >= this.end) {\n      return (\n        <li key={parentIndex}>\n          <div className=\"normal\">{this.heap[parentIndex]}</div>\n          <ul>\n            <li className=\"null\">\n              <div className=\"null\">null</div>\n            </li>\n            <li className=\"null\">\n              <div className=\"null\">null</div>\n            </li>\n          </ul>\n        </li>\n      )\n    } else if (child2Index >= this.end && child1Index < this.end) {\n      const child1JSX = this.updateJSX(child1Index)\n      return (\n        <li key={parentIndex}>\n          <div className=\"normal\">{this.heap[parentIndex]}</div>\n          <ul>\n            {child1JSX}\n            <li className=\"null\">\n              <div className=\"null\">null</div>\n            </li>\n          </ul>\n        </li>\n      )\n    } else if (child2Index < this.end && child1Index >= this.end) {\n      const child2JSX = this.updateJSX(child2Index)\n      return (\n        <li key={parentIndex}>\n          <div className=\"normal\">{this.heap[parentIndex]}</div>\n          <ul>\n            <li className=\"null\">\n              <div className=\"null\">null</div>\n            </li>\n            {child2JSX}\n          </ul>\n        </li>\n      )\n    } else {\n      const child1JSX = this.updateJSX(child1Index)\n      const child2JSX = this.updateJSX(child2Index)\n      return (\n        <li key={parentIndex}>\n          <div className=\"normal\">{this.heap[parentIndex]}</div>\n          <ul>\n            {child1JSX}\n            {child2JSX}\n          </ul>\n        </li>\n      )\n    }\n  }\n\n  //inserts num random values\n  generateRandomHeap(num: number) {\n    const upper = 0\n    const lower = num * 2 + 10\n    const elements = new Set()\n    for (let i = 0; i < num; i++) {\n      let value = Math.floor(Math.random() * (upper - lower + 1)) + lower\n      while (elements.has(value)) {\n        value = Math.floor(Math.random() * (upper - lower + 1)) + lower\n      }\n      elements.add(value)\n      this.insert(value)\n    }\n  }\n}\n\nexport class MinHeap extends Heap {\n  //Helper functions\n  heapifyUp(childIndex: number) {\n    if (childIndex === 0) return\n    let parentIndex = childIndex\n    if (parentIndex % 2 === 0) parentIndex -= 2\n    else parentIndex--\n    parentIndex /= 2\n    if (this.heap[parentIndex] > this.heap[childIndex]) {\n      ;[this.heap[parentIndex], this.heap[childIndex]] = [\n        this.heap[childIndex],\n        this.heap[parentIndex],\n      ]\n      this.heapifyUp(parentIndex)\n    }\n  }\n\n  heapifyDown(parentIndex = 0) {\n    const child1Index = 2 * parentIndex + 1\n    const child2Index = child1Index + 1\n\n    if (child2Index >= this.end && child1Index >= this.end) return\n    else if (child2Index >= this.end && child1Index < this.end) {\n      if (this.heap[child1Index] < this.heap[parentIndex]) {\n        ;[this.heap[parentIndex], this.heap[child1Index]] = [\n          this.heap[child1Index],\n          this.heap[parentIndex],\n        ]\n        this.heapifyDown(child1Index)\n      }\n    } else if (child2Index < this.end && child1Index >= this.end) {\n      if (this.heap[child2Index] < this.heap[parentIndex]) {\n        ;[this.heap[parentIndex], this.heap[child2Index]] = [\n          this.heap[child2Index],\n          this.heap[parentIndex],\n        ]\n        this.heapifyDown(child2Index)\n      }\n    } else {\n      if (\n        this.heap[parentIndex] > this.heap[child1Index] ||\n        this.heap[parentIndex] > this.heap[child2Index]\n      ) {\n        if (this.heap[child1Index] < this.heap[child2Index]) {\n          ;[this.heap[parentIndex], this.heap[child1Index]] = [\n            this.heap[child1Index],\n            this.heap[parentIndex],\n          ]\n          this.heapifyDown(child1Index)\n        } else {\n          ;[this.heap[parentIndex], this.heap[child2Index]] = [\n            this.heap[child2Index],\n            this.heap[parentIndex],\n          ]\n          this.heapifyDown(child2Index)\n        }\n      }\n    }\n  }\n\n  remove(value: number) {\n    return this.deleteEl(value)\n  }\n}\n\nexport class MaxHeap extends Heap {\n  //Helper Functions\n  heapifyUp(childIndex: number) {\n    if (childIndex === 0) return\n    let parentIndex = childIndex\n    if (parentIndex % 2 === 0) parentIndex -= 2\n    else parentIndex--\n    parentIndex /= 2\n    if (this.heap[parentIndex] < this.heap[childIndex]) {\n      ;[this.heap[parentIndex], this.heap[childIndex]] = [\n        this.heap[childIndex],\n        this.heap[parentIndex],\n      ]\n      this.heapifyUp(parentIndex)\n    }\n  }\n\n  heapifyDown(parentIndex = 0) {\n    const child1Index = 2 * parentIndex + 1\n    const child2Index = child1Index + 1\n\n    if (child2Index >= this.end && child1Index >= this.end) return\n    else if (child2Index >= this.end && child1Index < this.end) {\n      if (this.heap[child1Index] > this.heap[parentIndex]) {\n        ;[this.heap[parentIndex], this.heap[child1Index]] = [\n          this.heap[child1Index],\n          this.heap[parentIndex],\n        ]\n        this.heapifyDown(child1Index)\n      }\n    } else if (child2Index < this.end && child1Index >= this.end) {\n      if (this.heap[child2Index] > this.heap[parentIndex]) {\n        ;[this.heap[parentIndex], this.heap[child2Index]] = [\n          this.heap[child2Index],\n          this.heap[parentIndex],\n        ]\n        this.heapifyDown(child2Index)\n      }\n    } else {\n      if (\n        this.heap[parentIndex] < this.heap[child1Index] ||\n        this.heap[parentIndex] < this.heap[child2Index]\n      ) {\n        if (this.heap[child1Index] > this.heap[child2Index]) {\n          ;[this.heap[parentIndex], this.heap[child1Index]] = [\n            this.heap[child1Index],\n            this.heap[parentIndex],\n          ]\n          this.heapifyDown(child1Index)\n        } else {\n          ;[this.heap[parentIndex], this.heap[child2Index]] = [\n            this.heap[child2Index],\n            this.heap[parentIndex],\n          ]\n          this.heapifyDown(child2Index)\n        }\n      }\n    }\n  }\n  remove(value: number) {\n    return this.deleteEl(value, false)\n  }\n}\n","import React, { forwardRef, useEffect, useImperativeHandle } from 'react'\nimport { TREE_ID } from '../constants'\nimport { MinHeap as MinHeapDataStructure } from '../data-structures/Heap'\nimport useTreeState from '../hooks/useTreeState'\nimport useTreeStyle from '../hooks/useTreeStyle'\nimport { HeapRefType, TreeStylesType } from '../types'\nimport { compareArray } from '../util'\n\ntype HeapProps = {\n  data?: number[]\n  treeStyles?: TreeStylesType\n}\n\nconst MinHeap: React.ForwardRefRenderFunction<HeapRefType, HeapProps> = (\n  { data, treeStyles }: HeapProps,\n  ref: React.MutableRefObject<HeapRefType>,\n) => {\n  const { tree, treeJSX, setTree } = useTreeState<MinHeapDataStructure>(null)\n  useTreeStyle(treeStyles)\n\n  useImperativeHandle(ref, () => ({\n    insert: (value: number) => {\n      // if tree is empty\n      if (tree?.isEmpty()) {\n        const newTree = new MinHeapDataStructure()\n        newTree.insert(value)\n        setTree(newTree)\n        return\n      }\n\n      tree.insert(value)\n      setTree(tree)\n    },\n    remove: (value: number): boolean => {\n      if (tree?.isEmpty()) return false\n      tree.remove(value)\n      setTree(tree)\n      return true\n    },\n    getData: (): number[] => {\n      return tree.heap\n    },\n    clear: () => {\n      setTree(new MinHeapDataStructure())\n    },\n    generateRandomTree: (countOfNodes: number) => {\n      const newTree = new MinHeapDataStructure(countOfNodes)\n      setTree(newTree)\n    },\n    extractTop: () => {\n      const top = tree.removeTop()\n      setTree(tree)\n      return top\n    },\n  }))\n\n  const handleData = () => {\n    const newTree = new MinHeapDataStructure()\n    data.forEach((elem) => newTree.insert(elem))\n    setTree(newTree)\n  }\n\n  useEffect(() => {\n    if (data) handleData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data])\n\n  return (\n    <div id={TREE_ID}>\n      <ul>{treeJSX}</ul>\n    </div>\n  )\n}\n\n// returns true if data has changed\nconst compareHeap = (previousPros: HeapProps, newProps: HeapProps) =>\n  previousPros.data &&\n  newProps.data &&\n  compareArray(previousPros.data, newProps.data)\n\nexport default React.memo(forwardRef(MinHeap), compareHeap)\n","import React, { forwardRef, useEffect, useImperativeHandle } from 'react'\nimport { TREE_ID } from '../constants'\nimport { MaxHeap as MaxHeapDataStructure } from '../data-structures/Heap'\nimport useTreeState from '../hooks/useTreeState'\nimport useTreeStyle from '../hooks/useTreeStyle'\nimport { HeapRefType, TreeStylesType } from '../types'\nimport { compareArray } from '../util'\n\ntype HeapProps = {\n  data?: number[]\n  treeStyles?: TreeStylesType\n}\n\nconst MaxHeap: React.ForwardRefRenderFunction<HeapRefType, HeapProps> = (\n  { data, treeStyles }: HeapProps,\n  ref: React.MutableRefObject<HeapRefType>,\n) => {\n  const { tree, treeJSX, setTree } = useTreeState<MaxHeapDataStructure>(null)\n  useTreeStyle(treeStyles)\n\n  useImperativeHandle(ref, () => ({\n    insert: (value: number) => {\n      // if tree is empty\n      if (tree?.isEmpty()) {\n        const newTree = new MaxHeapDataStructure()\n        newTree.insert(value)\n        setTree(newTree)\n        return\n      }\n\n      tree.insert(value)\n      setTree(tree)\n    },\n    remove: (value: number): boolean => {\n      if (tree?.isEmpty()) return false\n      tree.remove(value)\n      setTree(tree)\n      return true\n    },\n    getData: (): number[] => {\n      return tree.heap\n    },\n    clear: () => {\n      setTree(new MaxHeapDataStructure())\n    },\n    generateRandomTree: (countOfNodes: number) => {\n      const newTree = new MaxHeapDataStructure(countOfNodes)\n      setTree(newTree)\n    },\n    extractTop: () => {\n      const top = tree.removeTop()\n      setTree(tree)\n      return top\n    },\n  }))\n\n  const handleData = () => {\n    const newTree = new MaxHeapDataStructure()\n    data.forEach((elem) => newTree.insert(elem))\n    setTree(newTree)\n  }\n\n  useEffect(() => {\n    if (data) handleData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data])\n\n  return (\n    <div id={TREE_ID}>\n      <ul>{treeJSX}</ul>\n    </div>\n  )\n}\n\n// returns true if data has changed\nconst compareHeap = (previousPros: HeapProps, newProps: HeapProps) =>\n  previousPros.data &&\n  newProps.data &&\n  compareArray(previousPros.data, newProps.data)\n\nexport default React.memo(forwardRef(MaxHeap), compareHeap)\n","import React, { useEffect, useRef, useState } from 'react'\nimport {\n  BalanceFunctionType,\n  BinaryTreeRefType,\n  CheckTreeTypeFunctionType,\n  ClearFunctionType,\n  GenerateRandomTreeFunctionType,\n  GetDataFunctionType,\n  InsertFunctionType,\n  RemoveFunctionType,\n  SearchFunctionType,\n  TraversalOrderType,\n} from '../types'\n\ntype UseTreeReturnType = {\n  ref: React.MutableRefObject<BinaryTreeRefType>\n  insert: InsertFunctionType\n  remove: RemoveFunctionType\n  search: SearchFunctionType\n  getData: GetDataFunctionType\n  clear: ClearFunctionType\n  balance: BalanceFunctionType\n  generateRandomTree: GenerateRandomTreeFunctionType\n  checkTreeType: CheckTreeTypeFunctionType\n}\n\nconst useBinarySearchTree = (): UseTreeReturnType => {\n  const ref = useRef<BinaryTreeRefType>(null)\n  const [insertFunction, setInsertFunction] = useState<InsertFunctionType>(null)\n  const [removeFunction, setRemoveFunction] = useState<RemoveFunctionType>(null)\n  const [searchFunction, setSearchFunction] = useState<SearchFunctionType>(null)\n  const [getDataFunction, setGetDataFunction] =\n    useState<GetDataFunctionType>(null)\n  const [clearFunction, setClearFunction] = useState<ClearFunctionType>(null)\n  const [balanceFunction, setBalanceFunction] =\n    useState<BalanceFunctionType>(null)\n  const [generateRandomTreeFunction, setGenerateRandomTreeFunction] =\n    useState<GenerateRandomTreeFunctionType>(null)\n  const [checkTreeTypeFunction, setCheckTreeTypeFunction] =\n    useState<CheckTreeTypeFunctionType>(null)\n\n  useEffect(() => {\n    setInsertFunction(() => (value: number) => ref?.current?.insert(value))\n    setRemoveFunction(() => (value: number) => ref?.current?.remove(value))\n    setSearchFunction(() => (value: number) => ref?.current?.search(value))\n    setGetDataFunction(\n      () => (traversalOrder: TraversalOrderType) =>\n        ref?.current?.getData(traversalOrder),\n    )\n    setClearFunction(() => () => ref?.current?.clear())\n    setBalanceFunction(() => () => ref?.current?.balance())\n    setGenerateRandomTreeFunction(\n      () => (countOfNodes: number) =>\n        ref?.current?.generateRandomTree(countOfNodes),\n    )\n    setCheckTreeTypeFunction(() => () => ref?.current?.checkTreeType())\n  }, [ref])\n\n  return {\n    ref,\n    insert: insertFunction,\n    remove: removeFunction,\n    search: searchFunction,\n    getData: getDataFunction,\n    clear: clearFunction,\n    balance: balanceFunction,\n    generateRandomTree: generateRandomTreeFunction,\n    checkTreeType: checkTreeTypeFunction,\n  }\n}\n\nexport default useBinarySearchTree\n","import { MutableRefObject, useEffect, useRef, useState } from 'react'\nimport {\n  GenerateRandomTrieFunctionType,\n  GetAllWordsFunctionTrieType,\n  InsertFunctionTrieType,\n  RemoveFunctionTrieType,\n  RemoveHighlightTrieFunctionType,\n  SearchFunctionTrieType,\n  SearchPrefixFunctionTrieType,\n  TrieRefType,\n} from '../types'\n\ntype ReturnType = {\n  ref: MutableRefObject<TrieRefType>\n  insert: InsertFunctionTrieType\n  remove: RemoveFunctionTrieType\n  search: SearchFunctionTrieType\n  searchPrefix: SearchPrefixFunctionTrieType\n  getAllWords: GetAllWordsFunctionTrieType\n  generateRandomTrie: GenerateRandomTrieFunctionType\n  removeHighlight: RemoveHighlightTrieFunctionType\n}\n\nconst useTrie = (): ReturnType => {\n  const ref = useRef<TrieRefType>(null)\n  const [insert, setInsert] = useState<InsertFunctionTrieType>(null)\n  const [remove, setRemove] = useState<RemoveFunctionTrieType>(null)\n  const [search, setSearch] = useState<SearchFunctionTrieType>(null)\n  const [searchPrefix, setSearchPrefix] =\n    useState<SearchPrefixFunctionTrieType>(null)\n  const [getAllWords, setGetAllWords] =\n    useState<GetAllWordsFunctionTrieType>(null)\n  const [generateRandomTrie, setGenerateRandomTrie] =\n    useState<GenerateRandomTrieFunctionType>(null)\n  const [removeHighlight, setRemoveHighlight] =\n    useState<RemoveHighlightTrieFunctionType>(null)\n\n  useEffect(() => {\n    setInsert(() => (word: string) => ref?.current?.insert(word))\n    setRemove(() => (word: string) => ref?.current?.remove(word))\n    setSearch(() => (word: string) => ref?.current?.search(word))\n    setSearchPrefix(() => (word: string) => ref?.current?.searchPrefix(word))\n    setGetAllWords(() => () => ref?.current?.getAllWords())\n    setGenerateRandomTrie(\n      () => (num: number) => ref?.current?.generateRandomTrie(num),\n    )\n    setRemoveHighlight(() => () => ref?.current?.removeHighlight())\n  }, [ref])\n\n  return {\n    ref,\n    insert,\n    generateRandomTrie,\n    getAllWords,\n    remove,\n    search,\n    searchPrefix,\n    removeHighlight,\n  }\n}\n\nexport default useTrie\n","import React, { useEffect, useRef, useState } from 'react'\nimport {\n  SelfBalancingTreeRefType,\n  CheckTreeTypeFunctionType,\n  ClearFunctionType,\n  GenerateRandomTreeFunctionType,\n  GetDataFunctionType,\n  InsertFunctionType,\n  RemoveFunctionType,\n  SearchFunctionType,\n  TraversalOrderType,\n} from '../types'\n\ntype UseTreeReturnType = {\n  ref: React.MutableRefObject<SelfBalancingTreeRefType>\n  insert: InsertFunctionType\n  remove: RemoveFunctionType\n  search: SearchFunctionType\n  getData: GetDataFunctionType\n  clear: ClearFunctionType\n  generateRandomTree: GenerateRandomTreeFunctionType\n  checkTreeType: CheckTreeTypeFunctionType\n}\n\nconst useSelfBalancingTree = (): UseTreeReturnType => {\n  const ref = useRef<SelfBalancingTreeRefType>(null)\n  const [insertFunction, setInsertFunction] = useState<InsertFunctionType>(null)\n  const [removeFunction, setRemoveFunction] = useState<RemoveFunctionType>(null)\n  const [searchFunction, setSearchFunction] = useState<SearchFunctionType>(null)\n  const [getDataFunction, setGetDataFunction] =\n    useState<GetDataFunctionType>(null)\n  const [clearFunction, setClearFunction] = useState<ClearFunctionType>(null)\n  const [generateRandomTreeFunction, setGenerateRandomTreeFunction] =\n    useState<GenerateRandomTreeFunctionType>(null)\n  const [checkTreeTypeFunction, setCheckTreeTypeFunction] =\n    useState<CheckTreeTypeFunctionType>(null)\n\n  useEffect(() => {\n    setInsertFunction(() => (value: number) => ref?.current?.insert(value))\n    setRemoveFunction(() => (value: number) => ref?.current?.remove(value))\n    setSearchFunction(() => (value: number) => ref?.current?.search(value))\n    setGetDataFunction(\n      () => (traversalOrder: TraversalOrderType) =>\n        ref?.current?.getData(traversalOrder),\n    )\n    setClearFunction(() => () => ref?.current?.clear())\n    setGenerateRandomTreeFunction(\n      () => (countOfNodes: number) =>\n        ref?.current?.generateRandomTree(countOfNodes),\n    )\n    setCheckTreeTypeFunction(() => () => ref?.current?.checkTreeType())\n  }, [ref])\n\n  return {\n    ref,\n    insert: insertFunction,\n    remove: removeFunction,\n    search: searchFunction,\n    getData: getDataFunction,\n    clear: clearFunction,\n    generateRandomTree: generateRandomTreeFunction,\n    checkTreeType: checkTreeTypeFunction,\n  }\n}\n\nexport default useSelfBalancingTree\n","import React, { useEffect, useRef, useState } from 'react'\nimport {\n  ClearFunctionType,\n  ExtractTopFunctionType,\n  GenerateRandomTreeFunctionType,\n  GetHeapDataFunctionType,\n  HeapRefType,\n  InsertFunctionType,\n  RemoveFunctionType,\n} from '../types'\n\ntype UseTreeReturnType = {\n  ref: React.MutableRefObject<HeapRefType>\n  insert: InsertFunctionType\n  remove: RemoveFunctionType\n  getData: GetHeapDataFunctionType\n  clear: ClearFunctionType\n  generateRandomTree: GenerateRandomTreeFunctionType\n  extractTop: ExtractTopFunctionType\n}\n\nconst useHeap = (): UseTreeReturnType => {\n  const ref = useRef<HeapRefType>(null)\n  const [insertFunction, setInsertFunction] = useState<InsertFunctionType>(null)\n  const [removeFunction, setRemoveFunction] = useState<RemoveFunctionType>(null)\n  const [clearFunction, setClearFunction] = useState<ClearFunctionType>(null)\n  const [generateRandomTreeFunction, setGenerateRandomTreeFunction] =\n    useState<GenerateRandomTreeFunctionType>(null)\n  const [extractTopFunction, setExtractTopFunction] =\n    useState<ExtractTopFunctionType>(null)\n  const [getDataFunction, setGetDataFunction] =\n    useState<GetHeapDataFunctionType>(null)\n\n  useEffect(() => {\n    setInsertFunction(() => (value: number) => ref?.current?.insert(value))\n    setRemoveFunction(() => (value: number) => ref?.current?.remove(value))\n    setClearFunction(() => () => ref?.current?.clear())\n    setGenerateRandomTreeFunction(\n      () => (countOfNodes: number) =>\n        ref?.current?.generateRandomTree(countOfNodes),\n    )\n    setExtractTopFunction(() => () => ref?.current?.extractTop())\n    setGetDataFunction(() => () => ref?.current?.getData())\n  }, [ref])\n\n  return {\n    ref,\n    insert: insertFunction,\n    remove: removeFunction,\n    clear: clearFunction,\n    generateRandomTree: generateRandomTreeFunction,\n    extractTop: extractTopFunction,\n    getData: getDataFunction,\n  }\n}\n\nexport default useHeap\n"]},"metadata":{},"sourceType":"module"}