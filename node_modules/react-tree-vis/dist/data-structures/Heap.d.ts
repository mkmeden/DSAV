/// <reference types="react" />
declare class Heap {
    end: number;
    heap: number[];
    currentJSX: JSX.Element;
    constructor(num?: number);
    heapifyUp(j: number): void;
    heapifyDown(j?: number): void;
    isEmpty(): boolean;
    insert(value: number): void;
    removeTop(): number;
    deleteEl(value: number, isMinHeap?: boolean): void;
    updateJSX(parentIndex?: number): JSX.Element;
    generateRandomHeap(num: number): void;
}
export declare class MinHeap extends Heap {
    heapifyUp(childIndex: number): void;
    heapifyDown(parentIndex?: number): void;
    remove(value: number): void;
}
export declare class MaxHeap extends Heap {
    heapifyUp(childIndex: number): void;
    heapifyDown(parentIndex?: number): void;
    remove(value: number): void;
}
export {};
